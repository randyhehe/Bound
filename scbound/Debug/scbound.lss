
scbound.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001b78  00001c0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b78  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000139  00800106  00800106  00001c12  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001c12  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c44  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001c84  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000171b  00000000  00000000  00001d7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000041d  00000000  00000000  00003497  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fe5  00000000  00000000  000038b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000358  00000000  00000000  0000489c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046d  00000000  00000000  00004bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ecc  00000000  00000000  00005061  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00005f2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	1b c1       	rjmp	.+566    	; 0x26c <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e8 e7       	ldi	r30, 0x78	; 120
      a0:	fb e1       	ldi	r31, 0x1B	; 27
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 30       	cpi	r26, 0x06	; 6
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	a6 e0       	ldi	r26, 0x06	; 6
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	af 33       	cpi	r26, 0x3F	; 63
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	76 d4       	rcall	.+2284   	; 0x9b0 <main>
      c4:	0c 94 ba 0d 	jmp	0x1b74	; 0x1b74 <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <ETIMERTick>:
	}
	
	// Display explosion
	d3_setMatrixColor(explosions.matricies[explosions.displayIndex].m, RED);
	explosions.displayIndex++;
}
      ca:	00 97       	sbiw	r24, 0x00	; 0
      cc:	21 f0       	breq	.+8      	; 0xd6 <ETIMERTick+0xc>
      ce:	81 30       	cpi	r24, 0x01	; 1
      d0:	91 05       	cpc	r25, r1
      d2:	49 f0       	breq	.+18     	; 0xe6 <ETIMERTick+0x1c>
      d4:	05 c0       	rjmp	.+10     	; 0xe0 <ETIMERTick+0x16>
      d6:	10 92 07 01 	sts	0x0107, r1
      da:	10 92 06 01 	sts	0x0106, r1
      de:	03 c0       	rjmp	.+6      	; 0xe6 <ETIMERTick+0x1c>
      e0:	81 30       	cpi	r24, 0x01	; 1
      e2:	91 05       	cpc	r25, r1
      e4:	c9 f5       	brne	.+114    	; 0x158 <ETIMERTick+0x8e>
      e6:	80 91 06 01 	lds	r24, 0x0106
      ea:	90 91 07 01 	lds	r25, 0x0107
      ee:	01 96       	adiw	r24, 0x01	; 1
      f0:	90 93 07 01 	sts	0x0107, r25
      f4:	80 93 06 01 	sts	0x0106, r24
      f8:	40 91 0b 01 	lds	r20, 0x010B
      fc:	50 91 0c 01 	lds	r21, 0x010C
     100:	60 91 0d 01 	lds	r22, 0x010D
     104:	70 91 0e 01 	lds	r23, 0x010E
     108:	4f 5f       	subi	r20, 0xFF	; 255
     10a:	5f 4f       	sbci	r21, 0xFF	; 255
     10c:	6f 4f       	sbci	r22, 0xFF	; 255
     10e:	7f 4f       	sbci	r23, 0xFF	; 255
     110:	40 93 0b 01 	sts	0x010B, r20
     114:	50 93 0c 01 	sts	0x010C, r21
     118:	60 93 0d 01 	sts	0x010D, r22
     11c:	70 93 0e 01 	sts	0x010E, r23
     120:	20 91 00 01 	lds	r18, 0x0100
     124:	30 91 01 01 	lds	r19, 0x0101
     128:	28 17       	cp	r18, r24
     12a:	39 07       	cpc	r19, r25
     12c:	98 f4       	brcc	.+38     	; 0x154 <ETIMERTick+0x8a>
     12e:	80 91 0a 01 	lds	r24, 0x010A
     132:	81 11       	cpse	r24, r1
     134:	04 c0       	rjmp	.+8      	; 0x13e <ETIMERTick+0x74>
     136:	81 e0       	ldi	r24, 0x01	; 1
     138:	80 93 0a 01 	sts	0x010A, r24
     13c:	04 c0       	rjmp	.+8      	; 0x146 <ETIMERTick+0x7c>
     13e:	81 30       	cpi	r24, 0x01	; 1
     140:	11 f4       	brne	.+4      	; 0x146 <ETIMERTick+0x7c>
     142:	10 92 0a 01 	sts	0x010A, r1
     146:	10 92 07 01 	sts	0x0107, r1
     14a:	10 92 06 01 	sts	0x0106, r1
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	08 95       	ret
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	08 95       	ret

0000015a <initTasks>:
     15a:	e3 e1       	ldi	r30, 0x13	; 19
     15c:	f1 e0       	ldi	r31, 0x01	; 1
     15e:	11 82       	std	Z+1, r1	; 0x01
     160:	10 82       	st	Z, r1
     162:	84 e1       	ldi	r24, 0x14	; 20
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	a0 e0       	ldi	r26, 0x00	; 0
     168:	b0 e0       	ldi	r27, 0x00	; 0
     16a:	82 83       	std	Z+2, r24	; 0x02
     16c:	93 83       	std	Z+3, r25	; 0x03
     16e:	a4 83       	std	Z+4, r26	; 0x04
     170:	b5 83       	std	Z+5, r27	; 0x05
     172:	86 83       	std	Z+6, r24	; 0x06
     174:	97 83       	std	Z+7, r25	; 0x07
     176:	a0 87       	std	Z+8, r26	; 0x08
     178:	b1 87       	std	Z+9, r27	; 0x09
     17a:	87 ee       	ldi	r24, 0xE7	; 231
     17c:	92 e0       	ldi	r25, 0x02	; 2
     17e:	93 87       	std	Z+11, r25	; 0x0b
     180:	82 87       	std	Z+10, r24	; 0x0a
     182:	15 86       	std	Z+13, r1	; 0x0d
     184:	14 86       	std	Z+12, r1	; 0x0c
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	a0 e0       	ldi	r26, 0x00	; 0
     18c:	b0 e0       	ldi	r27, 0x00	; 0
     18e:	86 87       	std	Z+14, r24	; 0x0e
     190:	97 87       	std	Z+15, r25	; 0x0f
     192:	a0 8b       	std	Z+16, r26	; 0x10
     194:	b1 8b       	std	Z+17, r27	; 0x11
     196:	82 8b       	std	Z+18, r24	; 0x12
     198:	93 8b       	std	Z+19, r25	; 0x13
     19a:	a4 8b       	std	Z+20, r26	; 0x14
     19c:	b5 8b       	std	Z+21, r27	; 0x15
     19e:	85 e6       	ldi	r24, 0x65	; 101
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	97 8b       	std	Z+23, r25	; 0x17
     1a4:	86 8b       	std	Z+22, r24	; 0x16
     1a6:	08 95       	ret

000001a8 <TimerOn>:
     1a8:	8b e0       	ldi	r24, 0x0B	; 11
     1aa:	80 93 81 00 	sts	0x0081, r24
     1ae:	8d e7       	ldi	r24, 0x7D	; 125
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	90 93 89 00 	sts	0x0089, r25
     1b6:	80 93 88 00 	sts	0x0088, r24
     1ba:	82 e0       	ldi	r24, 0x02	; 2
     1bc:	80 93 6f 00 	sts	0x006F, r24
     1c0:	10 92 85 00 	sts	0x0085, r1
     1c4:	10 92 84 00 	sts	0x0084, r1
     1c8:	80 91 02 01 	lds	r24, 0x0102
     1cc:	90 91 03 01 	lds	r25, 0x0103
     1d0:	a0 91 04 01 	lds	r26, 0x0104
     1d4:	b0 91 05 01 	lds	r27, 0x0105
     1d8:	80 93 0f 01 	sts	0x010F, r24
     1dc:	90 93 10 01 	sts	0x0110, r25
     1e0:	a0 93 11 01 	sts	0x0111, r26
     1e4:	b0 93 12 01 	sts	0x0112, r27
     1e8:	8f b7       	in	r24, 0x3f	; 63
     1ea:	80 68       	ori	r24, 0x80	; 128
     1ec:	8f bf       	out	0x3f, r24	; 63
     1ee:	08 95       	ret

000001f0 <TimerISR>:
     1f0:	ef 92       	push	r14
     1f2:	ff 92       	push	r15
     1f4:	0f 93       	push	r16
     1f6:	1f 93       	push	r17
     1f8:	cf 93       	push	r28
     1fa:	df 93       	push	r29
     1fc:	c3 e1       	ldi	r28, 0x13	; 19
     1fe:	d1 e0       	ldi	r29, 0x01	; 1
     200:	0f 2e       	mov	r0, r31
     202:	fb e2       	ldi	r31, 0x2B	; 43
     204:	ef 2e       	mov	r14, r31
     206:	f1 e0       	ldi	r31, 0x01	; 1
     208:	ff 2e       	mov	r15, r31
     20a:	f0 2d       	mov	r31, r0
     20c:	8e 01       	movw	r16, r28
     20e:	4e 81       	ldd	r20, Y+6	; 0x06
     210:	5f 81       	ldd	r21, Y+7	; 0x07
     212:	68 85       	ldd	r22, Y+8	; 0x08
     214:	79 85       	ldd	r23, Y+9	; 0x09
     216:	8a 81       	ldd	r24, Y+2	; 0x02
     218:	9b 81       	ldd	r25, Y+3	; 0x03
     21a:	ac 81       	ldd	r26, Y+4	; 0x04
     21c:	bd 81       	ldd	r27, Y+5	; 0x05
     21e:	48 17       	cp	r20, r24
     220:	59 07       	cpc	r21, r25
     222:	6a 07       	cpc	r22, r26
     224:	7b 07       	cpc	r23, r27
     226:	58 f0       	brcs	.+22     	; 0x23e <TimerISR+0x4e>
     228:	ea 85       	ldd	r30, Y+10	; 0x0a
     22a:	fb 85       	ldd	r31, Y+11	; 0x0b
     22c:	88 81       	ld	r24, Y
     22e:	99 81       	ldd	r25, Y+1	; 0x01
     230:	09 95       	icall
     232:	99 83       	std	Y+1, r25	; 0x01
     234:	88 83       	st	Y, r24
     236:	1e 82       	std	Y+6, r1	; 0x06
     238:	1f 82       	std	Y+7, r1	; 0x07
     23a:	18 86       	std	Y+8, r1	; 0x08
     23c:	19 86       	std	Y+9, r1	; 0x09
     23e:	f8 01       	movw	r30, r16
     240:	86 81       	ldd	r24, Z+6	; 0x06
     242:	97 81       	ldd	r25, Z+7	; 0x07
     244:	a0 85       	ldd	r26, Z+8	; 0x08
     246:	b1 85       	ldd	r27, Z+9	; 0x09
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	a1 1d       	adc	r26, r1
     24c:	b1 1d       	adc	r27, r1
     24e:	86 83       	std	Z+6, r24	; 0x06
     250:	97 83       	std	Z+7, r25	; 0x07
     252:	a0 87       	std	Z+8, r26	; 0x08
     254:	b1 87       	std	Z+9, r27	; 0x09
     256:	2c 96       	adiw	r28, 0x0c	; 12
     258:	ce 15       	cp	r28, r14
     25a:	df 05       	cpc	r29, r15
     25c:	b9 f6       	brne	.-82     	; 0x20c <TimerISR+0x1c>
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	1f 91       	pop	r17
     264:	0f 91       	pop	r16
     266:	ff 90       	pop	r15
     268:	ef 90       	pop	r14
     26a:	08 95       	ret

0000026c <__vector_13>:
     26c:	1f 92       	push	r1
     26e:	0f 92       	push	r0
     270:	0f b6       	in	r0, 0x3f	; 63
     272:	0f 92       	push	r0
     274:	11 24       	eor	r1, r1
     276:	0b b6       	in	r0, 0x3b	; 59
     278:	0f 92       	push	r0
     27a:	2f 93       	push	r18
     27c:	3f 93       	push	r19
     27e:	4f 93       	push	r20
     280:	5f 93       	push	r21
     282:	6f 93       	push	r22
     284:	7f 93       	push	r23
     286:	8f 93       	push	r24
     288:	9f 93       	push	r25
     28a:	af 93       	push	r26
     28c:	bf 93       	push	r27
     28e:	ef 93       	push	r30
     290:	ff 93       	push	r31
     292:	80 91 0f 01 	lds	r24, 0x010F
     296:	90 91 10 01 	lds	r25, 0x0110
     29a:	a0 91 11 01 	lds	r26, 0x0111
     29e:	b0 91 12 01 	lds	r27, 0x0112
     2a2:	01 97       	sbiw	r24, 0x01	; 1
     2a4:	a1 09       	sbc	r26, r1
     2a6:	b1 09       	sbc	r27, r1
     2a8:	80 93 0f 01 	sts	0x010F, r24
     2ac:	90 93 10 01 	sts	0x0110, r25
     2b0:	a0 93 11 01 	sts	0x0111, r26
     2b4:	b0 93 12 01 	sts	0x0112, r27
     2b8:	89 2b       	or	r24, r25
     2ba:	8a 2b       	or	r24, r26
     2bc:	8b 2b       	or	r24, r27
     2be:	89 f4       	brne	.+34     	; 0x2e2 <__vector_13+0x76>
     2c0:	97 df       	rcall	.-210    	; 0x1f0 <TimerISR>
     2c2:	80 91 02 01 	lds	r24, 0x0102
     2c6:	90 91 03 01 	lds	r25, 0x0103
     2ca:	a0 91 04 01 	lds	r26, 0x0104
     2ce:	b0 91 05 01 	lds	r27, 0x0105
     2d2:	80 93 0f 01 	sts	0x010F, r24
     2d6:	90 93 10 01 	sts	0x0110, r25
     2da:	a0 93 11 01 	sts	0x0111, r26
     2de:	b0 93 12 01 	sts	0x0112, r27
     2e2:	ff 91       	pop	r31
     2e4:	ef 91       	pop	r30
     2e6:	bf 91       	pop	r27
     2e8:	af 91       	pop	r26
     2ea:	9f 91       	pop	r25
     2ec:	8f 91       	pop	r24
     2ee:	7f 91       	pop	r23
     2f0:	6f 91       	pop	r22
     2f2:	5f 91       	pop	r21
     2f4:	4f 91       	pop	r20
     2f6:	3f 91       	pop	r19
     2f8:	2f 91       	pop	r18
     2fa:	0f 90       	pop	r0
     2fc:	0b be       	out	0x3b, r0	; 59
     2fe:	0f 90       	pop	r0
     300:	0f be       	out	0x3f, r0	; 63
     302:	0f 90       	pop	r0
     304:	1f 90       	pop	r1
     306:	18 95       	reti

00000308 <clearSingleMatrix>:
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
     30c:	cd b7       	in	r28, 0x3d	; 61
     30e:	de b7       	in	r29, 0x3e	; 62
     310:	60 97       	sbiw	r28, 0x10	; 16
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	f8 94       	cli
     316:	de bf       	out	0x3e, r29	; 62
     318:	0f be       	out	0x3f, r0	; 63
     31a:	cd bf       	out	0x3d, r28	; 61
     31c:	29 87       	std	Y+9, r18	; 0x09
     31e:	3a 87       	std	Y+10, r19	; 0x0a
     320:	4b 87       	std	Y+11, r20	; 0x0b
     322:	5c 87       	std	Y+12, r21	; 0x0c
     324:	6d 87       	std	Y+13, r22	; 0x0d
     326:	7e 87       	std	Y+14, r23	; 0x0e
     328:	8f 87       	std	Y+15, r24	; 0x0f
     32a:	98 8b       	std	Y+16, r25	; 0x10
     32c:	fe 01       	movw	r30, r28
     32e:	39 96       	adiw	r30, 0x09	; 9
     330:	9e 01       	movw	r18, r28
     332:	2f 5e       	subi	r18, 0xEF	; 239
     334:	3f 4f       	sbci	r19, 0xFF	; 255
     336:	8f ef       	ldi	r24, 0xFF	; 255
     338:	81 93       	st	Z+, r24
     33a:	e2 17       	cp	r30, r18
     33c:	f3 07       	cpc	r31, r19
     33e:	e1 f7       	brne	.-8      	; 0x338 <clearSingleMatrix+0x30>
     340:	88 e0       	ldi	r24, 0x08	; 8
     342:	fe 01       	movw	r30, r28
     344:	39 96       	adiw	r30, 0x09	; 9
     346:	de 01       	movw	r26, r28
     348:	11 96       	adiw	r26, 0x01	; 1
     34a:	01 90       	ld	r0, Z+
     34c:	0d 92       	st	X+, r0
     34e:	8a 95       	dec	r24
     350:	e1 f7       	brne	.-8      	; 0x34a <clearSingleMatrix+0x42>
     352:	29 81       	ldd	r18, Y+1	; 0x01
     354:	3a 81       	ldd	r19, Y+2	; 0x02
     356:	4b 81       	ldd	r20, Y+3	; 0x03
     358:	5c 81       	ldd	r21, Y+4	; 0x04
     35a:	6d 81       	ldd	r22, Y+5	; 0x05
     35c:	7e 81       	ldd	r23, Y+6	; 0x06
     35e:	8f 81       	ldd	r24, Y+7	; 0x07
     360:	98 85       	ldd	r25, Y+8	; 0x08
     362:	60 96       	adiw	r28, 0x10	; 16
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	f8 94       	cli
     368:	de bf       	out	0x3e, r29	; 62
     36a:	0f be       	out	0x3f, r0	; 63
     36c:	cd bf       	out	0x3d, r28	; 61
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <initSingleUserMatrix>:
     374:	ef 92       	push	r14
     376:	ff 92       	push	r15
     378:	0f 93       	push	r16
     37a:	1f 93       	push	r17
     37c:	cf 93       	push	r28
     37e:	df 93       	push	r29
     380:	cd b7       	in	r28, 0x3d	; 61
     382:	de b7       	in	r29, 0x3e	; 62
     384:	2a 97       	sbiw	r28, 0x0a	; 10
     386:	0f b6       	in	r0, 0x3f	; 63
     388:	f8 94       	cli
     38a:	de bf       	out	0x3e, r29	; 62
     38c:	0f be       	out	0x3f, r0	; 63
     38e:	cd bf       	out	0x3d, r28	; 61
     390:	bc 01       	movw	r22, r24
     392:	e9 82       	std	Y+1, r14	; 0x01
     394:	fa 82       	std	Y+2, r15	; 0x02
     396:	0b 83       	std	Y+3, r16	; 0x03
     398:	1c 83       	std	Y+4, r17	; 0x04
     39a:	2d 83       	std	Y+5, r18	; 0x05
     39c:	3e 83       	std	Y+6, r19	; 0x06
     39e:	4f 83       	std	Y+7, r20	; 0x07
     3a0:	58 87       	std	Y+8, r21	; 0x08
     3a2:	fe 01       	movw	r30, r28
     3a4:	31 96       	adiw	r30, 0x01	; 1
     3a6:	9e 01       	movw	r18, r28
     3a8:	27 5f       	subi	r18, 0xF7	; 247
     3aa:	3f 4f       	sbci	r19, 0xFF	; 255
     3ac:	9f ef       	ldi	r25, 0xFF	; 255
     3ae:	91 93       	st	Z+, r25
     3b0:	e2 17       	cp	r30, r18
     3b2:	f3 07       	cpc	r31, r19
     3b4:	e1 f7       	brne	.-8      	; 0x3ae <initSingleUserMatrix+0x3a>
     3b6:	99 81       	ldd	r25, Y+1	; 0x01
     3b8:	97 7f       	andi	r25, 0xF7	; 247
     3ba:	99 83       	std	Y+1, r25	; 0x01
     3bc:	19 86       	std	Y+9, r1	; 0x09
     3be:	83 e0       	ldi	r24, 0x03	; 3
     3c0:	8a 87       	std	Y+10, r24	; 0x0a
     3c2:	8a e0       	ldi	r24, 0x0A	; 10
     3c4:	fe 01       	movw	r30, r28
     3c6:	31 96       	adiw	r30, 0x01	; 1
     3c8:	db 01       	movw	r26, r22
     3ca:	01 90       	ld	r0, Z+
     3cc:	0d 92       	st	X+, r0
     3ce:	8a 95       	dec	r24
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <initSingleUserMatrix+0x56>
     3d2:	cb 01       	movw	r24, r22
     3d4:	2a 96       	adiw	r28, 0x0a	; 10
     3d6:	0f b6       	in	r0, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	de bf       	out	0x3e, r29	; 62
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	cd bf       	out	0x3d, r28	; 61
     3e0:	df 91       	pop	r29
     3e2:	cf 91       	pop	r28
     3e4:	1f 91       	pop	r17
     3e6:	0f 91       	pop	r16
     3e8:	ff 90       	pop	r15
     3ea:	ef 90       	pop	r14
     3ec:	08 95       	ret

000003ee <shiftSR>:
     3ee:	85 b9       	out	0x05, r24	; 5
     3f0:	29 9a       	sbi	0x05, 1	; 5
     3f2:	15 b8       	out	0x05, r1	; 5
     3f4:	08 95       	ret

000003f6 <shiftWhole>:
     3f6:	20 e0       	ldi	r18, 0x00	; 0
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	e1 e0       	ldi	r30, 0x01	; 1
     3fc:	f0 e0       	ldi	r31, 0x00	; 0
     3fe:	71 e0       	ldi	r23, 0x01	; 1
     400:	60 e0       	ldi	r22, 0x00	; 0
     402:	af 01       	movw	r20, r30
     404:	02 2e       	mov	r0, r18
     406:	02 c0       	rjmp	.+4      	; 0x40c <shiftWhole+0x16>
     408:	44 0f       	add	r20, r20
     40a:	55 1f       	adc	r21, r21
     40c:	0a 94       	dec	r0
     40e:	e2 f7       	brpl	.-8      	; 0x408 <shiftWhole+0x12>
     410:	48 23       	and	r20, r24
     412:	97 2f       	mov	r25, r23
     414:	09 f4       	brne	.+2      	; 0x418 <shiftWhole+0x22>
     416:	96 2f       	mov	r25, r22
     418:	95 b9       	out	0x05, r25	; 5
     41a:	29 9a       	sbi	0x05, 1	; 5
     41c:	65 b9       	out	0x05, r22	; 5
     41e:	2f 5f       	subi	r18, 0xFF	; 255
     420:	3f 4f       	sbci	r19, 0xFF	; 255
     422:	28 30       	cpi	r18, 0x08	; 8
     424:	31 05       	cpc	r19, r1
     426:	69 f7       	brne	.-38     	; 0x402 <shiftWhole+0xc>
     428:	84 e0       	ldi	r24, 0x04	; 4
     42a:	85 b9       	out	0x05, r24	; 5
     42c:	08 95       	ret

0000042e <clearSR>:
     42e:	cf 93       	push	r28
     430:	c8 e0       	ldi	r28, 0x08	; 8
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	dc df       	rcall	.-72     	; 0x3ee <shiftSR>
     436:	c1 50       	subi	r28, 0x01	; 1
     438:	e1 f7       	brne	.-8      	; 0x432 <clearSR+0x4>
     43a:	84 e0       	ldi	r24, 0x04	; 4
     43c:	85 b9       	out	0x05, r24	; 5
     43e:	cf 91       	pop	r28
     440:	08 95       	ret

00000442 <d3_clearSR>:
     442:	f5 df       	rcall	.-22     	; 0x42e <clearSR>
     444:	f4 df       	rcall	.-24     	; 0x42e <clearSR>
     446:	f3 cf       	rjmp	.-26     	; 0x42e <clearSR>
     448:	08 95       	ret

0000044a <d3_setRowMatrixColor>:
     44a:	0f 93       	push	r16
     44c:	1f 93       	push	r17
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	18 2f       	mov	r17, r24
     454:	c9 2f       	mov	r28, r25
     456:	06 2f       	mov	r16, r22
     458:	d4 2f       	mov	r29, r20
     45a:	f3 df       	rcall	.-26     	; 0x442 <d3_clearSR>
     45c:	51 e0       	ldi	r21, 0x01	; 1
     45e:	01 c0       	rjmp	.+2      	; 0x462 <d3_setRowMatrixColor+0x18>
     460:	55 0f       	add	r21, r21
     462:	0a 95       	dec	r16
     464:	ea f7       	brpl	.-6      	; 0x460 <d3_setRowMatrixColor+0x16>
     466:	e1 2f       	mov	r30, r17
     468:	fc 2f       	mov	r31, r28
     46a:	20 e0       	ldi	r18, 0x00	; 0
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	c0 e0       	ldi	r28, 0x00	; 0
     470:	a1 e0       	ldi	r26, 0x01	; 1
     472:	b0 e0       	ldi	r27, 0x00	; 0
     474:	91 91       	ld	r25, Z+
     476:	95 23       	and	r25, r21
     478:	49 f0       	breq	.+18     	; 0x48c <d3_setRowMatrixColor+0x42>
     47a:	cd 01       	movw	r24, r26
     47c:	02 2e       	mov	r0, r18
     47e:	02 c0       	rjmp	.+4      	; 0x484 <d3_setRowMatrixColor+0x3a>
     480:	88 0f       	add	r24, r24
     482:	99 1f       	adc	r25, r25
     484:	0a 94       	dec	r0
     486:	e2 f7       	brpl	.-8      	; 0x480 <d3_setRowMatrixColor+0x36>
     488:	c8 2b       	or	r28, r24
     48a:	09 c0       	rjmp	.+18     	; 0x49e <d3_setRowMatrixColor+0x54>
     48c:	bd 01       	movw	r22, r26
     48e:	02 2e       	mov	r0, r18
     490:	02 c0       	rjmp	.+4      	; 0x496 <d3_setRowMatrixColor+0x4c>
     492:	66 0f       	add	r22, r22
     494:	77 1f       	adc	r23, r23
     496:	0a 94       	dec	r0
     498:	e2 f7       	brpl	.-8      	; 0x492 <d3_setRowMatrixColor+0x48>
     49a:	60 95       	com	r22
     49c:	c6 23       	and	r28, r22
     49e:	2f 5f       	subi	r18, 0xFF	; 255
     4a0:	3f 4f       	sbci	r19, 0xFF	; 255
     4a2:	28 30       	cpi	r18, 0x08	; 8
     4a4:	31 05       	cpc	r19, r1
     4a6:	31 f7       	brne	.-52     	; 0x474 <d3_setRowMatrixColor+0x2a>
     4a8:	d1 30       	cpi	r29, 0x01	; 1
     4aa:	71 f0       	breq	.+28     	; 0x4c8 <d3_setRowMatrixColor+0x7e>
     4ac:	18 f0       	brcs	.+6      	; 0x4b4 <d3_setRowMatrixColor+0x6a>
     4ae:	d2 30       	cpi	r29, 0x02	; 2
     4b0:	31 f0       	breq	.+12     	; 0x4be <d3_setRowMatrixColor+0x74>
     4b2:	0e c0       	rjmp	.+28     	; 0x4d0 <d3_setRowMatrixColor+0x86>
     4b4:	bc df       	rcall	.-136    	; 0x42e <clearSR>
     4b6:	8c 2f       	mov	r24, r28
     4b8:	9e df       	rcall	.-196    	; 0x3f6 <shiftWhole>
     4ba:	b9 df       	rcall	.-142    	; 0x42e <clearSR>
     4bc:	09 c0       	rjmp	.+18     	; 0x4d0 <d3_setRowMatrixColor+0x86>
     4be:	8c 2f       	mov	r24, r28
     4c0:	9a df       	rcall	.-204    	; 0x3f6 <shiftWhole>
     4c2:	b5 df       	rcall	.-150    	; 0x42e <clearSR>
     4c4:	b4 df       	rcall	.-152    	; 0x42e <clearSR>
     4c6:	04 c0       	rjmp	.+8      	; 0x4d0 <d3_setRowMatrixColor+0x86>
     4c8:	b2 df       	rcall	.-156    	; 0x42e <clearSR>
     4ca:	b1 df       	rcall	.-158    	; 0x42e <clearSR>
     4cc:	8c 2f       	mov	r24, r28
     4ce:	93 df       	rcall	.-218    	; 0x3f6 <shiftWhole>
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	0f 91       	pop	r16
     4d8:	08 95       	ret

000004da <d3_setMatrixColor>:
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ff 92       	push	r15
     4e0:	0f 93       	push	r16
     4e2:	1f 93       	push	r17
     4e4:	cf 93       	push	r28
     4e6:	df 93       	push	r29
     4e8:	6c 01       	movw	r12, r24
     4ea:	f6 2e       	mov	r15, r22
     4ec:	c0 e0       	ldi	r28, 0x00	; 0
     4ee:	d0 e0       	ldi	r29, 0x00	; 0
     4f0:	01 e0       	ldi	r16, 0x01	; 1
     4f2:	10 e0       	ldi	r17, 0x00	; 0
     4f4:	98 01       	movw	r18, r16
     4f6:	0c 2e       	mov	r0, r28
     4f8:	02 c0       	rjmp	.+4      	; 0x4fe <d3_setMatrixColor+0x24>
     4fa:	22 0f       	add	r18, r18
     4fc:	33 1f       	adc	r19, r19
     4fe:	0a 94       	dec	r0
     500:	e2 f7       	brpl	.-8      	; 0x4fa <d3_setMatrixColor+0x20>
     502:	2b b9       	out	0x0b, r18	; 11
     504:	4f 2d       	mov	r20, r15
     506:	6c 2f       	mov	r22, r28
     508:	c6 01       	movw	r24, r12
     50a:	9f df       	rcall	.-194    	; 0x44a <d3_setRowMatrixColor>
     50c:	8f ea       	ldi	r24, 0xAF	; 175
     50e:	94 e0       	ldi	r25, 0x04	; 4
     510:	01 97       	sbiw	r24, 0x01	; 1
     512:	f1 f7       	brne	.-4      	; 0x510 <d3_setMatrixColor+0x36>
     514:	00 c0       	rjmp	.+0      	; 0x516 <d3_setMatrixColor+0x3c>
     516:	00 00       	nop
     518:	94 df       	rcall	.-216    	; 0x442 <d3_clearSR>
     51a:	21 96       	adiw	r28, 0x01	; 1
     51c:	c8 30       	cpi	r28, 0x08	; 8
     51e:	d1 05       	cpc	r29, r1
     520:	49 f7       	brne	.-46     	; 0x4f4 <d3_setMatrixColor+0x1a>
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	1f 91       	pop	r17
     528:	0f 91       	pop	r16
     52a:	ff 90       	pop	r15
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	08 95       	ret

00000532 <GetKeypadKey>:
     532:	8f ee       	ldi	r24, 0xEF	; 239
     534:	88 b9       	out	0x08, r24	; 8
     536:	00 00       	nop
     538:	30 9b       	sbis	0x06, 0	; 6
     53a:	29 c0       	rjmp	.+82     	; 0x58e <GetKeypadKey+0x5c>
     53c:	31 9b       	sbis	0x06, 1	; 6
     53e:	29 c0       	rjmp	.+82     	; 0x592 <GetKeypadKey+0x60>
     540:	32 9b       	sbis	0x06, 2	; 6
     542:	29 c0       	rjmp	.+82     	; 0x596 <GetKeypadKey+0x64>
     544:	33 9b       	sbis	0x06, 3	; 6
     546:	29 c0       	rjmp	.+82     	; 0x59a <GetKeypadKey+0x68>
     548:	8f ed       	ldi	r24, 0xDF	; 223
     54a:	88 b9       	out	0x08, r24	; 8
     54c:	00 00       	nop
     54e:	30 9b       	sbis	0x06, 0	; 6
     550:	26 c0       	rjmp	.+76     	; 0x59e <GetKeypadKey+0x6c>
     552:	31 9b       	sbis	0x06, 1	; 6
     554:	26 c0       	rjmp	.+76     	; 0x5a2 <GetKeypadKey+0x70>
     556:	32 9b       	sbis	0x06, 2	; 6
     558:	26 c0       	rjmp	.+76     	; 0x5a6 <GetKeypadKey+0x74>
     55a:	33 9b       	sbis	0x06, 3	; 6
     55c:	26 c0       	rjmp	.+76     	; 0x5aa <GetKeypadKey+0x78>
     55e:	8f eb       	ldi	r24, 0xBF	; 191
     560:	88 b9       	out	0x08, r24	; 8
     562:	00 00       	nop
     564:	30 9b       	sbis	0x06, 0	; 6
     566:	23 c0       	rjmp	.+70     	; 0x5ae <GetKeypadKey+0x7c>
     568:	31 9b       	sbis	0x06, 1	; 6
     56a:	23 c0       	rjmp	.+70     	; 0x5b2 <GetKeypadKey+0x80>
     56c:	32 9b       	sbis	0x06, 2	; 6
     56e:	23 c0       	rjmp	.+70     	; 0x5b6 <GetKeypadKey+0x84>
     570:	33 9b       	sbis	0x06, 3	; 6
     572:	23 c0       	rjmp	.+70     	; 0x5ba <GetKeypadKey+0x88>
     574:	8f e7       	ldi	r24, 0x7F	; 127
     576:	88 b9       	out	0x08, r24	; 8
     578:	00 00       	nop
     57a:	30 9b       	sbis	0x06, 0	; 6
     57c:	20 c0       	rjmp	.+64     	; 0x5be <GetKeypadKey+0x8c>
     57e:	31 9b       	sbis	0x06, 1	; 6
     580:	20 c0       	rjmp	.+64     	; 0x5c2 <GetKeypadKey+0x90>
     582:	32 9b       	sbis	0x06, 2	; 6
     584:	20 c0       	rjmp	.+64     	; 0x5c6 <GetKeypadKey+0x94>
     586:	33 9b       	sbis	0x06, 3	; 6
     588:	20 c0       	rjmp	.+64     	; 0x5ca <GetKeypadKey+0x98>
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	08 95       	ret
     58e:	81 e3       	ldi	r24, 0x31	; 49
     590:	08 95       	ret
     592:	84 e3       	ldi	r24, 0x34	; 52
     594:	08 95       	ret
     596:	87 e3       	ldi	r24, 0x37	; 55
     598:	08 95       	ret
     59a:	8a e2       	ldi	r24, 0x2A	; 42
     59c:	08 95       	ret
     59e:	82 e3       	ldi	r24, 0x32	; 50
     5a0:	08 95       	ret
     5a2:	85 e3       	ldi	r24, 0x35	; 53
     5a4:	08 95       	ret
     5a6:	88 e3       	ldi	r24, 0x38	; 56
     5a8:	08 95       	ret
     5aa:	80 e3       	ldi	r24, 0x30	; 48
     5ac:	08 95       	ret
     5ae:	83 e3       	ldi	r24, 0x33	; 51
     5b0:	08 95       	ret
     5b2:	86 e3       	ldi	r24, 0x36	; 54
     5b4:	08 95       	ret
     5b6:	89 e3       	ldi	r24, 0x39	; 57
     5b8:	08 95       	ret
     5ba:	83 e2       	ldi	r24, 0x23	; 35
     5bc:	08 95       	ret
     5be:	81 e4       	ldi	r24, 0x41	; 65
     5c0:	08 95       	ret
     5c2:	82 e4       	ldi	r24, 0x42	; 66
     5c4:	08 95       	ret
     5c6:	83 e4       	ldi	r24, 0x43	; 67
     5c8:	08 95       	ret
     5ca:	84 e4       	ldi	r24, 0x44	; 68
     5cc:	08 95       	ret

000005ce <KPTick>:
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	ec 01       	movw	r28, r24
     5d4:	81 30       	cpi	r24, 0x01	; 1
     5d6:	91 05       	cpc	r25, r1
     5d8:	51 f0       	breq	.+20     	; 0x5ee <KPTick+0x20>
     5da:	82 30       	cpi	r24, 0x02	; 2
     5dc:	91 05       	cpc	r25, r1
     5de:	09 f4       	brne	.+2      	; 0x5e2 <KPTick+0x14>
     5e0:	a1 c0       	rjmp	.+322    	; 0x724 <KPTick+0x156>
     5e2:	89 2b       	or	r24, r25
     5e4:	09 f0       	breq	.+2      	; 0x5e8 <KPTick+0x1a>
     5e6:	b4 c0       	rjmp	.+360    	; 0x750 <KPTick+0x182>
     5e8:	c1 e0       	ldi	r28, 0x01	; 1
     5ea:	d0 e0       	ldi	r29, 0x00	; 0
     5ec:	b1 c0       	rjmp	.+354    	; 0x750 <KPTick+0x182>
     5ee:	a1 df       	rcall	.-190    	; 0x532 <GetKeypadKey>
     5f0:	80 93 08 01 	sts	0x0108, r24
     5f4:	88 23       	and	r24, r24
     5f6:	09 f4       	brne	.+2      	; 0x5fa <KPTick+0x2c>
     5f8:	ab c0       	rjmp	.+342    	; 0x750 <KPTick+0x182>
     5fa:	84 33       	cpi	r24, 0x34	; 52
     5fc:	21 f5       	brne	.+72     	; 0x646 <KPTick+0x78>
     5fe:	e0 91 35 02 	lds	r30, 0x0235
     602:	e7 30       	cpi	r30, 0x07	; 7
     604:	08 f0       	brcs	.+2      	; 0x608 <KPTick+0x3a>
     606:	93 c0       	rjmp	.+294    	; 0x72e <KPTick+0x160>
     608:	ef 5f       	subi	r30, 0xFF	; 255
     60a:	ad e2       	ldi	r26, 0x2D	; 45
     60c:	b2 e0       	ldi	r27, 0x02	; 2
     60e:	18 96       	adiw	r26, 0x08	; 8
     610:	ec 93       	st	X, r30
     612:	18 97       	sbiw	r26, 0x08	; 8
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	19 96       	adiw	r26, 0x09	; 9
     61c:	0c 90       	ld	r0, X
     61e:	02 c0       	rjmp	.+4      	; 0x624 <KPTick+0x56>
     620:	88 0f       	add	r24, r24
     622:	99 1f       	adc	r25, r25
     624:	0a 94       	dec	r0
     626:	e2 f7       	brpl	.-8      	; 0x620 <KPTick+0x52>
     628:	df 01       	movw	r26, r30
     62a:	a4 5d       	subi	r26, 0xD4	; 212
     62c:	bd 4f       	sbci	r27, 0xFD	; 253
     62e:	9c 91       	ld	r25, X
     630:	98 2b       	or	r25, r24
     632:	9c 93       	st	X, r25
     634:	e3 5d       	subi	r30, 0xD3	; 211
     636:	fd 4f       	sbci	r31, 0xFD	; 253
     638:	80 95       	com	r24
     63a:	90 81       	ld	r25, Z
     63c:	89 23       	and	r24, r25
     63e:	80 83       	st	Z, r24
     640:	c2 e0       	ldi	r28, 0x02	; 2
     642:	d0 e0       	ldi	r29, 0x00	; 0
     644:	85 c0       	rjmp	.+266    	; 0x750 <KPTick+0x182>
     646:	82 33       	cpi	r24, 0x32	; 50
     648:	19 f5       	brne	.+70     	; 0x690 <KPTick+0xc2>
     64a:	20 91 36 02 	lds	r18, 0x0236
     64e:	27 30       	cpi	r18, 0x07	; 7
     650:	08 f0       	brcs	.+2      	; 0x654 <KPTick+0x86>
     652:	70 c0       	rjmp	.+224    	; 0x734 <KPTick+0x166>
     654:	31 e0       	ldi	r19, 0x01	; 1
     656:	32 0f       	add	r19, r18
     658:	ed e2       	ldi	r30, 0x2D	; 45
     65a:	f2 e0       	ldi	r31, 0x02	; 2
     65c:	31 87       	std	Z+9, r19	; 0x09
     65e:	e0 85       	ldd	r30, Z+8	; 0x08
     660:	f0 e0       	ldi	r31, 0x00	; 0
     662:	e3 5d       	subi	r30, 0xD3	; 211
     664:	fd 4f       	sbci	r31, 0xFD	; 253
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	ac 01       	movw	r20, r24
     66c:	02 c0       	rjmp	.+4      	; 0x672 <KPTick+0xa4>
     66e:	44 0f       	add	r20, r20
     670:	55 1f       	adc	r21, r21
     672:	3a 95       	dec	r19
     674:	e2 f7       	brpl	.-8      	; 0x66e <KPTick+0xa0>
     676:	40 95       	com	r20
     678:	02 c0       	rjmp	.+4      	; 0x67e <KPTick+0xb0>
     67a:	88 0f       	add	r24, r24
     67c:	99 1f       	adc	r25, r25
     67e:	2a 95       	dec	r18
     680:	e2 f7       	brpl	.-8      	; 0x67a <KPTick+0xac>
     682:	90 81       	ld	r25, Z
     684:	89 2b       	or	r24, r25
     686:	84 23       	and	r24, r20
     688:	80 83       	st	Z, r24
     68a:	c2 e0       	ldi	r28, 0x02	; 2
     68c:	d0 e0       	ldi	r29, 0x00	; 0
     68e:	60 c0       	rjmp	.+192    	; 0x750 <KPTick+0x182>
     690:	85 33       	cpi	r24, 0x35	; 53
     692:	21 f5       	brne	.+72     	; 0x6dc <KPTick+0x10e>
     694:	e0 91 35 02 	lds	r30, 0x0235
     698:	ee 23       	and	r30, r30
     69a:	09 f4       	brne	.+2      	; 0x69e <KPTick+0xd0>
     69c:	4e c0       	rjmp	.+156    	; 0x73a <KPTick+0x16c>
     69e:	e1 50       	subi	r30, 0x01	; 1
     6a0:	ad e2       	ldi	r26, 0x2D	; 45
     6a2:	b2 e0       	ldi	r27, 0x02	; 2
     6a4:	18 96       	adiw	r26, 0x08	; 8
     6a6:	ec 93       	st	X, r30
     6a8:	18 97       	sbiw	r26, 0x08	; 8
     6aa:	f0 e0       	ldi	r31, 0x00	; 0
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	19 96       	adiw	r26, 0x09	; 9
     6b2:	0c 90       	ld	r0, X
     6b4:	02 c0       	rjmp	.+4      	; 0x6ba <KPTick+0xec>
     6b6:	88 0f       	add	r24, r24
     6b8:	99 1f       	adc	r25, r25
     6ba:	0a 94       	dec	r0
     6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <KPTick+0xe8>
     6be:	df 01       	movw	r26, r30
     6c0:	a2 5d       	subi	r26, 0xD2	; 210
     6c2:	bd 4f       	sbci	r27, 0xFD	; 253
     6c4:	9c 91       	ld	r25, X
     6c6:	98 2b       	or	r25, r24
     6c8:	9c 93       	st	X, r25
     6ca:	e3 5d       	subi	r30, 0xD3	; 211
     6cc:	fd 4f       	sbci	r31, 0xFD	; 253
     6ce:	80 95       	com	r24
     6d0:	90 81       	ld	r25, Z
     6d2:	89 23       	and	r24, r25
     6d4:	80 83       	st	Z, r24
     6d6:	c2 e0       	ldi	r28, 0x02	; 2
     6d8:	d0 e0       	ldi	r29, 0x00	; 0
     6da:	3a c0       	rjmp	.+116    	; 0x750 <KPTick+0x182>
     6dc:	88 33       	cpi	r24, 0x38	; 56
     6de:	81 f5       	brne	.+96     	; 0x740 <KPTick+0x172>
     6e0:	20 91 36 02 	lds	r18, 0x0236
     6e4:	22 23       	and	r18, r18
     6e6:	79 f1       	breq	.+94     	; 0x746 <KPTick+0x178>
     6e8:	3f ef       	ldi	r19, 0xFF	; 255
     6ea:	32 0f       	add	r19, r18
     6ec:	ed e2       	ldi	r30, 0x2D	; 45
     6ee:	f2 e0       	ldi	r31, 0x02	; 2
     6f0:	31 87       	std	Z+9, r19	; 0x09
     6f2:	e0 85       	ldd	r30, Z+8	; 0x08
     6f4:	f0 e0       	ldi	r31, 0x00	; 0
     6f6:	e3 5d       	subi	r30, 0xD3	; 211
     6f8:	fd 4f       	sbci	r31, 0xFD	; 253
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	ac 01       	movw	r20, r24
     700:	02 c0       	rjmp	.+4      	; 0x706 <KPTick+0x138>
     702:	44 0f       	add	r20, r20
     704:	55 1f       	adc	r21, r21
     706:	3a 95       	dec	r19
     708:	e2 f7       	brpl	.-8      	; 0x702 <KPTick+0x134>
     70a:	40 95       	com	r20
     70c:	02 c0       	rjmp	.+4      	; 0x712 <KPTick+0x144>
     70e:	88 0f       	add	r24, r24
     710:	99 1f       	adc	r25, r25
     712:	2a 95       	dec	r18
     714:	e2 f7       	brpl	.-8      	; 0x70e <KPTick+0x140>
     716:	90 81       	ld	r25, Z
     718:	89 2b       	or	r24, r25
     71a:	84 23       	and	r24, r20
     71c:	80 83       	st	Z, r24
     71e:	c2 e0       	ldi	r28, 0x02	; 2
     720:	d0 e0       	ldi	r29, 0x00	; 0
     722:	16 c0       	rjmp	.+44     	; 0x750 <KPTick+0x182>
     724:	06 df       	rcall	.-500    	; 0x532 <GetKeypadKey>
     726:	88 23       	and	r24, r24
     728:	89 f0       	breq	.+34     	; 0x74c <KPTick+0x17e>
     72a:	03 df       	rcall	.-506    	; 0x532 <GetKeypadKey>
     72c:	11 c0       	rjmp	.+34     	; 0x750 <KPTick+0x182>
     72e:	c2 e0       	ldi	r28, 0x02	; 2
     730:	d0 e0       	ldi	r29, 0x00	; 0
     732:	0e c0       	rjmp	.+28     	; 0x750 <KPTick+0x182>
     734:	c2 e0       	ldi	r28, 0x02	; 2
     736:	d0 e0       	ldi	r29, 0x00	; 0
     738:	0b c0       	rjmp	.+22     	; 0x750 <KPTick+0x182>
     73a:	c2 e0       	ldi	r28, 0x02	; 2
     73c:	d0 e0       	ldi	r29, 0x00	; 0
     73e:	08 c0       	rjmp	.+16     	; 0x750 <KPTick+0x182>
     740:	c2 e0       	ldi	r28, 0x02	; 2
     742:	d0 e0       	ldi	r29, 0x00	; 0
     744:	05 c0       	rjmp	.+10     	; 0x750 <KPTick+0x182>
     746:	c2 e0       	ldi	r28, 0x02	; 2
     748:	d0 e0       	ldi	r29, 0x00	; 0
     74a:	02 c0       	rjmp	.+4      	; 0x750 <KPTick+0x182>
     74c:	c1 e0       	ldi	r28, 0x01	; 1
     74e:	d0 e0       	ldi	r29, 0x00	; 0
     750:	ce 01       	movw	r24, r28
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	08 95       	ret

00000758 <initExplosions>:
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62
     760:	9c 01       	movw	r18, r24
     762:	94 e1       	ldi	r25, 0x14	; 20
     764:	91 50       	subi	r25, 0x01	; 1
     766:	f1 f7       	brne	.-4      	; 0x764 <initExplosions+0xc>
     768:	cb 50       	subi	r28, 0x0B	; 11
     76a:	df 4f       	sbci	r29, 0xFF	; 255
     76c:	18 82       	st	Y, r1
     76e:	c5 5f       	subi	r28, 0xF5	; 245
     770:	d0 40       	sbci	r29, 0x00	; 0
     772:	ca 50       	subi	r28, 0x0A	; 10
     774:	df 4f       	sbci	r29, 0xFF	; 255
     776:	18 82       	st	Y, r1
     778:	c6 5f       	subi	r28, 0xF6	; 246
     77a:	d0 40       	sbci	r29, 0x00	; 0
     77c:	82 ef       	ldi	r24, 0xF2	; 242
     77e:	fe 01       	movw	r30, r28
     780:	35 96       	adiw	r30, 0x05	; 5
     782:	d9 01       	movw	r26, r18
     784:	01 90       	ld	r0, Z+
     786:	0d 92       	st	X+, r0
     788:	8a 95       	dec	r24
     78a:	e1 f7       	brne	.-8      	; 0x784 <initExplosions+0x2c>
     78c:	c9 01       	movw	r24, r18
     78e:	df 91       	pop	r29
     790:	cf 91       	pop	r28
     792:	08 95       	ret

00000794 <DeathTick>:
			}
		}
	return state;
}

unsigned char DeathTick() {	
     794:	ef 92       	push	r14
     796:	ff 92       	push	r15
     798:	0f 93       	push	r16
     79a:	1f 93       	push	r17
     79c:	cf 93       	push	r28
     79e:	df 93       	push	r29
     7a0:	cd b7       	in	r28, 0x3d	; 61
     7a2:	de b7       	in	r29, 0x3e	; 62
     7a4:	2a 97       	sbiw	r28, 0x0a	; 10
     7a6:	0f b6       	in	r0, 0x3f	; 63
     7a8:	f8 94       	cli
     7aa:	de bf       	out	0x3e, r29	; 62
     7ac:	0f be       	out	0x3f, r0	; 63
     7ae:	cd bf       	out	0x3d, r28	; 61
	if ((displayBlank == 0) && GetBit(explosions.matricies[explosions.displayIndex].m[userMatrix.row], userMatrix.column) == 0) {
     7b0:	80 91 09 01 	lds	r24, 0x0109
     7b4:	81 11       	cpse	r24, r1
     7b6:	3a c0       	rjmp	.+116    	; 0x82c <DeathTick+0x98>
     7b8:	ed e2       	ldi	r30, 0x2D	; 45
     7ba:	f2 e0       	ldi	r31, 0x02	; 2
#ifndef BIT_H_
#define BIT_H_

unsigned char GetBit(unsigned char bits, unsigned char numShifts) {
	unsigned char mask = 0x01 << numShifts;
     7bc:	21 e0       	ldi	r18, 0x01	; 1
     7be:	30 e0       	ldi	r19, 0x00	; 0
     7c0:	01 84       	ldd	r0, Z+9	; 0x09
     7c2:	02 c0       	rjmp	.+4      	; 0x7c8 <DeathTick+0x34>
     7c4:	22 0f       	add	r18, r18
     7c6:	33 1f       	adc	r19, r19
     7c8:	0a 94       	dec	r0
     7ca:	e2 f7       	brpl	.-8      	; 0x7c4 <DeathTick+0x30>
     7cc:	90 91 2c 02 	lds	r25, 0x022C
     7d0:	e0 85       	ldd	r30, Z+8	; 0x08
     7d2:	f0 e0       	ldi	r31, 0x00	; 0
     7d4:	48 e0       	ldi	r20, 0x08	; 8
     7d6:	94 9f       	mul	r25, r20
     7d8:	e0 0d       	add	r30, r0
     7da:	f1 1d       	adc	r31, r1
     7dc:	11 24       	eor	r1, r1
     7de:	e5 5c       	subi	r30, 0xC5	; 197
     7e0:	fe 4f       	sbci	r31, 0xFE	; 254
	return ((bits & mask) != 0);
     7e2:	90 81       	ld	r25, Z
     7e4:	29 23       	and	r18, r25
     7e6:	19 f5       	brne	.+70     	; 0x82e <DeathTick+0x9a>
		userMatrix = initSingleUserMatrix(userMatrix);
     7e8:	e0 90 2d 02 	lds	r14, 0x022D
     7ec:	f0 90 2e 02 	lds	r15, 0x022E
     7f0:	00 91 2f 02 	lds	r16, 0x022F
     7f4:	10 91 30 02 	lds	r17, 0x0230
     7f8:	20 91 31 02 	lds	r18, 0x0231
     7fc:	30 91 32 02 	lds	r19, 0x0232
     800:	40 91 33 02 	lds	r20, 0x0233
     804:	50 91 34 02 	lds	r21, 0x0234
     808:	60 91 35 02 	lds	r22, 0x0235
     80c:	70 91 36 02 	lds	r23, 0x0236
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	af dd       	rcall	.-1186   	; 0x374 <initSingleUserMatrix>
     816:	8a e0       	ldi	r24, 0x0A	; 10
     818:	fe 01       	movw	r30, r28
     81a:	31 96       	adiw	r30, 0x01	; 1
     81c:	ad e2       	ldi	r26, 0x2D	; 45
     81e:	b2 e0       	ldi	r27, 0x02	; 2
     820:	01 90       	ld	r0, Z+
     822:	0d 92       	st	X+, r0
     824:	8a 95       	dec	r24
     826:	e1 f7       	brne	.-8      	; 0x820 <DeathTick+0x8c>
		return 1;
     828:	81 e0       	ldi	r24, 0x01	; 1
     82a:	01 c0       	rjmp	.+2      	; 0x82e <DeathTick+0x9a>
	} else {
		// nothing
		return 0;
     82c:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     82e:	2a 96       	adiw	r28, 0x0a	; 10
     830:	0f b6       	in	r0, 0x3f	; 63
     832:	f8 94       	cli
     834:	de bf       	out	0x3e, r29	; 62
     836:	0f be       	out	0x3f, r0	; 63
     838:	cd bf       	out	0x3d, r28	; 61
     83a:	df 91       	pop	r29
     83c:	cf 91       	pop	r28
     83e:	1f 91       	pop	r17
     840:	0f 91       	pop	r16
     842:	ff 90       	pop	r15
     844:	ef 90       	pop	r14
     846:	08 95       	ret

00000848 <ExpTick>:

Explosions ExpTick(Explosions explosions) {	
     848:	0f 93       	push	r16
     84a:	1f 93       	push	r17
     84c:	cf 93       	push	r28
     84e:	df 93       	push	r29
     850:	cd b7       	in	r28, 0x3d	; 61
     852:	de b7       	in	r29, 0x3e	; 62
     854:	8c 01       	movw	r16, r24
	// Return if empty (Protection code)
	if (explosions.index == 0) {
     856:	c9 50       	subi	r28, 0x09	; 9
     858:	df 4f       	sbci	r29, 0xFF	; 255
     85a:	88 81       	ld	r24, Y
     85c:	c7 5f       	subi	r28, 0xF7	; 247
     85e:	d0 40       	sbci	r29, 0x00	; 0
     860:	81 11       	cpse	r24, r1
     862:	09 c0       	rjmp	.+18     	; 0x876 <ExpTick+0x2e>
		return explosions;
     864:	82 ef       	ldi	r24, 0xF2	; 242
     866:	fe 01       	movw	r30, r28
     868:	37 96       	adiw	r30, 0x07	; 7
     86a:	d8 01       	movw	r26, r16
     86c:	01 90       	ld	r0, Z+
     86e:	0d 92       	st	X+, r0
     870:	8a 95       	dec	r24
     872:	e1 f7       	brne	.-8      	; 0x86c <ExpTick+0x24>
     874:	97 c0       	rjmp	.+302    	; 0x9a4 <ExpTick+0x15c>
	} 
	
	if (explosions.displayIndex >= explosions.index) {
     876:	c8 50       	subi	r28, 0x08	; 8
     878:	df 4f       	sbci	r29, 0xFF	; 255
     87a:	98 81       	ld	r25, Y
     87c:	c8 5f       	subi	r28, 0xF8	; 248
     87e:	d0 40       	sbci	r29, 0x00	; 0
     880:	98 17       	cp	r25, r24
     882:	28 f0       	brcs	.+10     	; 0x88e <ExpTick+0x46>
		explosions.displayIndex = 0;
     884:	c8 50       	subi	r28, 0x08	; 8
     886:	df 4f       	sbci	r29, 0xFF	; 255
     888:	18 82       	st	Y, r1
     88a:	c8 5f       	subi	r28, 0xF8	; 248
     88c:	d0 40       	sbci	r29, 0x00	; 0
	}
	
	if (displayBlank == 0)
     88e:	80 91 09 01 	lds	r24, 0x0109
     892:	81 11       	cpse	r24, r1
     894:	12 c0       	rjmp	.+36     	; 0x8ba <ExpTick+0x72>
		d3_setMatrixColor(explosions.matricies[explosions.displayIndex].m, RED);
     896:	c8 50       	subi	r28, 0x08	; 8
     898:	df 4f       	sbci	r29, 0xFF	; 255
     89a:	88 81       	ld	r24, Y
     89c:	c8 5f       	subi	r28, 0xF8	; 248
     89e:	d0 40       	sbci	r29, 0x00	; 0
     8a0:	60 e0       	ldi	r22, 0x00	; 0
     8a2:	27 e0       	ldi	r18, 0x07	; 7
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	2c 0f       	add	r18, r28
     8a8:	3d 1f       	adc	r19, r29
     8aa:	48 e0       	ldi	r20, 0x08	; 8
     8ac:	84 9f       	mul	r24, r20
     8ae:	20 0d       	add	r18, r0
     8b0:	31 1d       	adc	r19, r1
     8b2:	11 24       	eor	r1, r1
     8b4:	c9 01       	movw	r24, r18
     8b6:	11 de       	rcall	.-990    	; 0x4da <d3_setMatrixColor>
     8b8:	07 c0       	rjmp	.+14     	; 0x8c8 <ExpTick+0x80>
	else if (displayBlank == 1)
     8ba:	81 30       	cpi	r24, 0x01	; 1
     8bc:	09 f0       	breq	.+2      	; 0x8c0 <ExpTick+0x78>
     8be:	6a c0       	rjmp	.+212    	; 0x994 <ExpTick+0x14c>
		d3_setMatrixColor(blankMatrix.m, RED);
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	8b e2       	ldi	r24, 0x2B	; 43
     8c4:	91 e0       	ldi	r25, 0x01	; 1
     8c6:	09 de       	rcall	.-1006   	; 0x4da <d3_setMatrixColor>
	
	if (displayBlank == 0 && contClock >= explosions.timeDuration[explosions.displayIndex]) {
     8c8:	80 91 09 01 	lds	r24, 0x0109
     8cc:	81 11       	cpse	r24, r1
     8ce:	35 c0       	rjmp	.+106    	; 0x93a <ExpTick+0xf2>
     8d0:	c8 50       	subi	r28, 0x08	; 8
     8d2:	df 4f       	sbci	r29, 0xFF	; 255
     8d4:	28 81       	ld	r18, Y
     8d6:	c8 5f       	subi	r28, 0xF8	; 248
     8d8:	d0 40       	sbci	r29, 0x00	; 0
     8da:	e2 2f       	mov	r30, r18
     8dc:	f0 e0       	ldi	r31, 0x00	; 0
     8de:	ec 59       	subi	r30, 0x9C	; 156
     8e0:	ff 4f       	sbci	r31, 0xFF	; 255
     8e2:	ee 0f       	add	r30, r30
     8e4:	ff 1f       	adc	r31, r31
     8e6:	87 e0       	ldi	r24, 0x07	; 7
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	8c 0f       	add	r24, r28
     8ec:	9d 1f       	adc	r25, r29
     8ee:	e8 0f       	add	r30, r24
     8f0:	f9 1f       	adc	r31, r25
     8f2:	80 81       	ld	r24, Z
     8f4:	91 81       	ldd	r25, Z+1	; 0x01
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	b0 e0       	ldi	r27, 0x00	; 0
     8fa:	40 91 0b 01 	lds	r20, 0x010B
     8fe:	50 91 0c 01 	lds	r21, 0x010C
     902:	60 91 0d 01 	lds	r22, 0x010D
     906:	70 91 0e 01 	lds	r23, 0x010E
     90a:	48 17       	cp	r20, r24
     90c:	59 07       	cpc	r21, r25
     90e:	6a 07       	cpc	r22, r26
     910:	7b 07       	cpc	r23, r27
     912:	08 f4       	brcc	.+2      	; 0x916 <ExpTick+0xce>
     914:	3f c0       	rjmp	.+126    	; 0x994 <ExpTick+0x14c>
		displayBlank = 1;
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	80 93 09 01 	sts	0x0109, r24
		explosions.displayIndex++;
     91c:	2f 5f       	subi	r18, 0xFF	; 255
     91e:	c8 50       	subi	r28, 0x08	; 8
     920:	df 4f       	sbci	r29, 0xFF	; 255
     922:	28 83       	st	Y, r18
     924:	c8 5f       	subi	r28, 0xF8	; 248
     926:	d0 40       	sbci	r29, 0x00	; 0
		contClock = 0;
     928:	10 92 0b 01 	sts	0x010B, r1
     92c:	10 92 0c 01 	sts	0x010C, r1
     930:	10 92 0d 01 	sts	0x010D, r1
     934:	10 92 0e 01 	sts	0x010E, r1
     938:	2d c0       	rjmp	.+90     	; 0x994 <ExpTick+0x14c>
	} else if (displayBlank == 1 && contClock >= explosions.timeBetween[explosions.displayIndex]) {
     93a:	81 30       	cpi	r24, 0x01	; 1
     93c:	59 f5       	brne	.+86     	; 0x994 <ExpTick+0x14c>
     93e:	c8 50       	subi	r28, 0x08	; 8
     940:	df 4f       	sbci	r29, 0xFF	; 255
     942:	e8 81       	ld	r30, Y
     944:	c8 5f       	subi	r28, 0xF8	; 248
     946:	d0 40       	sbci	r29, 0x00	; 0
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	e0 5b       	subi	r30, 0xB0	; 176
     94c:	ff 4f       	sbci	r31, 0xFF	; 255
     94e:	ee 0f       	add	r30, r30
     950:	ff 1f       	adc	r31, r31
     952:	27 e0       	ldi	r18, 0x07	; 7
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	2c 0f       	add	r18, r28
     958:	3d 1f       	adc	r19, r29
     95a:	e2 0f       	add	r30, r18
     95c:	f3 1f       	adc	r31, r19
     95e:	80 81       	ld	r24, Z
     960:	91 81       	ldd	r25, Z+1	; 0x01
     962:	a0 e0       	ldi	r26, 0x00	; 0
     964:	b0 e0       	ldi	r27, 0x00	; 0
     966:	40 91 0b 01 	lds	r20, 0x010B
     96a:	50 91 0c 01 	lds	r21, 0x010C
     96e:	60 91 0d 01 	lds	r22, 0x010D
     972:	70 91 0e 01 	lds	r23, 0x010E
     976:	48 17       	cp	r20, r24
     978:	59 07       	cpc	r21, r25
     97a:	6a 07       	cpc	r22, r26
     97c:	7b 07       	cpc	r23, r27
     97e:	50 f0       	brcs	.+20     	; 0x994 <ExpTick+0x14c>
		displayBlank = 0;
     980:	10 92 09 01 	sts	0x0109, r1
		contClock = 0;
     984:	10 92 0b 01 	sts	0x010B, r1
     988:	10 92 0c 01 	sts	0x010C, r1
     98c:	10 92 0d 01 	sts	0x010D, r1
     990:	10 92 0e 01 	sts	0x010E, r1
	}
	
	return explosions;
     994:	82 ef       	ldi	r24, 0xF2	; 242
     996:	fe 01       	movw	r30, r28
     998:	37 96       	adiw	r30, 0x07	; 7
     99a:	d8 01       	movw	r26, r16
     99c:	01 90       	ld	r0, Z+
     99e:	0d 92       	st	X+, r0
     9a0:	8a 95       	dec	r24
     9a2:	e1 f7       	brne	.-8      	; 0x99c <ExpTick+0x154>
     9a4:	c8 01       	movw	r24, r16
     9a6:	df 91       	pop	r29
     9a8:	cf 91       	pop	r28
     9aa:	1f 91       	pop	r17
     9ac:	0f 91       	pop	r16
     9ae:	08 95       	ret

000009b0 <main>:
SingleMatrix matrix;
SingleMatrix matrix2;
SingleMatrix blankMatrix;


int main(void) {
     9b0:	cf 93       	push	r28
     9b2:	df 93       	push	r29
     9b4:	cd b7       	in	r28, 0x3d	; 61
     9b6:	de b7       	in	r29, 0x3e	; 62
     9b8:	ce 59       	subi	r28, 0x9E	; 158
     9ba:	d1 42       	sbci	r29, 0x21	; 33
     9bc:	0f b6       	in	r0, 0x3f	; 63
     9be:	f8 94       	cli
     9c0:	de bf       	out	0x3e, r29	; 62
     9c2:	0f be       	out	0x3f, r0	; 63
     9c4:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; PORTB = 0x00;
     9c6:	8f ef       	ldi	r24, 0xFF	; 255
     9c8:	84 b9       	out	0x04, r24	; 4
     9ca:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x00;
     9cc:	8a b9       	out	0x0a, r24	; 10
     9ce:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0xF0; PORTC = 0x0F;
     9d0:	80 ef       	ldi	r24, 0xF0	; 240
     9d2:	87 b9       	out	0x07, r24	; 7
     9d4:	8f e0       	ldi	r24, 0x0F	; 15
     9d6:	88 b9       	out	0x08, r24	; 8
	
	initTasks();
     9d8:	c0 db       	rcall	.-2176   	; 0x15a <initTasks>
	}
}

// Set TimerISR() to tick every M ms
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
     9da:	81 e0       	ldi	r24, 0x01	; 1
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	a0 e0       	ldi	r26, 0x00	; 0
     9e0:	b0 e0       	ldi	r27, 0x00	; 0
     9e2:	80 93 02 01 	sts	0x0102, r24
     9e6:	90 93 03 01 	sts	0x0103, r25
     9ea:	a0 93 04 01 	sts	0x0104, r26
     9ee:	b0 93 05 01 	sts	0x0105, r27
	_avr_timer_cntcurr = _avr_timer_M;
     9f2:	80 93 0f 01 	sts	0x010F, r24
     9f6:	90 93 10 01 	sts	0x0110, r25
     9fa:	a0 93 11 01 	sts	0x0111, r26
     9fe:	b0 93 12 01 	sts	0x0112, r27
	
	TimerSet(1);
	TimerOn();
     a02:	d2 db       	rcall	.-2140   	; 0x1a8 <TimerOn>
	
	matrix = clearSingleMatrix(matrix);
     a04:	20 91 33 01 	lds	r18, 0x0133
     a08:	30 91 34 01 	lds	r19, 0x0134
     a0c:	40 91 35 01 	lds	r20, 0x0135
     a10:	50 91 36 01 	lds	r21, 0x0136
     a14:	60 91 37 01 	lds	r22, 0x0137
     a18:	70 91 38 01 	lds	r23, 0x0138
     a1c:	80 91 39 01 	lds	r24, 0x0139
     a20:	90 91 3a 01 	lds	r25, 0x013A
     a24:	71 dc       	rcall	.-1822   	; 0x308 <clearSingleMatrix>
     a26:	03 e3       	ldi	r16, 0x33	; 51
     a28:	11 e0       	ldi	r17, 0x01	; 1
     a2a:	f8 01       	movw	r30, r16
     a2c:	20 83       	st	Z, r18
     a2e:	31 83       	std	Z+1, r19	; 0x01
     a30:	42 83       	std	Z+2, r20	; 0x02
     a32:	53 83       	std	Z+3, r21	; 0x03
     a34:	64 83       	std	Z+4, r22	; 0x04
     a36:	75 83       	std	Z+5, r23	; 0x05
     a38:	86 83       	std	Z+6, r24	; 0x06
     a3a:	97 83       	std	Z+7, r25	; 0x07
	explosions = initExplosions(explosions);
	explosions = pushExplosion(explosions, matrix, 350, 200);
	explosions = pushExplosion(explosions, matrix2, 350, 200);
	*/
	
	blankMatrix = clearSingleMatrix(blankMatrix);
     a3c:	20 91 2b 01 	lds	r18, 0x012B
     a40:	30 91 2c 01 	lds	r19, 0x012C
     a44:	40 91 2d 01 	lds	r20, 0x012D
     a48:	50 91 2e 01 	lds	r21, 0x012E
     a4c:	60 91 2f 01 	lds	r22, 0x012F
     a50:	70 91 30 01 	lds	r23, 0x0130
     a54:	80 91 31 01 	lds	r24, 0x0131
     a58:	90 91 32 01 	lds	r25, 0x0132
     a5c:	55 dc       	rcall	.-1878   	; 0x308 <clearSingleMatrix>
     a5e:	eb e2       	ldi	r30, 0x2B	; 43
     a60:	f1 e0       	ldi	r31, 0x01	; 1
     a62:	20 83       	st	Z, r18
     a64:	31 83       	std	Z+1, r19	; 0x01
     a66:	42 83       	std	Z+2, r20	; 0x02
     a68:	53 83       	std	Z+3, r21	; 0x03
     a6a:	64 83       	std	Z+4, r22	; 0x04
     a6c:	75 83       	std	Z+5, r23	; 0x05
     a6e:	86 83       	std	Z+6, r24	; 0x06
     a70:	97 83       	std	Z+7, r25	; 0x07
	
	explosions = initExplosions(explosions);
     a72:	4d b7       	in	r20, 0x3d	; 61
     a74:	5e b7       	in	r21, 0x3e	; 62
     a76:	42 5f       	subi	r20, 0xF2	; 242
     a78:	51 09       	sbc	r21, r1
     a7a:	0f b6       	in	r0, 0x3f	; 63
     a7c:	f8 94       	cli
     a7e:	5e bf       	out	0x3e, r21	; 62
     a80:	0f be       	out	0x3f, r0	; 63
     a82:	4d bf       	out	0x3d, r20	; 61
     a84:	ad b7       	in	r26, 0x3d	; 61
     a86:	be b7       	in	r27, 0x3e	; 62
     a88:	11 96       	adiw	r26, 0x01	; 1
     a8a:	82 ef       	ldi	r24, 0xF2	; 242
     a8c:	eb e3       	ldi	r30, 0x3B	; 59
     a8e:	f1 e0       	ldi	r31, 0x01	; 1
     a90:	01 90       	ld	r0, Z+
     a92:	0d 92       	st	X+, r0
     a94:	8a 95       	dec	r24
     a96:	e1 f7       	brne	.-8      	; 0xa90 <main+0xe0>
     a98:	ce 01       	movw	r24, r28
     a9a:	83 55       	subi	r24, 0x53	; 83
     a9c:	9f 4d       	sbci	r25, 0xDF	; 223
     a9e:	5c de       	rcall	.-840    	; 0x758 <initExplosions>
     aa0:	82 ef       	ldi	r24, 0xF2	; 242
     aa2:	fe 01       	movw	r30, r28
     aa4:	e3 55       	subi	r30, 0x53	; 83
     aa6:	ff 4d       	sbci	r31, 0xDF	; 223
     aa8:	ab e3       	ldi	r26, 0x3B	; 59
     aaa:	b1 e0       	ldi	r27, 0x01	; 1
     aac:	01 90       	ld	r0, Z+
     aae:	0d 92       	st	X+, r0
     ab0:	8a 95       	dec	r24
     ab2:	e1 f7       	brne	.-8      	; 0xaac <main+0xfc>
	
	matrix = clearSingleMatrix(matrix);
     ab4:	0f b6       	in	r0, 0x3f	; 63
     ab6:	f8 94       	cli
     ab8:	de bf       	out	0x3e, r29	; 62
     aba:	0f be       	out	0x3f, r0	; 63
     abc:	cd bf       	out	0x3d, r28	; 61
     abe:	20 91 33 01 	lds	r18, 0x0133
     ac2:	30 91 34 01 	lds	r19, 0x0134
     ac6:	40 91 35 01 	lds	r20, 0x0135
     aca:	50 91 36 01 	lds	r21, 0x0136
     ace:	60 91 37 01 	lds	r22, 0x0137
     ad2:	70 91 38 01 	lds	r23, 0x0138
     ad6:	80 91 39 01 	lds	r24, 0x0139
     ada:	90 91 3a 01 	lds	r25, 0x013A
     ade:	14 dc       	rcall	.-2008   	; 0x308 <clearSingleMatrix>
     ae0:	f8 01       	movw	r30, r16
     ae2:	20 83       	st	Z, r18
     ae4:	42 83       	std	Z+2, r20	; 0x02
     ae6:	53 83       	std	Z+3, r21	; 0x03
     ae8:	64 83       	std	Z+4, r22	; 0x04
     aea:	75 83       	std	Z+5, r23	; 0x05
     aec:	97 83       	std	Z+7, r25	; 0x07
}

unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ?  (x | (0x01 << k))  :  (x & ~(0x01 << k)));
     aee:	3e 7f       	andi	r19, 0xFE	; 254
	matrix.m[1] = SetBit(matrix.m[1], 0, 0);
     af0:	31 83       	std	Z+1, r19	; 0x01
     af2:	8e 7f       	andi	r24, 0xFE	; 254
	matrix.m[6] = SetBit(matrix.m[6], 0, 0);
     af4:	86 83       	std	Z+6, r24	; 0x06
     af6:	82 ef       	ldi	r24, 0xF2	; 242
     af8:	eb e3       	ldi	r30, 0x3B	; 59
     afa:	f1 e0       	ldi	r31, 0x01	; 1
     afc:	de 01       	movw	r26, r28
     afe:	ad 5c       	subi	r26, 0xCD	; 205
     b00:	b0 4e       	sbci	r27, 0xE0	; 224
     b02:	01 90       	ld	r0, Z+
     b04:	0d 92       	st	X+, r0
     b06:	8a 95       	dec	r24
     b08:	e1 f7       	brne	.-8      	; 0xb02 <main+0x152>
     b0a:	0f 2e       	mov	r0, r31
     b0c:	fb e2       	ldi	r31, 0x2B	; 43
     b0e:	cf 2e       	mov	r12, r31
     b10:	f2 e0       	ldi	r31, 0x02	; 2
     b12:	df 2e       	mov	r13, r31
     b14:	f0 2d       	mov	r31, r0
     b16:	f6 01       	movw	r30, r12
     b18:	20 81       	ld	r18, Z
     b1a:	88 e0       	ldi	r24, 0x08	; 8
     b1c:	f8 01       	movw	r30, r16
     b1e:	de 01       	movw	r26, r28
     b20:	ab 55       	subi	r26, 0x5B	; 91
     b22:	bf 4d       	sbci	r27, 0xDF	; 223
     b24:	01 90       	ld	r0, Z+
     b26:	0d 92       	st	X+, r0
     b28:	8a 95       	dec	r24
     b2a:	e1 f7       	brne	.-8      	; 0xb24 <main+0x174>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
     b2c:	82 2f       	mov	r24, r18
     b2e:	90 e0       	ldi	r25, 0x00	; 0
     b30:	a3 e3       	ldi	r26, 0x33	; 51
     b32:	bf e1       	ldi	r27, 0x1F	; 31
     b34:	ac 0f       	add	r26, r28
     b36:	bd 1f       	adc	r27, r29
     b38:	f8 e0       	ldi	r31, 0x08	; 8
     b3a:	2f 9f       	mul	r18, r31
     b3c:	a0 0d       	add	r26, r0
     b3e:	b1 1d       	adc	r27, r1
     b40:	11 24       	eor	r1, r1
     b42:	38 e0       	ldi	r19, 0x08	; 8
     b44:	fe 01       	movw	r30, r28
     b46:	eb 55       	subi	r30, 0x5B	; 91
     b48:	ff 4d       	sbci	r31, 0xDF	; 223
     b4a:	01 90       	ld	r0, Z+
     b4c:	0d 92       	st	X+, r0
     b4e:	3a 95       	dec	r19
     b50:	e1 f7       	brne	.-8      	; 0xb4a <main+0x19a>
	explosions.timeBetween[explosions.index] = a;
     b52:	fc 01       	movw	r30, r24
     b54:	e0 5b       	subi	r30, 0xB0	; 176
     b56:	ff 4f       	sbci	r31, 0xFF	; 255
     b58:	ee 0f       	add	r30, r30
     b5a:	ff 1f       	adc	r31, r31
     b5c:	43 e3       	ldi	r20, 0x33	; 51
     b5e:	5f e1       	ldi	r21, 0x1F	; 31
     b60:	4c 0f       	add	r20, r28
     b62:	5d 1f       	adc	r21, r29
     b64:	e4 0f       	add	r30, r20
     b66:	f5 1f       	adc	r31, r21
     b68:	11 82       	std	Z+1, r1	; 0x01
     b6a:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     b6c:	fc 01       	movw	r30, r24
     b6e:	ec 59       	subi	r30, 0x9C	; 156
     b70:	ff 4f       	sbci	r31, 0xFF	; 255
     b72:	ee 0f       	add	r30, r30
     b74:	ff 1f       	adc	r31, r31
     b76:	e4 0f       	add	r30, r20
     b78:	f5 1f       	adc	r31, r21
     b7a:	0f 2e       	mov	r0, r31
     b7c:	f4 e1       	ldi	r31, 0x14	; 20
     b7e:	ef 2e       	mov	r14, r31
     b80:	f1 2c       	mov	r15, r1
     b82:	f0 2d       	mov	r31, r0
     b84:	f1 82       	std	Z+1, r15	; 0x01
     b86:	e0 82       	st	Z, r14
	explosions.index++;
     b88:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
     b8a:	cd 5d       	subi	r28, 0xDD	; 221
     b8c:	df 4d       	sbci	r29, 0xDF	; 223
     b8e:	28 83       	st	Y, r18
     b90:	c3 52       	subi	r28, 0x23	; 35
     b92:	d0 42       	sbci	r29, 0x20	; 32
     b94:	82 ef       	ldi	r24, 0xF2	; 242
     b96:	fa 01       	movw	r30, r20
     b98:	de 01       	movw	r26, r28
     b9a:	af 5b       	subi	r26, 0xBF	; 191
     b9c:	b1 4e       	sbci	r27, 0xE1	; 225
     b9e:	01 90       	ld	r0, Z+
     ba0:	0d 92       	st	X+, r0
     ba2:	8a 95       	dec	r24
     ba4:	e1 f7       	brne	.-8      	; 0xb9e <main+0x1ee>
	explosions = pushExplosion(explosions, matrix, 0, 20);
     ba6:	cf 5c       	subi	r28, 0xCF	; 207
     ba8:	d0 4e       	sbci	r29, 0xE0	; 224
     baa:	28 83       	st	Y, r18
     bac:	c1 53       	subi	r28, 0x31	; 49
     bae:	df 41       	sbci	r29, 0x1F	; 31
     bb0:	82 ef       	ldi	r24, 0xF2	; 242
     bb2:	fe 01       	movw	r30, r28
     bb4:	ef 5b       	subi	r30, 0xBF	; 191
     bb6:	f1 4e       	sbci	r31, 0xE1	; 225
     bb8:	ab e3       	ldi	r26, 0x3B	; 59
     bba:	b1 e0       	ldi	r27, 0x01	; 1
     bbc:	01 90       	ld	r0, Z+
     bbe:	0d 92       	st	X+, r0
     bc0:	8a 95       	dec	r24
     bc2:	e1 f7       	brne	.-8      	; 0xbbc <main+0x20c>
	
	matrix = clearSingleMatrix(matrix);
     bc4:	20 91 33 01 	lds	r18, 0x0133
     bc8:	30 91 34 01 	lds	r19, 0x0134
     bcc:	40 91 35 01 	lds	r20, 0x0135
     bd0:	50 91 36 01 	lds	r21, 0x0136
     bd4:	60 91 37 01 	lds	r22, 0x0137
     bd8:	70 91 38 01 	lds	r23, 0x0138
     bdc:	80 91 39 01 	lds	r24, 0x0139
     be0:	90 91 3a 01 	lds	r25, 0x013A
     be4:	91 db       	rcall	.-2270   	; 0x308 <clearSingleMatrix>
     be6:	f8 01       	movw	r30, r16
     be8:	20 83       	st	Z, r18
     bea:	42 83       	std	Z+2, r20	; 0x02
     bec:	53 83       	std	Z+3, r21	; 0x03
     bee:	64 83       	std	Z+4, r22	; 0x04
     bf0:	75 83       	std	Z+5, r23	; 0x05
     bf2:	97 83       	std	Z+7, r25	; 0x07
     bf4:	3d 7f       	andi	r19, 0xFD	; 253
	matrix.m[1] = SetBit(matrix.m[1], 1, 0);
     bf6:	31 83       	std	Z+1, r19	; 0x01
     bf8:	8d 7f       	andi	r24, 0xFD	; 253
	matrix.m[6] = SetBit(matrix.m[6], 1, 0);
     bfa:	86 83       	std	Z+6, r24	; 0x06
     bfc:	82 ef       	ldi	r24, 0xF2	; 242
     bfe:	eb e3       	ldi	r30, 0x3B	; 59
     c00:	f1 e0       	ldi	r31, 0x01	; 1
     c02:	de 01       	movw	r26, r28
     c04:	a1 5b       	subi	r26, 0xB1	; 177
     c06:	b2 4e       	sbci	r27, 0xE2	; 226
     c08:	01 90       	ld	r0, Z+
     c0a:	0d 92       	st	X+, r0
     c0c:	8a 95       	dec	r24
     c0e:	e1 f7       	brne	.-8      	; 0xc08 <main+0x258>
     c10:	f6 01       	movw	r30, r12
     c12:	20 81       	ld	r18, Z
     c14:	88 e0       	ldi	r24, 0x08	; 8
     c16:	f8 01       	movw	r30, r16
     c18:	de 01       	movw	r26, r28
     c1a:	a3 56       	subi	r26, 0x63	; 99
     c1c:	bf 4d       	sbci	r27, 0xDF	; 223
     c1e:	01 90       	ld	r0, Z+
     c20:	0d 92       	st	X+, r0
     c22:	8a 95       	dec	r24
     c24:	e1 f7       	brne	.-8      	; 0xc1e <main+0x26e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
     c26:	82 2f       	mov	r24, r18
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	af e4       	ldi	r26, 0x4F	; 79
     c2c:	bd e1       	ldi	r27, 0x1D	; 29
     c2e:	ac 0f       	add	r26, r28
     c30:	bd 1f       	adc	r27, r29
     c32:	f8 e0       	ldi	r31, 0x08	; 8
     c34:	2f 9f       	mul	r18, r31
     c36:	a0 0d       	add	r26, r0
     c38:	b1 1d       	adc	r27, r1
     c3a:	11 24       	eor	r1, r1
     c3c:	38 e0       	ldi	r19, 0x08	; 8
     c3e:	fe 01       	movw	r30, r28
     c40:	e3 56       	subi	r30, 0x63	; 99
     c42:	ff 4d       	sbci	r31, 0xDF	; 223
     c44:	01 90       	ld	r0, Z+
     c46:	0d 92       	st	X+, r0
     c48:	3a 95       	dec	r19
     c4a:	e1 f7       	brne	.-8      	; 0xc44 <main+0x294>
	explosions.timeBetween[explosions.index] = a;
     c4c:	fc 01       	movw	r30, r24
     c4e:	e0 5b       	subi	r30, 0xB0	; 176
     c50:	ff 4f       	sbci	r31, 0xFF	; 255
     c52:	ee 0f       	add	r30, r30
     c54:	ff 1f       	adc	r31, r31
     c56:	4f e4       	ldi	r20, 0x4F	; 79
     c58:	5d e1       	ldi	r21, 0x1D	; 29
     c5a:	4c 0f       	add	r20, r28
     c5c:	5d 1f       	adc	r21, r29
     c5e:	e4 0f       	add	r30, r20
     c60:	f5 1f       	adc	r31, r21
     c62:	11 82       	std	Z+1, r1	; 0x01
     c64:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     c66:	fc 01       	movw	r30, r24
     c68:	ec 59       	subi	r30, 0x9C	; 156
     c6a:	ff 4f       	sbci	r31, 0xFF	; 255
     c6c:	ee 0f       	add	r30, r30
     c6e:	ff 1f       	adc	r31, r31
     c70:	e4 0f       	add	r30, r20
     c72:	f5 1f       	adc	r31, r21
     c74:	f1 82       	std	Z+1, r15	; 0x01
     c76:	e0 82       	st	Z, r14
	explosions.index++;
     c78:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
     c7a:	c1 5c       	subi	r28, 0xC1	; 193
     c7c:	d1 4e       	sbci	r29, 0xE1	; 225
     c7e:	28 83       	st	Y, r18
     c80:	cf 53       	subi	r28, 0x3F	; 63
     c82:	de 41       	sbci	r29, 0x1E	; 30
     c84:	82 ef       	ldi	r24, 0xF2	; 242
     c86:	fa 01       	movw	r30, r20
     c88:	de 01       	movw	r26, r28
     c8a:	a3 5a       	subi	r26, 0xA3	; 163
     c8c:	b3 4e       	sbci	r27, 0xE3	; 227
     c8e:	01 90       	ld	r0, Z+
     c90:	0d 92       	st	X+, r0
     c92:	8a 95       	dec	r24
     c94:	e1 f7       	brne	.-8      	; 0xc8e <main+0x2de>
	explosions = pushExplosion(explosions, matrix, 0, 20);
     c96:	c3 5b       	subi	r28, 0xB3	; 179
     c98:	d2 4e       	sbci	r29, 0xE2	; 226
     c9a:	28 83       	st	Y, r18
     c9c:	cd 54       	subi	r28, 0x4D	; 77
     c9e:	dd 41       	sbci	r29, 0x1D	; 29
     ca0:	82 ef       	ldi	r24, 0xF2	; 242
     ca2:	fe 01       	movw	r30, r28
     ca4:	e3 5a       	subi	r30, 0xA3	; 163
     ca6:	f3 4e       	sbci	r31, 0xE3	; 227
     ca8:	ab e3       	ldi	r26, 0x3B	; 59
     caa:	b1 e0       	ldi	r27, 0x01	; 1
     cac:	01 90       	ld	r0, Z+
     cae:	0d 92       	st	X+, r0
     cb0:	8a 95       	dec	r24
     cb2:	e1 f7       	brne	.-8      	; 0xcac <main+0x2fc>
	
	matrix = clearSingleMatrix(matrix);
     cb4:	20 91 33 01 	lds	r18, 0x0133
     cb8:	30 91 34 01 	lds	r19, 0x0134
     cbc:	40 91 35 01 	lds	r20, 0x0135
     cc0:	50 91 36 01 	lds	r21, 0x0136
     cc4:	60 91 37 01 	lds	r22, 0x0137
     cc8:	70 91 38 01 	lds	r23, 0x0138
     ccc:	80 91 39 01 	lds	r24, 0x0139
     cd0:	90 91 3a 01 	lds	r25, 0x013A
     cd4:	19 db       	rcall	.-2510   	; 0x308 <clearSingleMatrix>
     cd6:	f8 01       	movw	r30, r16
     cd8:	20 83       	st	Z, r18
     cda:	42 83       	std	Z+2, r20	; 0x02
     cdc:	53 83       	std	Z+3, r21	; 0x03
     cde:	64 83       	std	Z+4, r22	; 0x04
     ce0:	75 83       	std	Z+5, r23	; 0x05
     ce2:	97 83       	std	Z+7, r25	; 0x07
     ce4:	3b 7f       	andi	r19, 0xFB	; 251
	matrix.m[1] = SetBit(matrix.m[1], 2, 0);
     ce6:	31 83       	std	Z+1, r19	; 0x01
     ce8:	8b 7f       	andi	r24, 0xFB	; 251
	matrix.m[6] = SetBit(matrix.m[6], 2, 0);
     cea:	86 83       	std	Z+6, r24	; 0x06
     cec:	82 ef       	ldi	r24, 0xF2	; 242
     cee:	eb e3       	ldi	r30, 0x3B	; 59
     cf0:	f1 e0       	ldi	r31, 0x01	; 1
     cf2:	de 01       	movw	r26, r28
     cf4:	a5 59       	subi	r26, 0x95	; 149
     cf6:	b4 4e       	sbci	r27, 0xE4	; 228
     cf8:	01 90       	ld	r0, Z+
     cfa:	0d 92       	st	X+, r0
     cfc:	8a 95       	dec	r24
     cfe:	e1 f7       	brne	.-8      	; 0xcf8 <main+0x348>
     d00:	f6 01       	movw	r30, r12
     d02:	20 81       	ld	r18, Z
     d04:	88 e0       	ldi	r24, 0x08	; 8
     d06:	f8 01       	movw	r30, r16
     d08:	de 01       	movw	r26, r28
     d0a:	ab 56       	subi	r26, 0x6B	; 107
     d0c:	bf 4d       	sbci	r27, 0xDF	; 223
     d0e:	01 90       	ld	r0, Z+
     d10:	0d 92       	st	X+, r0
     d12:	8a 95       	dec	r24
     d14:	e1 f7       	brne	.-8      	; 0xd0e <main+0x35e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
     d16:	82 2f       	mov	r24, r18
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	ab e6       	ldi	r26, 0x6B	; 107
     d1c:	bb e1       	ldi	r27, 0x1B	; 27
     d1e:	ac 0f       	add	r26, r28
     d20:	bd 1f       	adc	r27, r29
     d22:	f8 e0       	ldi	r31, 0x08	; 8
     d24:	2f 9f       	mul	r18, r31
     d26:	a0 0d       	add	r26, r0
     d28:	b1 1d       	adc	r27, r1
     d2a:	11 24       	eor	r1, r1
     d2c:	38 e0       	ldi	r19, 0x08	; 8
     d2e:	fe 01       	movw	r30, r28
     d30:	eb 56       	subi	r30, 0x6B	; 107
     d32:	ff 4d       	sbci	r31, 0xDF	; 223
     d34:	01 90       	ld	r0, Z+
     d36:	0d 92       	st	X+, r0
     d38:	3a 95       	dec	r19
     d3a:	e1 f7       	brne	.-8      	; 0xd34 <main+0x384>
	explosions.timeBetween[explosions.index] = a;
     d3c:	fc 01       	movw	r30, r24
     d3e:	e0 5b       	subi	r30, 0xB0	; 176
     d40:	ff 4f       	sbci	r31, 0xFF	; 255
     d42:	ee 0f       	add	r30, r30
     d44:	ff 1f       	adc	r31, r31
     d46:	4b e6       	ldi	r20, 0x6B	; 107
     d48:	5b e1       	ldi	r21, 0x1B	; 27
     d4a:	4c 0f       	add	r20, r28
     d4c:	5d 1f       	adc	r21, r29
     d4e:	e4 0f       	add	r30, r20
     d50:	f5 1f       	adc	r31, r21
     d52:	11 82       	std	Z+1, r1	; 0x01
     d54:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     d56:	fc 01       	movw	r30, r24
     d58:	ec 59       	subi	r30, 0x9C	; 156
     d5a:	ff 4f       	sbci	r31, 0xFF	; 255
     d5c:	ee 0f       	add	r30, r30
     d5e:	ff 1f       	adc	r31, r31
     d60:	e4 0f       	add	r30, r20
     d62:	f5 1f       	adc	r31, r21
     d64:	f1 82       	std	Z+1, r15	; 0x01
     d66:	e0 82       	st	Z, r14
	explosions.index++;
     d68:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
     d6a:	c5 5a       	subi	r28, 0xA5	; 165
     d6c:	d3 4e       	sbci	r29, 0xE3	; 227
     d6e:	28 83       	st	Y, r18
     d70:	cb 55       	subi	r28, 0x5B	; 91
     d72:	dc 41       	sbci	r29, 0x1C	; 28
     d74:	82 ef       	ldi	r24, 0xF2	; 242
     d76:	fa 01       	movw	r30, r20
     d78:	de 01       	movw	r26, r28
     d7a:	a7 58       	subi	r26, 0x87	; 135
     d7c:	b5 4e       	sbci	r27, 0xE5	; 229
     d7e:	01 90       	ld	r0, Z+
     d80:	0d 92       	st	X+, r0
     d82:	8a 95       	dec	r24
     d84:	e1 f7       	brne	.-8      	; 0xd7e <main+0x3ce>
	explosions = pushExplosion(explosions, matrix, 0, 20);
     d86:	c7 59       	subi	r28, 0x97	; 151
     d88:	d4 4e       	sbci	r29, 0xE4	; 228
     d8a:	28 83       	st	Y, r18
     d8c:	c9 56       	subi	r28, 0x69	; 105
     d8e:	db 41       	sbci	r29, 0x1B	; 27
     d90:	82 ef       	ldi	r24, 0xF2	; 242
     d92:	fe 01       	movw	r30, r28
     d94:	e7 58       	subi	r30, 0x87	; 135
     d96:	f5 4e       	sbci	r31, 0xE5	; 229
     d98:	ab e3       	ldi	r26, 0x3B	; 59
     d9a:	b1 e0       	ldi	r27, 0x01	; 1
     d9c:	01 90       	ld	r0, Z+
     d9e:	0d 92       	st	X+, r0
     da0:	8a 95       	dec	r24
     da2:	e1 f7       	brne	.-8      	; 0xd9c <main+0x3ec>
	
	matrix = clearSingleMatrix(matrix);
     da4:	20 91 33 01 	lds	r18, 0x0133
     da8:	30 91 34 01 	lds	r19, 0x0134
     dac:	40 91 35 01 	lds	r20, 0x0135
     db0:	50 91 36 01 	lds	r21, 0x0136
     db4:	60 91 37 01 	lds	r22, 0x0137
     db8:	70 91 38 01 	lds	r23, 0x0138
     dbc:	80 91 39 01 	lds	r24, 0x0139
     dc0:	90 91 3a 01 	lds	r25, 0x013A
     dc4:	a1 da       	rcall	.-2750   	; 0x308 <clearSingleMatrix>
     dc6:	f8 01       	movw	r30, r16
     dc8:	20 83       	st	Z, r18
     dca:	42 83       	std	Z+2, r20	; 0x02
     dcc:	53 83       	std	Z+3, r21	; 0x03
     dce:	64 83       	std	Z+4, r22	; 0x04
     dd0:	75 83       	std	Z+5, r23	; 0x05
     dd2:	97 83       	std	Z+7, r25	; 0x07
     dd4:	37 7f       	andi	r19, 0xF7	; 247
	matrix.m[1] = SetBit(matrix.m[1], 3, 0);
     dd6:	31 83       	std	Z+1, r19	; 0x01
     dd8:	87 7f       	andi	r24, 0xF7	; 247
	matrix.m[6] = SetBit(matrix.m[6], 3, 0);
     dda:	86 83       	std	Z+6, r24	; 0x06
     ddc:	82 ef       	ldi	r24, 0xF2	; 242
     dde:	eb e3       	ldi	r30, 0x3B	; 59
     de0:	f1 e0       	ldi	r31, 0x01	; 1
     de2:	de 01       	movw	r26, r28
     de4:	a9 57       	subi	r26, 0x79	; 121
     de6:	b6 4e       	sbci	r27, 0xE6	; 230
     de8:	01 90       	ld	r0, Z+
     dea:	0d 92       	st	X+, r0
     dec:	8a 95       	dec	r24
     dee:	e1 f7       	brne	.-8      	; 0xde8 <main+0x438>
     df0:	f6 01       	movw	r30, r12
     df2:	20 81       	ld	r18, Z
     df4:	88 e0       	ldi	r24, 0x08	; 8
     df6:	f8 01       	movw	r30, r16
     df8:	de 01       	movw	r26, r28
     dfa:	a3 57       	subi	r26, 0x73	; 115
     dfc:	bf 4d       	sbci	r27, 0xDF	; 223
     dfe:	01 90       	ld	r0, Z+
     e00:	0d 92       	st	X+, r0
     e02:	8a 95       	dec	r24
     e04:	e1 f7       	brne	.-8      	; 0xdfe <main+0x44e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
     e06:	82 2f       	mov	r24, r18
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	a7 e8       	ldi	r26, 0x87	; 135
     e0c:	b9 e1       	ldi	r27, 0x19	; 25
     e0e:	ac 0f       	add	r26, r28
     e10:	bd 1f       	adc	r27, r29
     e12:	f8 e0       	ldi	r31, 0x08	; 8
     e14:	2f 9f       	mul	r18, r31
     e16:	a0 0d       	add	r26, r0
     e18:	b1 1d       	adc	r27, r1
     e1a:	11 24       	eor	r1, r1
     e1c:	38 e0       	ldi	r19, 0x08	; 8
     e1e:	fe 01       	movw	r30, r28
     e20:	e3 57       	subi	r30, 0x73	; 115
     e22:	ff 4d       	sbci	r31, 0xDF	; 223
     e24:	01 90       	ld	r0, Z+
     e26:	0d 92       	st	X+, r0
     e28:	3a 95       	dec	r19
     e2a:	e1 f7       	brne	.-8      	; 0xe24 <main+0x474>
	explosions.timeBetween[explosions.index] = a;
     e2c:	fc 01       	movw	r30, r24
     e2e:	e0 5b       	subi	r30, 0xB0	; 176
     e30:	ff 4f       	sbci	r31, 0xFF	; 255
     e32:	ee 0f       	add	r30, r30
     e34:	ff 1f       	adc	r31, r31
     e36:	47 e8       	ldi	r20, 0x87	; 135
     e38:	59 e1       	ldi	r21, 0x19	; 25
     e3a:	4c 0f       	add	r20, r28
     e3c:	5d 1f       	adc	r21, r29
     e3e:	e4 0f       	add	r30, r20
     e40:	f5 1f       	adc	r31, r21
     e42:	11 82       	std	Z+1, r1	; 0x01
     e44:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     e46:	fc 01       	movw	r30, r24
     e48:	ec 59       	subi	r30, 0x9C	; 156
     e4a:	ff 4f       	sbci	r31, 0xFF	; 255
     e4c:	ee 0f       	add	r30, r30
     e4e:	ff 1f       	adc	r31, r31
     e50:	e4 0f       	add	r30, r20
     e52:	f5 1f       	adc	r31, r21
     e54:	f1 82       	std	Z+1, r15	; 0x01
     e56:	e0 82       	st	Z, r14
	explosions.index++;
     e58:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
     e5a:	c9 58       	subi	r28, 0x89	; 137
     e5c:	d5 4e       	sbci	r29, 0xE5	; 229
     e5e:	28 83       	st	Y, r18
     e60:	c7 57       	subi	r28, 0x77	; 119
     e62:	da 41       	sbci	r29, 0x1A	; 26
     e64:	82 ef       	ldi	r24, 0xF2	; 242
     e66:	fa 01       	movw	r30, r20
     e68:	de 01       	movw	r26, r28
     e6a:	ab 56       	subi	r26, 0x6B	; 107
     e6c:	b7 4e       	sbci	r27, 0xE7	; 231
     e6e:	01 90       	ld	r0, Z+
     e70:	0d 92       	st	X+, r0
     e72:	8a 95       	dec	r24
     e74:	e1 f7       	brne	.-8      	; 0xe6e <main+0x4be>
	explosions = pushExplosion(explosions, matrix, 0, 20);
     e76:	cb 57       	subi	r28, 0x7B	; 123
     e78:	d6 4e       	sbci	r29, 0xE6	; 230
     e7a:	28 83       	st	Y, r18
     e7c:	c5 58       	subi	r28, 0x85	; 133
     e7e:	d9 41       	sbci	r29, 0x19	; 25
     e80:	82 ef       	ldi	r24, 0xF2	; 242
     e82:	fe 01       	movw	r30, r28
     e84:	eb 56       	subi	r30, 0x6B	; 107
     e86:	f7 4e       	sbci	r31, 0xE7	; 231
     e88:	ab e3       	ldi	r26, 0x3B	; 59
     e8a:	b1 e0       	ldi	r27, 0x01	; 1
     e8c:	01 90       	ld	r0, Z+
     e8e:	0d 92       	st	X+, r0
     e90:	8a 95       	dec	r24
     e92:	e1 f7       	brne	.-8      	; 0xe8c <main+0x4dc>
	
	matrix = clearSingleMatrix(matrix);
     e94:	20 91 33 01 	lds	r18, 0x0133
     e98:	30 91 34 01 	lds	r19, 0x0134
     e9c:	40 91 35 01 	lds	r20, 0x0135
     ea0:	50 91 36 01 	lds	r21, 0x0136
     ea4:	60 91 37 01 	lds	r22, 0x0137
     ea8:	70 91 38 01 	lds	r23, 0x0138
     eac:	80 91 39 01 	lds	r24, 0x0139
     eb0:	90 91 3a 01 	lds	r25, 0x013A
     eb4:	29 da       	rcall	.-2990   	; 0x308 <clearSingleMatrix>
     eb6:	f8 01       	movw	r30, r16
     eb8:	20 83       	st	Z, r18
     eba:	42 83       	std	Z+2, r20	; 0x02
     ebc:	53 83       	std	Z+3, r21	; 0x03
     ebe:	64 83       	std	Z+4, r22	; 0x04
     ec0:	75 83       	std	Z+5, r23	; 0x05
     ec2:	97 83       	std	Z+7, r25	; 0x07
     ec4:	3f 7e       	andi	r19, 0xEF	; 239
	matrix.m[1] = SetBit(matrix.m[1], 4, 0);
     ec6:	31 83       	std	Z+1, r19	; 0x01
     ec8:	8f 7e       	andi	r24, 0xEF	; 239
	matrix.m[6] = SetBit(matrix.m[6], 4, 0);
     eca:	86 83       	std	Z+6, r24	; 0x06
     ecc:	82 ef       	ldi	r24, 0xF2	; 242
     ece:	eb e3       	ldi	r30, 0x3B	; 59
     ed0:	f1 e0       	ldi	r31, 0x01	; 1
     ed2:	de 01       	movw	r26, r28
     ed4:	ad 55       	subi	r26, 0x5D	; 93
     ed6:	b8 4e       	sbci	r27, 0xE8	; 232
     ed8:	01 90       	ld	r0, Z+
     eda:	0d 92       	st	X+, r0
     edc:	8a 95       	dec	r24
     ede:	e1 f7       	brne	.-8      	; 0xed8 <main+0x528>
     ee0:	f6 01       	movw	r30, r12
     ee2:	20 81       	ld	r18, Z
     ee4:	88 e0       	ldi	r24, 0x08	; 8
     ee6:	f8 01       	movw	r30, r16
     ee8:	de 01       	movw	r26, r28
     eea:	ab 57       	subi	r26, 0x7B	; 123
     eec:	bf 4d       	sbci	r27, 0xDF	; 223
     eee:	01 90       	ld	r0, Z+
     ef0:	0d 92       	st	X+, r0
     ef2:	8a 95       	dec	r24
     ef4:	e1 f7       	brne	.-8      	; 0xeee <main+0x53e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
     ef6:	82 2f       	mov	r24, r18
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	a3 ea       	ldi	r26, 0xA3	; 163
     efc:	b7 e1       	ldi	r27, 0x17	; 23
     efe:	ac 0f       	add	r26, r28
     f00:	bd 1f       	adc	r27, r29
     f02:	f8 e0       	ldi	r31, 0x08	; 8
     f04:	2f 9f       	mul	r18, r31
     f06:	a0 0d       	add	r26, r0
     f08:	b1 1d       	adc	r27, r1
     f0a:	11 24       	eor	r1, r1
     f0c:	38 e0       	ldi	r19, 0x08	; 8
     f0e:	fe 01       	movw	r30, r28
     f10:	eb 57       	subi	r30, 0x7B	; 123
     f12:	ff 4d       	sbci	r31, 0xDF	; 223
     f14:	01 90       	ld	r0, Z+
     f16:	0d 92       	st	X+, r0
     f18:	3a 95       	dec	r19
     f1a:	e1 f7       	brne	.-8      	; 0xf14 <main+0x564>
	explosions.timeBetween[explosions.index] = a;
     f1c:	fc 01       	movw	r30, r24
     f1e:	e0 5b       	subi	r30, 0xB0	; 176
     f20:	ff 4f       	sbci	r31, 0xFF	; 255
     f22:	ee 0f       	add	r30, r30
     f24:	ff 1f       	adc	r31, r31
     f26:	43 ea       	ldi	r20, 0xA3	; 163
     f28:	57 e1       	ldi	r21, 0x17	; 23
     f2a:	4c 0f       	add	r20, r28
     f2c:	5d 1f       	adc	r21, r29
     f2e:	e4 0f       	add	r30, r20
     f30:	f5 1f       	adc	r31, r21
     f32:	11 82       	std	Z+1, r1	; 0x01
     f34:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     f36:	fc 01       	movw	r30, r24
     f38:	ec 59       	subi	r30, 0x9C	; 156
     f3a:	ff 4f       	sbci	r31, 0xFF	; 255
     f3c:	ee 0f       	add	r30, r30
     f3e:	ff 1f       	adc	r31, r31
     f40:	e4 0f       	add	r30, r20
     f42:	f5 1f       	adc	r31, r21
     f44:	f1 82       	std	Z+1, r15	; 0x01
     f46:	e0 82       	st	Z, r14
	explosions.index++;
     f48:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
     f4a:	cd 56       	subi	r28, 0x6D	; 109
     f4c:	d7 4e       	sbci	r29, 0xE7	; 231
     f4e:	28 83       	st	Y, r18
     f50:	c3 59       	subi	r28, 0x93	; 147
     f52:	d8 41       	sbci	r29, 0x18	; 24
     f54:	82 ef       	ldi	r24, 0xF2	; 242
     f56:	fa 01       	movw	r30, r20
     f58:	de 01       	movw	r26, r28
     f5a:	af 54       	subi	r26, 0x4F	; 79
     f5c:	b9 4e       	sbci	r27, 0xE9	; 233
     f5e:	01 90       	ld	r0, Z+
     f60:	0d 92       	st	X+, r0
     f62:	8a 95       	dec	r24
     f64:	e1 f7       	brne	.-8      	; 0xf5e <main+0x5ae>
	explosions = pushExplosion(explosions, matrix, 0, 20);
     f66:	cf 55       	subi	r28, 0x5F	; 95
     f68:	d8 4e       	sbci	r29, 0xE8	; 232
     f6a:	28 83       	st	Y, r18
     f6c:	c1 5a       	subi	r28, 0xA1	; 161
     f6e:	d7 41       	sbci	r29, 0x17	; 23
     f70:	82 ef       	ldi	r24, 0xF2	; 242
     f72:	fe 01       	movw	r30, r28
     f74:	ef 54       	subi	r30, 0x4F	; 79
     f76:	f9 4e       	sbci	r31, 0xE9	; 233
     f78:	ab e3       	ldi	r26, 0x3B	; 59
     f7a:	b1 e0       	ldi	r27, 0x01	; 1
     f7c:	01 90       	ld	r0, Z+
     f7e:	0d 92       	st	X+, r0
     f80:	8a 95       	dec	r24
     f82:	e1 f7       	brne	.-8      	; 0xf7c <main+0x5cc>
	
	matrix = clearSingleMatrix(matrix);
     f84:	20 91 33 01 	lds	r18, 0x0133
     f88:	30 91 34 01 	lds	r19, 0x0134
     f8c:	40 91 35 01 	lds	r20, 0x0135
     f90:	50 91 36 01 	lds	r21, 0x0136
     f94:	60 91 37 01 	lds	r22, 0x0137
     f98:	70 91 38 01 	lds	r23, 0x0138
     f9c:	80 91 39 01 	lds	r24, 0x0139
     fa0:	90 91 3a 01 	lds	r25, 0x013A
     fa4:	b1 d9       	rcall	.-3230   	; 0x308 <clearSingleMatrix>
     fa6:	f8 01       	movw	r30, r16
     fa8:	20 83       	st	Z, r18
     faa:	42 83       	std	Z+2, r20	; 0x02
     fac:	53 83       	std	Z+3, r21	; 0x03
     fae:	64 83       	std	Z+4, r22	; 0x04
     fb0:	75 83       	std	Z+5, r23	; 0x05
     fb2:	97 83       	std	Z+7, r25	; 0x07
     fb4:	3f 7d       	andi	r19, 0xDF	; 223
	matrix.m[1] = SetBit(matrix.m[1], 5, 0);
     fb6:	31 83       	std	Z+1, r19	; 0x01
     fb8:	8f 7d       	andi	r24, 0xDF	; 223
	matrix.m[6] = SetBit(matrix.m[6], 5, 0);
     fba:	86 83       	std	Z+6, r24	; 0x06
     fbc:	82 ef       	ldi	r24, 0xF2	; 242
     fbe:	eb e3       	ldi	r30, 0x3B	; 59
     fc0:	f1 e0       	ldi	r31, 0x01	; 1
     fc2:	de 01       	movw	r26, r28
     fc4:	a1 54       	subi	r26, 0x41	; 65
     fc6:	ba 4e       	sbci	r27, 0xEA	; 234
     fc8:	01 90       	ld	r0, Z+
     fca:	0d 92       	st	X+, r0
     fcc:	8a 95       	dec	r24
     fce:	e1 f7       	brne	.-8      	; 0xfc8 <main+0x618>
     fd0:	f6 01       	movw	r30, r12
     fd2:	20 81       	ld	r18, Z
     fd4:	88 e0       	ldi	r24, 0x08	; 8
     fd6:	f8 01       	movw	r30, r16
     fd8:	de 01       	movw	r26, r28
     fda:	a3 58       	subi	r26, 0x83	; 131
     fdc:	bf 4d       	sbci	r27, 0xDF	; 223
     fde:	01 90       	ld	r0, Z+
     fe0:	0d 92       	st	X+, r0
     fe2:	8a 95       	dec	r24
     fe4:	e1 f7       	brne	.-8      	; 0xfde <main+0x62e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
     fe6:	82 2f       	mov	r24, r18
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	af eb       	ldi	r26, 0xBF	; 191
     fec:	b5 e1       	ldi	r27, 0x15	; 21
     fee:	ac 0f       	add	r26, r28
     ff0:	bd 1f       	adc	r27, r29
     ff2:	f8 e0       	ldi	r31, 0x08	; 8
     ff4:	2f 9f       	mul	r18, r31
     ff6:	a0 0d       	add	r26, r0
     ff8:	b1 1d       	adc	r27, r1
     ffa:	11 24       	eor	r1, r1
     ffc:	38 e0       	ldi	r19, 0x08	; 8
     ffe:	fe 01       	movw	r30, r28
    1000:	e3 58       	subi	r30, 0x83	; 131
    1002:	ff 4d       	sbci	r31, 0xDF	; 223
    1004:	01 90       	ld	r0, Z+
    1006:	0d 92       	st	X+, r0
    1008:	3a 95       	dec	r19
    100a:	e1 f7       	brne	.-8      	; 0x1004 <main+0x654>
	explosions.timeBetween[explosions.index] = a;
    100c:	fc 01       	movw	r30, r24
    100e:	e0 5b       	subi	r30, 0xB0	; 176
    1010:	ff 4f       	sbci	r31, 0xFF	; 255
    1012:	ee 0f       	add	r30, r30
    1014:	ff 1f       	adc	r31, r31
    1016:	4f eb       	ldi	r20, 0xBF	; 191
    1018:	55 e1       	ldi	r21, 0x15	; 21
    101a:	4c 0f       	add	r20, r28
    101c:	5d 1f       	adc	r21, r29
    101e:	e4 0f       	add	r30, r20
    1020:	f5 1f       	adc	r31, r21
    1022:	11 82       	std	Z+1, r1	; 0x01
    1024:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1026:	fc 01       	movw	r30, r24
    1028:	ec 59       	subi	r30, 0x9C	; 156
    102a:	ff 4f       	sbci	r31, 0xFF	; 255
    102c:	ee 0f       	add	r30, r30
    102e:	ff 1f       	adc	r31, r31
    1030:	e4 0f       	add	r30, r20
    1032:	f5 1f       	adc	r31, r21
    1034:	f1 82       	std	Z+1, r15	; 0x01
    1036:	e0 82       	st	Z, r14
	explosions.index++;
    1038:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    103a:	c1 55       	subi	r28, 0x51	; 81
    103c:	d9 4e       	sbci	r29, 0xE9	; 233
    103e:	28 83       	st	Y, r18
    1040:	cf 5a       	subi	r28, 0xAF	; 175
    1042:	d6 41       	sbci	r29, 0x16	; 22
    1044:	82 ef       	ldi	r24, 0xF2	; 242
    1046:	fa 01       	movw	r30, r20
    1048:	de 01       	movw	r26, r28
    104a:	a3 53       	subi	r26, 0x33	; 51
    104c:	bb 4e       	sbci	r27, 0xEB	; 235
    104e:	01 90       	ld	r0, Z+
    1050:	0d 92       	st	X+, r0
    1052:	8a 95       	dec	r24
    1054:	e1 f7       	brne	.-8      	; 0x104e <main+0x69e>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    1056:	c3 54       	subi	r28, 0x43	; 67
    1058:	da 4e       	sbci	r29, 0xEA	; 234
    105a:	28 83       	st	Y, r18
    105c:	cd 5b       	subi	r28, 0xBD	; 189
    105e:	d5 41       	sbci	r29, 0x15	; 21
    1060:	82 ef       	ldi	r24, 0xF2	; 242
    1062:	fe 01       	movw	r30, r28
    1064:	e3 53       	subi	r30, 0x33	; 51
    1066:	fb 4e       	sbci	r31, 0xEB	; 235
    1068:	ab e3       	ldi	r26, 0x3B	; 59
    106a:	b1 e0       	ldi	r27, 0x01	; 1
    106c:	01 90       	ld	r0, Z+
    106e:	0d 92       	st	X+, r0
    1070:	8a 95       	dec	r24
    1072:	e1 f7       	brne	.-8      	; 0x106c <main+0x6bc>
	
	matrix = clearSingleMatrix(matrix);
    1074:	20 91 33 01 	lds	r18, 0x0133
    1078:	30 91 34 01 	lds	r19, 0x0134
    107c:	40 91 35 01 	lds	r20, 0x0135
    1080:	50 91 36 01 	lds	r21, 0x0136
    1084:	60 91 37 01 	lds	r22, 0x0137
    1088:	70 91 38 01 	lds	r23, 0x0138
    108c:	80 91 39 01 	lds	r24, 0x0139
    1090:	90 91 3a 01 	lds	r25, 0x013A
    1094:	39 d9       	rcall	.-3470   	; 0x308 <clearSingleMatrix>
    1096:	f8 01       	movw	r30, r16
    1098:	20 83       	st	Z, r18
    109a:	42 83       	std	Z+2, r20	; 0x02
    109c:	53 83       	std	Z+3, r21	; 0x03
    109e:	64 83       	std	Z+4, r22	; 0x04
    10a0:	75 83       	std	Z+5, r23	; 0x05
    10a2:	97 83       	std	Z+7, r25	; 0x07
    10a4:	3f 7b       	andi	r19, 0xBF	; 191
	matrix.m[1] = SetBit(matrix.m[1], 6, 0);
    10a6:	31 83       	std	Z+1, r19	; 0x01
    10a8:	8f 7b       	andi	r24, 0xBF	; 191
	matrix.m[6] = SetBit(matrix.m[6], 6, 0);
    10aa:	86 83       	std	Z+6, r24	; 0x06
    10ac:	82 ef       	ldi	r24, 0xF2	; 242
    10ae:	eb e3       	ldi	r30, 0x3B	; 59
    10b0:	f1 e0       	ldi	r31, 0x01	; 1
    10b2:	de 01       	movw	r26, r28
    10b4:	a5 52       	subi	r26, 0x25	; 37
    10b6:	bc 4e       	sbci	r27, 0xEC	; 236
    10b8:	01 90       	ld	r0, Z+
    10ba:	0d 92       	st	X+, r0
    10bc:	8a 95       	dec	r24
    10be:	e1 f7       	brne	.-8      	; 0x10b8 <main+0x708>
    10c0:	f6 01       	movw	r30, r12
    10c2:	20 81       	ld	r18, Z
    10c4:	88 e0       	ldi	r24, 0x08	; 8
    10c6:	f8 01       	movw	r30, r16
    10c8:	de 01       	movw	r26, r28
    10ca:	ab 58       	subi	r26, 0x8B	; 139
    10cc:	bf 4d       	sbci	r27, 0xDF	; 223
    10ce:	01 90       	ld	r0, Z+
    10d0:	0d 92       	st	X+, r0
    10d2:	8a 95       	dec	r24
    10d4:	e1 f7       	brne	.-8      	; 0x10ce <main+0x71e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    10d6:	82 2f       	mov	r24, r18
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	ab ed       	ldi	r26, 0xDB	; 219
    10dc:	b3 e1       	ldi	r27, 0x13	; 19
    10de:	ac 0f       	add	r26, r28
    10e0:	bd 1f       	adc	r27, r29
    10e2:	f8 e0       	ldi	r31, 0x08	; 8
    10e4:	2f 9f       	mul	r18, r31
    10e6:	a0 0d       	add	r26, r0
    10e8:	b1 1d       	adc	r27, r1
    10ea:	11 24       	eor	r1, r1
    10ec:	38 e0       	ldi	r19, 0x08	; 8
    10ee:	fe 01       	movw	r30, r28
    10f0:	eb 58       	subi	r30, 0x8B	; 139
    10f2:	ff 4d       	sbci	r31, 0xDF	; 223
    10f4:	01 90       	ld	r0, Z+
    10f6:	0d 92       	st	X+, r0
    10f8:	3a 95       	dec	r19
    10fa:	e1 f7       	brne	.-8      	; 0x10f4 <main+0x744>
	explosions.timeBetween[explosions.index] = a;
    10fc:	fc 01       	movw	r30, r24
    10fe:	e0 5b       	subi	r30, 0xB0	; 176
    1100:	ff 4f       	sbci	r31, 0xFF	; 255
    1102:	ee 0f       	add	r30, r30
    1104:	ff 1f       	adc	r31, r31
    1106:	4b ed       	ldi	r20, 0xDB	; 219
    1108:	53 e1       	ldi	r21, 0x13	; 19
    110a:	4c 0f       	add	r20, r28
    110c:	5d 1f       	adc	r21, r29
    110e:	e4 0f       	add	r30, r20
    1110:	f5 1f       	adc	r31, r21
    1112:	11 82       	std	Z+1, r1	; 0x01
    1114:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1116:	fc 01       	movw	r30, r24
    1118:	ec 59       	subi	r30, 0x9C	; 156
    111a:	ff 4f       	sbci	r31, 0xFF	; 255
    111c:	ee 0f       	add	r30, r30
    111e:	ff 1f       	adc	r31, r31
    1120:	e4 0f       	add	r30, r20
    1122:	f5 1f       	adc	r31, r21
    1124:	f1 82       	std	Z+1, r15	; 0x01
    1126:	e0 82       	st	Z, r14
	explosions.index++;
    1128:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    112a:	c5 53       	subi	r28, 0x35	; 53
    112c:	db 4e       	sbci	r29, 0xEB	; 235
    112e:	28 83       	st	Y, r18
    1130:	cb 5c       	subi	r28, 0xCB	; 203
    1132:	d4 41       	sbci	r29, 0x14	; 20
    1134:	82 ef       	ldi	r24, 0xF2	; 242
    1136:	fa 01       	movw	r30, r20
    1138:	de 01       	movw	r26, r28
    113a:	a7 51       	subi	r26, 0x17	; 23
    113c:	bd 4e       	sbci	r27, 0xED	; 237
    113e:	01 90       	ld	r0, Z+
    1140:	0d 92       	st	X+, r0
    1142:	8a 95       	dec	r24
    1144:	e1 f7       	brne	.-8      	; 0x113e <main+0x78e>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    1146:	c7 52       	subi	r28, 0x27	; 39
    1148:	dc 4e       	sbci	r29, 0xEC	; 236
    114a:	28 83       	st	Y, r18
    114c:	c9 5d       	subi	r28, 0xD9	; 217
    114e:	d3 41       	sbci	r29, 0x13	; 19
    1150:	82 ef       	ldi	r24, 0xF2	; 242
    1152:	fe 01       	movw	r30, r28
    1154:	e7 51       	subi	r30, 0x17	; 23
    1156:	fd 4e       	sbci	r31, 0xED	; 237
    1158:	ab e3       	ldi	r26, 0x3B	; 59
    115a:	b1 e0       	ldi	r27, 0x01	; 1
    115c:	01 90       	ld	r0, Z+
    115e:	0d 92       	st	X+, r0
    1160:	8a 95       	dec	r24
    1162:	e1 f7       	brne	.-8      	; 0x115c <main+0x7ac>
	
	matrix = clearSingleMatrix(matrix);
    1164:	20 91 33 01 	lds	r18, 0x0133
    1168:	30 91 34 01 	lds	r19, 0x0134
    116c:	40 91 35 01 	lds	r20, 0x0135
    1170:	50 91 36 01 	lds	r21, 0x0136
    1174:	60 91 37 01 	lds	r22, 0x0137
    1178:	70 91 38 01 	lds	r23, 0x0138
    117c:	80 91 39 01 	lds	r24, 0x0139
    1180:	90 91 3a 01 	lds	r25, 0x013A
    1184:	c1 d8       	rcall	.-3710   	; 0x308 <clearSingleMatrix>
    1186:	f8 01       	movw	r30, r16
    1188:	20 83       	st	Z, r18
    118a:	42 83       	std	Z+2, r20	; 0x02
    118c:	53 83       	std	Z+3, r21	; 0x03
    118e:	64 83       	std	Z+4, r22	; 0x04
    1190:	75 83       	std	Z+5, r23	; 0x05
    1192:	97 83       	std	Z+7, r25	; 0x07
    1194:	3f 77       	andi	r19, 0x7F	; 127
	matrix.m[1] = SetBit(matrix.m[1], 7, 0);
    1196:	31 83       	std	Z+1, r19	; 0x01
    1198:	8f 77       	andi	r24, 0x7F	; 127
	matrix.m[6] = SetBit(matrix.m[6], 7, 0);
    119a:	86 83       	std	Z+6, r24	; 0x06
    119c:	82 ef       	ldi	r24, 0xF2	; 242
    119e:	eb e3       	ldi	r30, 0x3B	; 59
    11a0:	f1 e0       	ldi	r31, 0x01	; 1
    11a2:	de 01       	movw	r26, r28
    11a4:	a9 50       	subi	r26, 0x09	; 9
    11a6:	be 4e       	sbci	r27, 0xEE	; 238
    11a8:	01 90       	ld	r0, Z+
    11aa:	0d 92       	st	X+, r0
    11ac:	8a 95       	dec	r24
    11ae:	e1 f7       	brne	.-8      	; 0x11a8 <main+0x7f8>
    11b0:	f6 01       	movw	r30, r12
    11b2:	20 81       	ld	r18, Z
    11b4:	88 e0       	ldi	r24, 0x08	; 8
    11b6:	f8 01       	movw	r30, r16
    11b8:	de 01       	movw	r26, r28
    11ba:	a3 59       	subi	r26, 0x93	; 147
    11bc:	bf 4d       	sbci	r27, 0xDF	; 223
    11be:	01 90       	ld	r0, Z+
    11c0:	0d 92       	st	X+, r0
    11c2:	8a 95       	dec	r24
    11c4:	e1 f7       	brne	.-8      	; 0x11be <main+0x80e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    11c6:	82 2f       	mov	r24, r18
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	a7 ef       	ldi	r26, 0xF7	; 247
    11cc:	b1 e1       	ldi	r27, 0x11	; 17
    11ce:	ac 0f       	add	r26, r28
    11d0:	bd 1f       	adc	r27, r29
    11d2:	f8 e0       	ldi	r31, 0x08	; 8
    11d4:	2f 9f       	mul	r18, r31
    11d6:	a0 0d       	add	r26, r0
    11d8:	b1 1d       	adc	r27, r1
    11da:	11 24       	eor	r1, r1
    11dc:	38 e0       	ldi	r19, 0x08	; 8
    11de:	fe 01       	movw	r30, r28
    11e0:	e3 59       	subi	r30, 0x93	; 147
    11e2:	ff 4d       	sbci	r31, 0xDF	; 223
    11e4:	01 90       	ld	r0, Z+
    11e6:	0d 92       	st	X+, r0
    11e8:	3a 95       	dec	r19
    11ea:	e1 f7       	brne	.-8      	; 0x11e4 <main+0x834>
	explosions.timeBetween[explosions.index] = a;
    11ec:	fc 01       	movw	r30, r24
    11ee:	e0 5b       	subi	r30, 0xB0	; 176
    11f0:	ff 4f       	sbci	r31, 0xFF	; 255
    11f2:	ee 0f       	add	r30, r30
    11f4:	ff 1f       	adc	r31, r31
    11f6:	47 ef       	ldi	r20, 0xF7	; 247
    11f8:	51 e1       	ldi	r21, 0x11	; 17
    11fa:	4c 0f       	add	r20, r28
    11fc:	5d 1f       	adc	r21, r29
    11fe:	e4 0f       	add	r30, r20
    1200:	f5 1f       	adc	r31, r21
    1202:	11 82       	std	Z+1, r1	; 0x01
    1204:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1206:	fc 01       	movw	r30, r24
    1208:	ec 59       	subi	r30, 0x9C	; 156
    120a:	ff 4f       	sbci	r31, 0xFF	; 255
    120c:	ee 0f       	add	r30, r30
    120e:	ff 1f       	adc	r31, r31
    1210:	e4 0f       	add	r30, r20
    1212:	f5 1f       	adc	r31, r21
    1214:	f1 82       	std	Z+1, r15	; 0x01
    1216:	e0 82       	st	Z, r14
	explosions.index++;
    1218:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    121a:	c9 51       	subi	r28, 0x19	; 25
    121c:	dd 4e       	sbci	r29, 0xED	; 237
    121e:	28 83       	st	Y, r18
    1220:	c7 5e       	subi	r28, 0xE7	; 231
    1222:	d2 41       	sbci	r29, 0x12	; 18
    1224:	82 ef       	ldi	r24, 0xF2	; 242
    1226:	fa 01       	movw	r30, r20
    1228:	de 01       	movw	r26, r28
    122a:	ab 5f       	subi	r26, 0xFB	; 251
    122c:	be 4e       	sbci	r27, 0xEE	; 238
    122e:	01 90       	ld	r0, Z+
    1230:	0d 92       	st	X+, r0
    1232:	8a 95       	dec	r24
    1234:	e1 f7       	brne	.-8      	; 0x122e <main+0x87e>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    1236:	cb 50       	subi	r28, 0x0B	; 11
    1238:	de 4e       	sbci	r29, 0xEE	; 238
    123a:	28 83       	st	Y, r18
    123c:	c5 5f       	subi	r28, 0xF5	; 245
    123e:	d1 41       	sbci	r29, 0x11	; 17
    1240:	82 ef       	ldi	r24, 0xF2	; 242
    1242:	fe 01       	movw	r30, r28
    1244:	eb 5f       	subi	r30, 0xFB	; 251
    1246:	fe 4e       	sbci	r31, 0xEE	; 238
    1248:	ab e3       	ldi	r26, 0x3B	; 59
    124a:	b1 e0       	ldi	r27, 0x01	; 1
    124c:	01 90       	ld	r0, Z+
    124e:	0d 92       	st	X+, r0
    1250:	8a 95       	dec	r24
    1252:	e1 f7       	brne	.-8      	; 0x124c <main+0x89c>
	
	matrix = clearSingleMatrix(matrix);
    1254:	20 91 33 01 	lds	r18, 0x0133
    1258:	30 91 34 01 	lds	r19, 0x0134
    125c:	40 91 35 01 	lds	r20, 0x0135
    1260:	50 91 36 01 	lds	r21, 0x0136
    1264:	60 91 37 01 	lds	r22, 0x0137
    1268:	70 91 38 01 	lds	r23, 0x0138
    126c:	80 91 39 01 	lds	r24, 0x0139
    1270:	90 91 3a 01 	lds	r25, 0x013A
    1274:	49 d8       	rcall	.-3950   	; 0x308 <clearSingleMatrix>
    1276:	f8 01       	movw	r30, r16
    1278:	20 83       	st	Z, r18
    127a:	31 83       	std	Z+1, r19	; 0x01
    127c:	53 83       	std	Z+3, r21	; 0x03
    127e:	64 83       	std	Z+4, r22	; 0x04
    1280:	86 83       	std	Z+6, r24	; 0x06
    1282:	97 83       	std	Z+7, r25	; 0x07
    1284:	4f 77       	andi	r20, 0x7F	; 127
	matrix.m[2] = SetBit(matrix.m[2], 7, 0);
    1286:	42 83       	std	Z+2, r20	; 0x02
    1288:	7f 77       	andi	r23, 0x7F	; 127
	matrix.m[5] = SetBit(matrix.m[5], 7, 0);
    128a:	75 83       	std	Z+5, r23	; 0x05
    128c:	82 ef       	ldi	r24, 0xF2	; 242
    128e:	eb e3       	ldi	r30, 0x3B	; 59
    1290:	f1 e0       	ldi	r31, 0x01	; 1
    1292:	de 01       	movw	r26, r28
    1294:	ad 5e       	subi	r26, 0xED	; 237
    1296:	bf 4e       	sbci	r27, 0xEF	; 239
    1298:	01 90       	ld	r0, Z+
    129a:	0d 92       	st	X+, r0
    129c:	8a 95       	dec	r24
    129e:	e1 f7       	brne	.-8      	; 0x1298 <main+0x8e8>
    12a0:	f6 01       	movw	r30, r12
    12a2:	20 81       	ld	r18, Z
    12a4:	88 e0       	ldi	r24, 0x08	; 8
    12a6:	f8 01       	movw	r30, r16
    12a8:	de 01       	movw	r26, r28
    12aa:	ab 59       	subi	r26, 0x9B	; 155
    12ac:	bf 4d       	sbci	r27, 0xDF	; 223
    12ae:	01 90       	ld	r0, Z+
    12b0:	0d 92       	st	X+, r0
    12b2:	8a 95       	dec	r24
    12b4:	e1 f7       	brne	.-8      	; 0x12ae <main+0x8fe>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    12b6:	82 2f       	mov	r24, r18
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	a3 e1       	ldi	r26, 0x13	; 19
    12bc:	b0 e1       	ldi	r27, 0x10	; 16
    12be:	ac 0f       	add	r26, r28
    12c0:	bd 1f       	adc	r27, r29
    12c2:	f8 e0       	ldi	r31, 0x08	; 8
    12c4:	2f 9f       	mul	r18, r31
    12c6:	a0 0d       	add	r26, r0
    12c8:	b1 1d       	adc	r27, r1
    12ca:	11 24       	eor	r1, r1
    12cc:	38 e0       	ldi	r19, 0x08	; 8
    12ce:	fe 01       	movw	r30, r28
    12d0:	eb 59       	subi	r30, 0x9B	; 155
    12d2:	ff 4d       	sbci	r31, 0xDF	; 223
    12d4:	01 90       	ld	r0, Z+
    12d6:	0d 92       	st	X+, r0
    12d8:	3a 95       	dec	r19
    12da:	e1 f7       	brne	.-8      	; 0x12d4 <main+0x924>
	explosions.timeBetween[explosions.index] = a;
    12dc:	fc 01       	movw	r30, r24
    12de:	e0 5b       	subi	r30, 0xB0	; 176
    12e0:	ff 4f       	sbci	r31, 0xFF	; 255
    12e2:	ee 0f       	add	r30, r30
    12e4:	ff 1f       	adc	r31, r31
    12e6:	43 e1       	ldi	r20, 0x13	; 19
    12e8:	50 e1       	ldi	r21, 0x10	; 16
    12ea:	4c 0f       	add	r20, r28
    12ec:	5d 1f       	adc	r21, r29
    12ee:	e4 0f       	add	r30, r20
    12f0:	f5 1f       	adc	r31, r21
    12f2:	11 82       	std	Z+1, r1	; 0x01
    12f4:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    12f6:	fc 01       	movw	r30, r24
    12f8:	ec 59       	subi	r30, 0x9C	; 156
    12fa:	ff 4f       	sbci	r31, 0xFF	; 255
    12fc:	ee 0f       	add	r30, r30
    12fe:	ff 1f       	adc	r31, r31
    1300:	e4 0f       	add	r30, r20
    1302:	f5 1f       	adc	r31, r21
    1304:	f1 82       	std	Z+1, r15	; 0x01
    1306:	e0 82       	st	Z, r14
	explosions.index++;
    1308:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    130a:	cd 5f       	subi	r28, 0xFD	; 253
    130c:	de 4e       	sbci	r29, 0xEE	; 238
    130e:	28 83       	st	Y, r18
    1310:	c3 50       	subi	r28, 0x03	; 3
    1312:	d1 41       	sbci	r29, 0x11	; 17
    1314:	82 ef       	ldi	r24, 0xF2	; 242
    1316:	fa 01       	movw	r30, r20
    1318:	de 01       	movw	r26, r28
    131a:	af 5d       	subi	r26, 0xDF	; 223
    131c:	b0 4f       	sbci	r27, 0xF0	; 240
    131e:	01 90       	ld	r0, Z+
    1320:	0d 92       	st	X+, r0
    1322:	8a 95       	dec	r24
    1324:	e1 f7       	brne	.-8      	; 0x131e <main+0x96e>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    1326:	cf 5e       	subi	r28, 0xEF	; 239
    1328:	df 4e       	sbci	r29, 0xEF	; 239
    132a:	28 83       	st	Y, r18
    132c:	c1 51       	subi	r28, 0x11	; 17
    132e:	d0 41       	sbci	r29, 0x10	; 16
    1330:	82 ef       	ldi	r24, 0xF2	; 242
    1332:	fe 01       	movw	r30, r28
    1334:	ef 5d       	subi	r30, 0xDF	; 223
    1336:	f0 4f       	sbci	r31, 0xF0	; 240
    1338:	ab e3       	ldi	r26, 0x3B	; 59
    133a:	b1 e0       	ldi	r27, 0x01	; 1
    133c:	01 90       	ld	r0, Z+
    133e:	0d 92       	st	X+, r0
    1340:	8a 95       	dec	r24
    1342:	e1 f7       	brne	.-8      	; 0x133c <main+0x98c>
	
	matrix = clearSingleMatrix(matrix);
    1344:	20 91 33 01 	lds	r18, 0x0133
    1348:	30 91 34 01 	lds	r19, 0x0134
    134c:	40 91 35 01 	lds	r20, 0x0135
    1350:	50 91 36 01 	lds	r21, 0x0136
    1354:	60 91 37 01 	lds	r22, 0x0137
    1358:	70 91 38 01 	lds	r23, 0x0138
    135c:	80 91 39 01 	lds	r24, 0x0139
    1360:	90 91 3a 01 	lds	r25, 0x013A
    1364:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    1368:	f8 01       	movw	r30, r16
    136a:	20 83       	st	Z, r18
    136c:	31 83       	std	Z+1, r19	; 0x01
    136e:	53 83       	std	Z+3, r21	; 0x03
    1370:	64 83       	std	Z+4, r22	; 0x04
    1372:	86 83       	std	Z+6, r24	; 0x06
    1374:	97 83       	std	Z+7, r25	; 0x07
    1376:	4f 7b       	andi	r20, 0xBF	; 191
	matrix.m[2] = SetBit(matrix.m[2], 6, 0);
    1378:	42 83       	std	Z+2, r20	; 0x02
    137a:	7f 7b       	andi	r23, 0xBF	; 191
	matrix.m[5] = SetBit(matrix.m[5], 6, 0);
    137c:	70 93 38 01 	sts	0x0138, r23
    1380:	82 ef       	ldi	r24, 0xF2	; 242
    1382:	eb e3       	ldi	r30, 0x3B	; 59
    1384:	f1 e0       	ldi	r31, 0x01	; 1
    1386:	de 01       	movw	r26, r28
    1388:	a1 5d       	subi	r26, 0xD1	; 209
    138a:	b1 4f       	sbci	r27, 0xF1	; 241
    138c:	01 90       	ld	r0, Z+
    138e:	0d 92       	st	X+, r0
    1390:	8a 95       	dec	r24
    1392:	e1 f7       	brne	.-8      	; 0x138c <main+0x9dc>
    1394:	f6 01       	movw	r30, r12
    1396:	20 81       	ld	r18, Z
    1398:	88 e0       	ldi	r24, 0x08	; 8
    139a:	f8 01       	movw	r30, r16
    139c:	de 01       	movw	r26, r28
    139e:	a3 5a       	subi	r26, 0xA3	; 163
    13a0:	bf 4d       	sbci	r27, 0xDF	; 223
    13a2:	01 90       	ld	r0, Z+
    13a4:	0d 92       	st	X+, r0
    13a6:	8a 95       	dec	r24
    13a8:	e1 f7       	brne	.-8      	; 0x13a2 <main+0x9f2>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    13aa:	82 2f       	mov	r24, r18
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	af e2       	ldi	r26, 0x2F	; 47
    13b0:	be e0       	ldi	r27, 0x0E	; 14
    13b2:	ac 0f       	add	r26, r28
    13b4:	bd 1f       	adc	r27, r29
    13b6:	f8 e0       	ldi	r31, 0x08	; 8
    13b8:	2f 9f       	mul	r18, r31
    13ba:	a0 0d       	add	r26, r0
    13bc:	b1 1d       	adc	r27, r1
    13be:	11 24       	eor	r1, r1
    13c0:	38 e0       	ldi	r19, 0x08	; 8
    13c2:	fe 01       	movw	r30, r28
    13c4:	e3 5a       	subi	r30, 0xA3	; 163
    13c6:	ff 4d       	sbci	r31, 0xDF	; 223
    13c8:	01 90       	ld	r0, Z+
    13ca:	0d 92       	st	X+, r0
    13cc:	3a 95       	dec	r19
    13ce:	e1 f7       	brne	.-8      	; 0x13c8 <main+0xa18>
	explosions.timeBetween[explosions.index] = a;
    13d0:	fc 01       	movw	r30, r24
    13d2:	e0 5b       	subi	r30, 0xB0	; 176
    13d4:	ff 4f       	sbci	r31, 0xFF	; 255
    13d6:	ee 0f       	add	r30, r30
    13d8:	ff 1f       	adc	r31, r31
    13da:	4f e2       	ldi	r20, 0x2F	; 47
    13dc:	5e e0       	ldi	r21, 0x0E	; 14
    13de:	4c 0f       	add	r20, r28
    13e0:	5d 1f       	adc	r21, r29
    13e2:	e4 0f       	add	r30, r20
    13e4:	f5 1f       	adc	r31, r21
    13e6:	11 82       	std	Z+1, r1	; 0x01
    13e8:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    13ea:	fc 01       	movw	r30, r24
    13ec:	ec 59       	subi	r30, 0x9C	; 156
    13ee:	ff 4f       	sbci	r31, 0xFF	; 255
    13f0:	ee 0f       	add	r30, r30
    13f2:	ff 1f       	adc	r31, r31
    13f4:	e4 0f       	add	r30, r20
    13f6:	f5 1f       	adc	r31, r21
    13f8:	f1 82       	std	Z+1, r15	; 0x01
    13fa:	e0 82       	st	Z, r14
	explosions.index++;
    13fc:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    13fe:	c1 5e       	subi	r28, 0xE1	; 225
    1400:	d0 4f       	sbci	r29, 0xF0	; 240
    1402:	28 83       	st	Y, r18
    1404:	cf 51       	subi	r28, 0x1F	; 31
    1406:	df 40       	sbci	r29, 0x0F	; 15
    1408:	82 ef       	ldi	r24, 0xF2	; 242
    140a:	fa 01       	movw	r30, r20
    140c:	de 01       	movw	r26, r28
    140e:	a3 5c       	subi	r26, 0xC3	; 195
    1410:	b2 4f       	sbci	r27, 0xF2	; 242
    1412:	01 90       	ld	r0, Z+
    1414:	0d 92       	st	X+, r0
    1416:	8a 95       	dec	r24
    1418:	e1 f7       	brne	.-8      	; 0x1412 <main+0xa62>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    141a:	c3 5d       	subi	r28, 0xD3	; 211
    141c:	d1 4f       	sbci	r29, 0xF1	; 241
    141e:	28 83       	st	Y, r18
    1420:	cd 52       	subi	r28, 0x2D	; 45
    1422:	de 40       	sbci	r29, 0x0E	; 14
    1424:	82 ef       	ldi	r24, 0xF2	; 242
    1426:	fe 01       	movw	r30, r28
    1428:	e3 5c       	subi	r30, 0xC3	; 195
    142a:	f2 4f       	sbci	r31, 0xF2	; 242
    142c:	ab e3       	ldi	r26, 0x3B	; 59
    142e:	b1 e0       	ldi	r27, 0x01	; 1
    1430:	01 90       	ld	r0, Z+
    1432:	0d 92       	st	X+, r0
    1434:	8a 95       	dec	r24
    1436:	e1 f7       	brne	.-8      	; 0x1430 <main+0xa80>
	
	matrix = clearSingleMatrix(matrix);
    1438:	20 91 33 01 	lds	r18, 0x0133
    143c:	30 91 34 01 	lds	r19, 0x0134
    1440:	40 91 35 01 	lds	r20, 0x0135
    1444:	50 91 36 01 	lds	r21, 0x0136
    1448:	60 91 37 01 	lds	r22, 0x0137
    144c:	70 91 38 01 	lds	r23, 0x0138
    1450:	80 91 39 01 	lds	r24, 0x0139
    1454:	90 91 3a 01 	lds	r25, 0x013A
    1458:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    145c:	f8 01       	movw	r30, r16
    145e:	20 83       	st	Z, r18
    1460:	31 83       	std	Z+1, r19	; 0x01
    1462:	53 83       	std	Z+3, r21	; 0x03
    1464:	64 83       	std	Z+4, r22	; 0x04
    1466:	86 83       	std	Z+6, r24	; 0x06
    1468:	97 83       	std	Z+7, r25	; 0x07
    146a:	4f 7d       	andi	r20, 0xDF	; 223
	matrix.m[2] = SetBit(matrix.m[2], 5, 0);
    146c:	42 83       	std	Z+2, r20	; 0x02
    146e:	7f 7d       	andi	r23, 0xDF	; 223
	matrix.m[5] = SetBit(matrix.m[5], 5, 0);
    1470:	75 83       	std	Z+5, r23	; 0x05
    1472:	82 ef       	ldi	r24, 0xF2	; 242
    1474:	eb e3       	ldi	r30, 0x3B	; 59
    1476:	f1 e0       	ldi	r31, 0x01	; 1
    1478:	de 01       	movw	r26, r28
    147a:	a5 5b       	subi	r26, 0xB5	; 181
    147c:	b3 4f       	sbci	r27, 0xF3	; 243
    147e:	01 90       	ld	r0, Z+
    1480:	0d 92       	st	X+, r0
    1482:	8a 95       	dec	r24
    1484:	e1 f7       	brne	.-8      	; 0x147e <main+0xace>
    1486:	f6 01       	movw	r30, r12
    1488:	20 81       	ld	r18, Z
    148a:	88 e0       	ldi	r24, 0x08	; 8
    148c:	f8 01       	movw	r30, r16
    148e:	de 01       	movw	r26, r28
    1490:	ab 5a       	subi	r26, 0xAB	; 171
    1492:	bf 4d       	sbci	r27, 0xDF	; 223
    1494:	01 90       	ld	r0, Z+
    1496:	0d 92       	st	X+, r0
    1498:	8a 95       	dec	r24
    149a:	e1 f7       	brne	.-8      	; 0x1494 <main+0xae4>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    149c:	82 2f       	mov	r24, r18
    149e:	90 e0       	ldi	r25, 0x00	; 0
    14a0:	ab e4       	ldi	r26, 0x4B	; 75
    14a2:	bc e0       	ldi	r27, 0x0C	; 12
    14a4:	ac 0f       	add	r26, r28
    14a6:	bd 1f       	adc	r27, r29
    14a8:	f8 e0       	ldi	r31, 0x08	; 8
    14aa:	2f 9f       	mul	r18, r31
    14ac:	a0 0d       	add	r26, r0
    14ae:	b1 1d       	adc	r27, r1
    14b0:	11 24       	eor	r1, r1
    14b2:	38 e0       	ldi	r19, 0x08	; 8
    14b4:	fe 01       	movw	r30, r28
    14b6:	eb 5a       	subi	r30, 0xAB	; 171
    14b8:	ff 4d       	sbci	r31, 0xDF	; 223
    14ba:	01 90       	ld	r0, Z+
    14bc:	0d 92       	st	X+, r0
    14be:	3a 95       	dec	r19
    14c0:	e1 f7       	brne	.-8      	; 0x14ba <main+0xb0a>
	explosions.timeBetween[explosions.index] = a;
    14c2:	fc 01       	movw	r30, r24
    14c4:	e0 5b       	subi	r30, 0xB0	; 176
    14c6:	ff 4f       	sbci	r31, 0xFF	; 255
    14c8:	ee 0f       	add	r30, r30
    14ca:	ff 1f       	adc	r31, r31
    14cc:	4b e4       	ldi	r20, 0x4B	; 75
    14ce:	5c e0       	ldi	r21, 0x0C	; 12
    14d0:	4c 0f       	add	r20, r28
    14d2:	5d 1f       	adc	r21, r29
    14d4:	e4 0f       	add	r30, r20
    14d6:	f5 1f       	adc	r31, r21
    14d8:	11 82       	std	Z+1, r1	; 0x01
    14da:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    14dc:	fc 01       	movw	r30, r24
    14de:	ec 59       	subi	r30, 0x9C	; 156
    14e0:	ff 4f       	sbci	r31, 0xFF	; 255
    14e2:	ee 0f       	add	r30, r30
    14e4:	ff 1f       	adc	r31, r31
    14e6:	e4 0f       	add	r30, r20
    14e8:	f5 1f       	adc	r31, r21
    14ea:	f1 82       	std	Z+1, r15	; 0x01
    14ec:	e0 82       	st	Z, r14
	explosions.index++;
    14ee:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    14f0:	c5 5c       	subi	r28, 0xC5	; 197
    14f2:	d2 4f       	sbci	r29, 0xF2	; 242
    14f4:	28 83       	st	Y, r18
    14f6:	cb 53       	subi	r28, 0x3B	; 59
    14f8:	dd 40       	sbci	r29, 0x0D	; 13
    14fa:	82 ef       	ldi	r24, 0xF2	; 242
    14fc:	fa 01       	movw	r30, r20
    14fe:	de 01       	movw	r26, r28
    1500:	a7 5a       	subi	r26, 0xA7	; 167
    1502:	b4 4f       	sbci	r27, 0xF4	; 244
    1504:	01 90       	ld	r0, Z+
    1506:	0d 92       	st	X+, r0
    1508:	8a 95       	dec	r24
    150a:	e1 f7       	brne	.-8      	; 0x1504 <main+0xb54>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    150c:	c7 5b       	subi	r28, 0xB7	; 183
    150e:	d3 4f       	sbci	r29, 0xF3	; 243
    1510:	28 83       	st	Y, r18
    1512:	c9 54       	subi	r28, 0x49	; 73
    1514:	dc 40       	sbci	r29, 0x0C	; 12
    1516:	82 ef       	ldi	r24, 0xF2	; 242
    1518:	fe 01       	movw	r30, r28
    151a:	e7 5a       	subi	r30, 0xA7	; 167
    151c:	f4 4f       	sbci	r31, 0xF4	; 244
    151e:	ab e3       	ldi	r26, 0x3B	; 59
    1520:	b1 e0       	ldi	r27, 0x01	; 1
    1522:	01 90       	ld	r0, Z+
    1524:	0d 92       	st	X+, r0
    1526:	8a 95       	dec	r24
    1528:	e1 f7       	brne	.-8      	; 0x1522 <main+0xb72>
	
	matrix = clearSingleMatrix(matrix);
    152a:	20 91 33 01 	lds	r18, 0x0133
    152e:	30 91 34 01 	lds	r19, 0x0134
    1532:	40 91 35 01 	lds	r20, 0x0135
    1536:	50 91 36 01 	lds	r21, 0x0136
    153a:	60 91 37 01 	lds	r22, 0x0137
    153e:	70 91 38 01 	lds	r23, 0x0138
    1542:	80 91 39 01 	lds	r24, 0x0139
    1546:	90 91 3a 01 	lds	r25, 0x013A
    154a:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    154e:	f8 01       	movw	r30, r16
    1550:	20 83       	st	Z, r18
    1552:	31 83       	std	Z+1, r19	; 0x01
    1554:	53 83       	std	Z+3, r21	; 0x03
    1556:	64 83       	std	Z+4, r22	; 0x04
    1558:	86 83       	std	Z+6, r24	; 0x06
    155a:	97 83       	std	Z+7, r25	; 0x07
    155c:	4f 7e       	andi	r20, 0xEF	; 239
	matrix.m[2] = SetBit(matrix.m[2], 4, 0);
    155e:	42 83       	std	Z+2, r20	; 0x02
    1560:	7f 7e       	andi	r23, 0xEF	; 239
	matrix.m[5] = SetBit(matrix.m[5], 4, 0);
    1562:	75 83       	std	Z+5, r23	; 0x05
    1564:	82 ef       	ldi	r24, 0xF2	; 242
    1566:	eb e3       	ldi	r30, 0x3B	; 59
    1568:	f1 e0       	ldi	r31, 0x01	; 1
    156a:	de 01       	movw	r26, r28
    156c:	a9 59       	subi	r26, 0x99	; 153
    156e:	b5 4f       	sbci	r27, 0xF5	; 245
    1570:	01 90       	ld	r0, Z+
    1572:	0d 92       	st	X+, r0
    1574:	8a 95       	dec	r24
    1576:	e1 f7       	brne	.-8      	; 0x1570 <main+0xbc0>
    1578:	f6 01       	movw	r30, r12
    157a:	20 81       	ld	r18, Z
    157c:	88 e0       	ldi	r24, 0x08	; 8
    157e:	f8 01       	movw	r30, r16
    1580:	de 01       	movw	r26, r28
    1582:	a3 5b       	subi	r26, 0xB3	; 179
    1584:	bf 4d       	sbci	r27, 0xDF	; 223
    1586:	01 90       	ld	r0, Z+
    1588:	0d 92       	st	X+, r0
    158a:	8a 95       	dec	r24
    158c:	e1 f7       	brne	.-8      	; 0x1586 <main+0xbd6>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    158e:	82 2f       	mov	r24, r18
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	a7 e6       	ldi	r26, 0x67	; 103
    1594:	ba e0       	ldi	r27, 0x0A	; 10
    1596:	ac 0f       	add	r26, r28
    1598:	bd 1f       	adc	r27, r29
    159a:	f8 e0       	ldi	r31, 0x08	; 8
    159c:	2f 9f       	mul	r18, r31
    159e:	a0 0d       	add	r26, r0
    15a0:	b1 1d       	adc	r27, r1
    15a2:	11 24       	eor	r1, r1
    15a4:	38 e0       	ldi	r19, 0x08	; 8
    15a6:	fe 01       	movw	r30, r28
    15a8:	e3 5b       	subi	r30, 0xB3	; 179
    15aa:	ff 4d       	sbci	r31, 0xDF	; 223
    15ac:	01 90       	ld	r0, Z+
    15ae:	0d 92       	st	X+, r0
    15b0:	3a 95       	dec	r19
    15b2:	e1 f7       	brne	.-8      	; 0x15ac <main+0xbfc>
	explosions.timeBetween[explosions.index] = a;
    15b4:	fc 01       	movw	r30, r24
    15b6:	e0 5b       	subi	r30, 0xB0	; 176
    15b8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ba:	ee 0f       	add	r30, r30
    15bc:	ff 1f       	adc	r31, r31
    15be:	47 e6       	ldi	r20, 0x67	; 103
    15c0:	5a e0       	ldi	r21, 0x0A	; 10
    15c2:	4c 0f       	add	r20, r28
    15c4:	5d 1f       	adc	r21, r29
    15c6:	e4 0f       	add	r30, r20
    15c8:	f5 1f       	adc	r31, r21
    15ca:	11 82       	std	Z+1, r1	; 0x01
    15cc:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    15ce:	fc 01       	movw	r30, r24
    15d0:	ec 59       	subi	r30, 0x9C	; 156
    15d2:	ff 4f       	sbci	r31, 0xFF	; 255
    15d4:	ee 0f       	add	r30, r30
    15d6:	ff 1f       	adc	r31, r31
    15d8:	e4 0f       	add	r30, r20
    15da:	f5 1f       	adc	r31, r21
    15dc:	f1 82       	std	Z+1, r15	; 0x01
    15de:	e0 82       	st	Z, r14
	explosions.index++;
    15e0:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    15e2:	c9 5a       	subi	r28, 0xA9	; 169
    15e4:	d4 4f       	sbci	r29, 0xF4	; 244
    15e6:	28 83       	st	Y, r18
    15e8:	c7 55       	subi	r28, 0x57	; 87
    15ea:	db 40       	sbci	r29, 0x0B	; 11
    15ec:	82 ef       	ldi	r24, 0xF2	; 242
    15ee:	fa 01       	movw	r30, r20
    15f0:	de 01       	movw	r26, r28
    15f2:	ab 58       	subi	r26, 0x8B	; 139
    15f4:	b6 4f       	sbci	r27, 0xF6	; 246
    15f6:	01 90       	ld	r0, Z+
    15f8:	0d 92       	st	X+, r0
    15fa:	8a 95       	dec	r24
    15fc:	e1 f7       	brne	.-8      	; 0x15f6 <main+0xc46>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    15fe:	cb 59       	subi	r28, 0x9B	; 155
    1600:	d5 4f       	sbci	r29, 0xF5	; 245
    1602:	28 83       	st	Y, r18
    1604:	c5 56       	subi	r28, 0x65	; 101
    1606:	da 40       	sbci	r29, 0x0A	; 10
    1608:	82 ef       	ldi	r24, 0xF2	; 242
    160a:	fe 01       	movw	r30, r28
    160c:	eb 58       	subi	r30, 0x8B	; 139
    160e:	f6 4f       	sbci	r31, 0xF6	; 246
    1610:	ab e3       	ldi	r26, 0x3B	; 59
    1612:	b1 e0       	ldi	r27, 0x01	; 1
    1614:	01 90       	ld	r0, Z+
    1616:	0d 92       	st	X+, r0
    1618:	8a 95       	dec	r24
    161a:	e1 f7       	brne	.-8      	; 0x1614 <main+0xc64>
	
	matrix = clearSingleMatrix(matrix);
    161c:	20 91 33 01 	lds	r18, 0x0133
    1620:	30 91 34 01 	lds	r19, 0x0134
    1624:	40 91 35 01 	lds	r20, 0x0135
    1628:	50 91 36 01 	lds	r21, 0x0136
    162c:	60 91 37 01 	lds	r22, 0x0137
    1630:	70 91 38 01 	lds	r23, 0x0138
    1634:	80 91 39 01 	lds	r24, 0x0139
    1638:	90 91 3a 01 	lds	r25, 0x013A
    163c:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    1640:	f8 01       	movw	r30, r16
    1642:	20 83       	st	Z, r18
    1644:	31 83       	std	Z+1, r19	; 0x01
    1646:	53 83       	std	Z+3, r21	; 0x03
    1648:	64 83       	std	Z+4, r22	; 0x04
    164a:	86 83       	std	Z+6, r24	; 0x06
    164c:	97 83       	std	Z+7, r25	; 0x07
    164e:	47 7f       	andi	r20, 0xF7	; 247
	matrix.m[2] = SetBit(matrix.m[2], 3, 0);
    1650:	42 83       	std	Z+2, r20	; 0x02
    1652:	77 7f       	andi	r23, 0xF7	; 247
	matrix.m[5] = SetBit(matrix.m[5], 3, 0);
    1654:	75 83       	std	Z+5, r23	; 0x05
    1656:	82 ef       	ldi	r24, 0xF2	; 242
    1658:	eb e3       	ldi	r30, 0x3B	; 59
    165a:	f1 e0       	ldi	r31, 0x01	; 1
    165c:	de 01       	movw	r26, r28
    165e:	ad 57       	subi	r26, 0x7D	; 125
    1660:	b7 4f       	sbci	r27, 0xF7	; 247
    1662:	01 90       	ld	r0, Z+
    1664:	0d 92       	st	X+, r0
    1666:	8a 95       	dec	r24
    1668:	e1 f7       	brne	.-8      	; 0x1662 <main+0xcb2>
    166a:	f6 01       	movw	r30, r12
    166c:	20 81       	ld	r18, Z
    166e:	88 e0       	ldi	r24, 0x08	; 8
    1670:	f8 01       	movw	r30, r16
    1672:	de 01       	movw	r26, r28
    1674:	ab 5b       	subi	r26, 0xBB	; 187
    1676:	bf 4d       	sbci	r27, 0xDF	; 223
    1678:	01 90       	ld	r0, Z+
    167a:	0d 92       	st	X+, r0
    167c:	8a 95       	dec	r24
    167e:	e1 f7       	brne	.-8      	; 0x1678 <main+0xcc8>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    1680:	82 2f       	mov	r24, r18
    1682:	90 e0       	ldi	r25, 0x00	; 0
    1684:	a3 e8       	ldi	r26, 0x83	; 131
    1686:	b8 e0       	ldi	r27, 0x08	; 8
    1688:	ac 0f       	add	r26, r28
    168a:	bd 1f       	adc	r27, r29
    168c:	f8 e0       	ldi	r31, 0x08	; 8
    168e:	2f 9f       	mul	r18, r31
    1690:	a0 0d       	add	r26, r0
    1692:	b1 1d       	adc	r27, r1
    1694:	11 24       	eor	r1, r1
    1696:	38 e0       	ldi	r19, 0x08	; 8
    1698:	fe 01       	movw	r30, r28
    169a:	eb 5b       	subi	r30, 0xBB	; 187
    169c:	ff 4d       	sbci	r31, 0xDF	; 223
    169e:	01 90       	ld	r0, Z+
    16a0:	0d 92       	st	X+, r0
    16a2:	3a 95       	dec	r19
    16a4:	e1 f7       	brne	.-8      	; 0x169e <main+0xcee>
	explosions.timeBetween[explosions.index] = a;
    16a6:	fc 01       	movw	r30, r24
    16a8:	e0 5b       	subi	r30, 0xB0	; 176
    16aa:	ff 4f       	sbci	r31, 0xFF	; 255
    16ac:	ee 0f       	add	r30, r30
    16ae:	ff 1f       	adc	r31, r31
    16b0:	43 e8       	ldi	r20, 0x83	; 131
    16b2:	58 e0       	ldi	r21, 0x08	; 8
    16b4:	4c 0f       	add	r20, r28
    16b6:	5d 1f       	adc	r21, r29
    16b8:	e4 0f       	add	r30, r20
    16ba:	f5 1f       	adc	r31, r21
    16bc:	11 82       	std	Z+1, r1	; 0x01
    16be:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    16c0:	fc 01       	movw	r30, r24
    16c2:	ec 59       	subi	r30, 0x9C	; 156
    16c4:	ff 4f       	sbci	r31, 0xFF	; 255
    16c6:	ee 0f       	add	r30, r30
    16c8:	ff 1f       	adc	r31, r31
    16ca:	e4 0f       	add	r30, r20
    16cc:	f5 1f       	adc	r31, r21
    16ce:	f1 82       	std	Z+1, r15	; 0x01
    16d0:	e0 82       	st	Z, r14
	explosions.index++;
    16d2:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    16d4:	cd 58       	subi	r28, 0x8D	; 141
    16d6:	d6 4f       	sbci	r29, 0xF6	; 246
    16d8:	28 83       	st	Y, r18
    16da:	c3 57       	subi	r28, 0x73	; 115
    16dc:	d9 40       	sbci	r29, 0x09	; 9
    16de:	82 ef       	ldi	r24, 0xF2	; 242
    16e0:	fa 01       	movw	r30, r20
    16e2:	de 01       	movw	r26, r28
    16e4:	af 56       	subi	r26, 0x6F	; 111
    16e6:	b8 4f       	sbci	r27, 0xF8	; 248
    16e8:	01 90       	ld	r0, Z+
    16ea:	0d 92       	st	X+, r0
    16ec:	8a 95       	dec	r24
    16ee:	e1 f7       	brne	.-8      	; 0x16e8 <main+0xd38>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    16f0:	cf 57       	subi	r28, 0x7F	; 127
    16f2:	d7 4f       	sbci	r29, 0xF7	; 247
    16f4:	28 83       	st	Y, r18
    16f6:	c1 58       	subi	r28, 0x81	; 129
    16f8:	d8 40       	sbci	r29, 0x08	; 8
    16fa:	82 ef       	ldi	r24, 0xF2	; 242
    16fc:	fe 01       	movw	r30, r28
    16fe:	ef 56       	subi	r30, 0x6F	; 111
    1700:	f8 4f       	sbci	r31, 0xF8	; 248
    1702:	ab e3       	ldi	r26, 0x3B	; 59
    1704:	b1 e0       	ldi	r27, 0x01	; 1
    1706:	01 90       	ld	r0, Z+
    1708:	0d 92       	st	X+, r0
    170a:	8a 95       	dec	r24
    170c:	e1 f7       	brne	.-8      	; 0x1706 <main+0xd56>
	
	matrix = clearSingleMatrix(matrix);
    170e:	20 91 33 01 	lds	r18, 0x0133
    1712:	30 91 34 01 	lds	r19, 0x0134
    1716:	40 91 35 01 	lds	r20, 0x0135
    171a:	50 91 36 01 	lds	r21, 0x0136
    171e:	60 91 37 01 	lds	r22, 0x0137
    1722:	70 91 38 01 	lds	r23, 0x0138
    1726:	80 91 39 01 	lds	r24, 0x0139
    172a:	90 91 3a 01 	lds	r25, 0x013A
    172e:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    1732:	f8 01       	movw	r30, r16
    1734:	20 83       	st	Z, r18
    1736:	31 83       	std	Z+1, r19	; 0x01
    1738:	53 83       	std	Z+3, r21	; 0x03
    173a:	64 83       	std	Z+4, r22	; 0x04
    173c:	86 83       	std	Z+6, r24	; 0x06
    173e:	97 83       	std	Z+7, r25	; 0x07
    1740:	4b 7f       	andi	r20, 0xFB	; 251
	matrix.m[2] = SetBit(matrix.m[2], 2, 0);
    1742:	42 83       	std	Z+2, r20	; 0x02
    1744:	7b 7f       	andi	r23, 0xFB	; 251
	matrix.m[5] = SetBit(matrix.m[5], 2, 0);
    1746:	75 83       	std	Z+5, r23	; 0x05
    1748:	82 ef       	ldi	r24, 0xF2	; 242
    174a:	eb e3       	ldi	r30, 0x3B	; 59
    174c:	f1 e0       	ldi	r31, 0x01	; 1
    174e:	de 01       	movw	r26, r28
    1750:	a1 56       	subi	r26, 0x61	; 97
    1752:	b9 4f       	sbci	r27, 0xF9	; 249
    1754:	01 90       	ld	r0, Z+
    1756:	0d 92       	st	X+, r0
    1758:	8a 95       	dec	r24
    175a:	e1 f7       	brne	.-8      	; 0x1754 <main+0xda4>
    175c:	f6 01       	movw	r30, r12
    175e:	20 81       	ld	r18, Z
    1760:	88 e0       	ldi	r24, 0x08	; 8
    1762:	f8 01       	movw	r30, r16
    1764:	de 01       	movw	r26, r28
    1766:	a3 5c       	subi	r26, 0xC3	; 195
    1768:	bf 4d       	sbci	r27, 0xDF	; 223
    176a:	01 90       	ld	r0, Z+
    176c:	0d 92       	st	X+, r0
    176e:	8a 95       	dec	r24
    1770:	e1 f7       	brne	.-8      	; 0x176a <main+0xdba>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    1772:	82 2f       	mov	r24, r18
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	af e9       	ldi	r26, 0x9F	; 159
    1778:	b6 e0       	ldi	r27, 0x06	; 6
    177a:	ac 0f       	add	r26, r28
    177c:	bd 1f       	adc	r27, r29
    177e:	f8 e0       	ldi	r31, 0x08	; 8
    1780:	2f 9f       	mul	r18, r31
    1782:	a0 0d       	add	r26, r0
    1784:	b1 1d       	adc	r27, r1
    1786:	11 24       	eor	r1, r1
    1788:	38 e0       	ldi	r19, 0x08	; 8
    178a:	fe 01       	movw	r30, r28
    178c:	e3 5c       	subi	r30, 0xC3	; 195
    178e:	ff 4d       	sbci	r31, 0xDF	; 223
    1790:	01 90       	ld	r0, Z+
    1792:	0d 92       	st	X+, r0
    1794:	3a 95       	dec	r19
    1796:	e1 f7       	brne	.-8      	; 0x1790 <main+0xde0>
	explosions.timeBetween[explosions.index] = a;
    1798:	fc 01       	movw	r30, r24
    179a:	e0 5b       	subi	r30, 0xB0	; 176
    179c:	ff 4f       	sbci	r31, 0xFF	; 255
    179e:	ee 0f       	add	r30, r30
    17a0:	ff 1f       	adc	r31, r31
    17a2:	4f e9       	ldi	r20, 0x9F	; 159
    17a4:	56 e0       	ldi	r21, 0x06	; 6
    17a6:	4c 0f       	add	r20, r28
    17a8:	5d 1f       	adc	r21, r29
    17aa:	e4 0f       	add	r30, r20
    17ac:	f5 1f       	adc	r31, r21
    17ae:	11 82       	std	Z+1, r1	; 0x01
    17b0:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    17b2:	fc 01       	movw	r30, r24
    17b4:	ec 59       	subi	r30, 0x9C	; 156
    17b6:	ff 4f       	sbci	r31, 0xFF	; 255
    17b8:	ee 0f       	add	r30, r30
    17ba:	ff 1f       	adc	r31, r31
    17bc:	e4 0f       	add	r30, r20
    17be:	f5 1f       	adc	r31, r21
    17c0:	f1 82       	std	Z+1, r15	; 0x01
    17c2:	e0 82       	st	Z, r14
	explosions.index++;
    17c4:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    17c6:	c1 57       	subi	r28, 0x71	; 113
    17c8:	d8 4f       	sbci	r29, 0xF8	; 248
    17ca:	28 83       	st	Y, r18
    17cc:	cf 58       	subi	r28, 0x8F	; 143
    17ce:	d7 40       	sbci	r29, 0x07	; 7
    17d0:	82 ef       	ldi	r24, 0xF2	; 242
    17d2:	fa 01       	movw	r30, r20
    17d4:	de 01       	movw	r26, r28
    17d6:	a3 55       	subi	r26, 0x53	; 83
    17d8:	ba 4f       	sbci	r27, 0xFA	; 250
    17da:	01 90       	ld	r0, Z+
    17dc:	0d 92       	st	X+, r0
    17de:	8a 95       	dec	r24
    17e0:	e1 f7       	brne	.-8      	; 0x17da <main+0xe2a>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    17e2:	c3 56       	subi	r28, 0x63	; 99
    17e4:	d9 4f       	sbci	r29, 0xF9	; 249
    17e6:	28 83       	st	Y, r18
    17e8:	cd 59       	subi	r28, 0x9D	; 157
    17ea:	d6 40       	sbci	r29, 0x06	; 6
    17ec:	82 ef       	ldi	r24, 0xF2	; 242
    17ee:	fe 01       	movw	r30, r28
    17f0:	e3 55       	subi	r30, 0x53	; 83
    17f2:	fa 4f       	sbci	r31, 0xFA	; 250
    17f4:	ab e3       	ldi	r26, 0x3B	; 59
    17f6:	b1 e0       	ldi	r27, 0x01	; 1
    17f8:	01 90       	ld	r0, Z+
    17fa:	0d 92       	st	X+, r0
    17fc:	8a 95       	dec	r24
    17fe:	e1 f7       	brne	.-8      	; 0x17f8 <main+0xe48>
	
	matrix = clearSingleMatrix(matrix);
    1800:	20 91 33 01 	lds	r18, 0x0133
    1804:	30 91 34 01 	lds	r19, 0x0134
    1808:	40 91 35 01 	lds	r20, 0x0135
    180c:	50 91 36 01 	lds	r21, 0x0136
    1810:	60 91 37 01 	lds	r22, 0x0137
    1814:	70 91 38 01 	lds	r23, 0x0138
    1818:	80 91 39 01 	lds	r24, 0x0139
    181c:	90 91 3a 01 	lds	r25, 0x013A
    1820:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    1824:	f8 01       	movw	r30, r16
    1826:	20 83       	st	Z, r18
    1828:	31 83       	std	Z+1, r19	; 0x01
    182a:	53 83       	std	Z+3, r21	; 0x03
    182c:	64 83       	std	Z+4, r22	; 0x04
    182e:	86 83       	std	Z+6, r24	; 0x06
    1830:	97 83       	std	Z+7, r25	; 0x07
    1832:	4d 7f       	andi	r20, 0xFD	; 253
	matrix.m[2] = SetBit(matrix.m[2], 1, 0);
    1834:	42 83       	std	Z+2, r20	; 0x02
    1836:	7d 7f       	andi	r23, 0xFD	; 253
	matrix.m[5] = SetBit(matrix.m[5], 1, 0);
    1838:	75 83       	std	Z+5, r23	; 0x05
    183a:	82 ef       	ldi	r24, 0xF2	; 242
    183c:	eb e3       	ldi	r30, 0x3B	; 59
    183e:	f1 e0       	ldi	r31, 0x01	; 1
    1840:	de 01       	movw	r26, r28
    1842:	a5 54       	subi	r26, 0x45	; 69
    1844:	bb 4f       	sbci	r27, 0xFB	; 251
    1846:	01 90       	ld	r0, Z+
    1848:	0d 92       	st	X+, r0
    184a:	8a 95       	dec	r24
    184c:	e1 f7       	brne	.-8      	; 0x1846 <main+0xe96>
    184e:	f6 01       	movw	r30, r12
    1850:	20 81       	ld	r18, Z
    1852:	88 e0       	ldi	r24, 0x08	; 8
    1854:	f8 01       	movw	r30, r16
    1856:	de 01       	movw	r26, r28
    1858:	ab 5c       	subi	r26, 0xCB	; 203
    185a:	bf 4d       	sbci	r27, 0xDF	; 223
    185c:	01 90       	ld	r0, Z+
    185e:	0d 92       	st	X+, r0
    1860:	8a 95       	dec	r24
    1862:	e1 f7       	brne	.-8      	; 0x185c <main+0xeac>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    1864:	82 2f       	mov	r24, r18
    1866:	90 e0       	ldi	r25, 0x00	; 0
    1868:	ab eb       	ldi	r26, 0xBB	; 187
    186a:	b4 e0       	ldi	r27, 0x04	; 4
    186c:	ac 0f       	add	r26, r28
    186e:	bd 1f       	adc	r27, r29
    1870:	f8 e0       	ldi	r31, 0x08	; 8
    1872:	2f 9f       	mul	r18, r31
    1874:	a0 0d       	add	r26, r0
    1876:	b1 1d       	adc	r27, r1
    1878:	11 24       	eor	r1, r1
    187a:	38 e0       	ldi	r19, 0x08	; 8
    187c:	fe 01       	movw	r30, r28
    187e:	eb 5c       	subi	r30, 0xCB	; 203
    1880:	ff 4d       	sbci	r31, 0xDF	; 223
    1882:	01 90       	ld	r0, Z+
    1884:	0d 92       	st	X+, r0
    1886:	3a 95       	dec	r19
    1888:	e1 f7       	brne	.-8      	; 0x1882 <main+0xed2>
	explosions.timeBetween[explosions.index] = a;
    188a:	fc 01       	movw	r30, r24
    188c:	e0 5b       	subi	r30, 0xB0	; 176
    188e:	ff 4f       	sbci	r31, 0xFF	; 255
    1890:	ee 0f       	add	r30, r30
    1892:	ff 1f       	adc	r31, r31
    1894:	4b eb       	ldi	r20, 0xBB	; 187
    1896:	54 e0       	ldi	r21, 0x04	; 4
    1898:	4c 0f       	add	r20, r28
    189a:	5d 1f       	adc	r21, r29
    189c:	e4 0f       	add	r30, r20
    189e:	f5 1f       	adc	r31, r21
    18a0:	11 82       	std	Z+1, r1	; 0x01
    18a2:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    18a4:	fc 01       	movw	r30, r24
    18a6:	ec 59       	subi	r30, 0x9C	; 156
    18a8:	ff 4f       	sbci	r31, 0xFF	; 255
    18aa:	ee 0f       	add	r30, r30
    18ac:	ff 1f       	adc	r31, r31
    18ae:	e4 0f       	add	r30, r20
    18b0:	f5 1f       	adc	r31, r21
    18b2:	f1 82       	std	Z+1, r15	; 0x01
    18b4:	e0 82       	st	Z, r14
	explosions.index++;
    18b6:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    18b8:	c5 55       	subi	r28, 0x55	; 85
    18ba:	da 4f       	sbci	r29, 0xFA	; 250
    18bc:	28 83       	st	Y, r18
    18be:	cb 5a       	subi	r28, 0xAB	; 171
    18c0:	d5 40       	sbci	r29, 0x05	; 5
    18c2:	82 ef       	ldi	r24, 0xF2	; 242
    18c4:	fa 01       	movw	r30, r20
    18c6:	de 01       	movw	r26, r28
    18c8:	a7 53       	subi	r26, 0x37	; 55
    18ca:	bc 4f       	sbci	r27, 0xFC	; 252
    18cc:	01 90       	ld	r0, Z+
    18ce:	0d 92       	st	X+, r0
    18d0:	8a 95       	dec	r24
    18d2:	e1 f7       	brne	.-8      	; 0x18cc <main+0xf1c>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    18d4:	c7 54       	subi	r28, 0x47	; 71
    18d6:	db 4f       	sbci	r29, 0xFB	; 251
    18d8:	28 83       	st	Y, r18
    18da:	c9 5b       	subi	r28, 0xB9	; 185
    18dc:	d4 40       	sbci	r29, 0x04	; 4
    18de:	82 ef       	ldi	r24, 0xF2	; 242
    18e0:	fe 01       	movw	r30, r28
    18e2:	e7 53       	subi	r30, 0x37	; 55
    18e4:	fc 4f       	sbci	r31, 0xFC	; 252
    18e6:	ab e3       	ldi	r26, 0x3B	; 59
    18e8:	b1 e0       	ldi	r27, 0x01	; 1
    18ea:	01 90       	ld	r0, Z+
    18ec:	0d 92       	st	X+, r0
    18ee:	8a 95       	dec	r24
    18f0:	e1 f7       	brne	.-8      	; 0x18ea <main+0xf3a>
	
	matrix = clearSingleMatrix(matrix);
    18f2:	20 91 33 01 	lds	r18, 0x0133
    18f6:	30 91 34 01 	lds	r19, 0x0134
    18fa:	40 91 35 01 	lds	r20, 0x0135
    18fe:	50 91 36 01 	lds	r21, 0x0136
    1902:	60 91 37 01 	lds	r22, 0x0137
    1906:	70 91 38 01 	lds	r23, 0x0138
    190a:	80 91 39 01 	lds	r24, 0x0139
    190e:	90 91 3a 01 	lds	r25, 0x013A
    1912:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    1916:	f8 01       	movw	r30, r16
    1918:	20 83       	st	Z, r18
    191a:	31 83       	std	Z+1, r19	; 0x01
    191c:	53 83       	std	Z+3, r21	; 0x03
    191e:	64 83       	std	Z+4, r22	; 0x04
    1920:	86 83       	std	Z+6, r24	; 0x06
    1922:	97 83       	std	Z+7, r25	; 0x07
    1924:	4e 7f       	andi	r20, 0xFE	; 254
	matrix.m[2] = SetBit(matrix.m[2], 0, 0);
    1926:	42 83       	std	Z+2, r20	; 0x02
    1928:	7e 7f       	andi	r23, 0xFE	; 254
	matrix.m[5] = SetBit(matrix.m[5], 0, 0);
    192a:	75 83       	std	Z+5, r23	; 0x05
    192c:	82 ef       	ldi	r24, 0xF2	; 242
    192e:	eb e3       	ldi	r30, 0x3B	; 59
    1930:	f1 e0       	ldi	r31, 0x01	; 1
    1932:	de 01       	movw	r26, r28
    1934:	a9 52       	subi	r26, 0x29	; 41
    1936:	bd 4f       	sbci	r27, 0xFD	; 253
    1938:	01 90       	ld	r0, Z+
    193a:	0d 92       	st	X+, r0
    193c:	8a 95       	dec	r24
    193e:	e1 f7       	brne	.-8      	; 0x1938 <main+0xf88>
    1940:	f6 01       	movw	r30, r12
    1942:	20 81       	ld	r18, Z
    1944:	88 e0       	ldi	r24, 0x08	; 8
    1946:	f8 01       	movw	r30, r16
    1948:	de 01       	movw	r26, r28
    194a:	a3 5d       	subi	r26, 0xD3	; 211
    194c:	bf 4d       	sbci	r27, 0xDF	; 223
    194e:	01 90       	ld	r0, Z+
    1950:	0d 92       	st	X+, r0
    1952:	8a 95       	dec	r24
    1954:	e1 f7       	brne	.-8      	; 0x194e <main+0xf9e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    1956:	82 2f       	mov	r24, r18
    1958:	90 e0       	ldi	r25, 0x00	; 0
    195a:	a7 ed       	ldi	r26, 0xD7	; 215
    195c:	b2 e0       	ldi	r27, 0x02	; 2
    195e:	ac 0f       	add	r26, r28
    1960:	bd 1f       	adc	r27, r29
    1962:	f8 e0       	ldi	r31, 0x08	; 8
    1964:	2f 9f       	mul	r18, r31
    1966:	a0 0d       	add	r26, r0
    1968:	b1 1d       	adc	r27, r1
    196a:	11 24       	eor	r1, r1
    196c:	38 e0       	ldi	r19, 0x08	; 8
    196e:	fe 01       	movw	r30, r28
    1970:	e3 5d       	subi	r30, 0xD3	; 211
    1972:	ff 4d       	sbci	r31, 0xDF	; 223
    1974:	01 90       	ld	r0, Z+
    1976:	0d 92       	st	X+, r0
    1978:	3a 95       	dec	r19
    197a:	e1 f7       	brne	.-8      	; 0x1974 <main+0xfc4>
	explosions.timeBetween[explosions.index] = a;
    197c:	fc 01       	movw	r30, r24
    197e:	e0 5b       	subi	r30, 0xB0	; 176
    1980:	ff 4f       	sbci	r31, 0xFF	; 255
    1982:	ee 0f       	add	r30, r30
    1984:	ff 1f       	adc	r31, r31
    1986:	47 ed       	ldi	r20, 0xD7	; 215
    1988:	52 e0       	ldi	r21, 0x02	; 2
    198a:	4c 0f       	add	r20, r28
    198c:	5d 1f       	adc	r21, r29
    198e:	e4 0f       	add	r30, r20
    1990:	f5 1f       	adc	r31, r21
    1992:	11 82       	std	Z+1, r1	; 0x01
    1994:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1996:	fc 01       	movw	r30, r24
    1998:	ec 59       	subi	r30, 0x9C	; 156
    199a:	ff 4f       	sbci	r31, 0xFF	; 255
    199c:	ee 0f       	add	r30, r30
    199e:	ff 1f       	adc	r31, r31
    19a0:	e4 0f       	add	r30, r20
    19a2:	f5 1f       	adc	r31, r21
    19a4:	f1 82       	std	Z+1, r15	; 0x01
    19a6:	e0 82       	st	Z, r14
	explosions.index++;
    19a8:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    19aa:	c9 53       	subi	r28, 0x39	; 57
    19ac:	dc 4f       	sbci	r29, 0xFC	; 252
    19ae:	28 83       	st	Y, r18
    19b0:	c7 5c       	subi	r28, 0xC7	; 199
    19b2:	d3 40       	sbci	r29, 0x03	; 3
    19b4:	82 ef       	ldi	r24, 0xF2	; 242
    19b6:	fa 01       	movw	r30, r20
    19b8:	de 01       	movw	r26, r28
    19ba:	ab 51       	subi	r26, 0x1B	; 27
    19bc:	be 4f       	sbci	r27, 0xFE	; 254
    19be:	01 90       	ld	r0, Z+
    19c0:	0d 92       	st	X+, r0
    19c2:	8a 95       	dec	r24
    19c4:	e1 f7       	brne	.-8      	; 0x19be <main+0x100e>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    19c6:	cb 52       	subi	r28, 0x2B	; 43
    19c8:	dd 4f       	sbci	r29, 0xFD	; 253
    19ca:	28 83       	st	Y, r18
    19cc:	c5 5d       	subi	r28, 0xD5	; 213
    19ce:	d2 40       	sbci	r29, 0x02	; 2
    19d0:	82 ef       	ldi	r24, 0xF2	; 242
    19d2:	fe 01       	movw	r30, r28
    19d4:	eb 51       	subi	r30, 0x1B	; 27
    19d6:	fe 4f       	sbci	r31, 0xFE	; 254
    19d8:	ab e3       	ldi	r26, 0x3B	; 59
    19da:	b1 e0       	ldi	r27, 0x01	; 1
    19dc:	01 90       	ld	r0, Z+
    19de:	0d 92       	st	X+, r0
    19e0:	8a 95       	dec	r24
    19e2:	e1 f7       	brne	.-8      	; 0x19dc <main+0x102c>
	
	matrix = clearSingleMatrix(matrix);
    19e4:	20 91 33 01 	lds	r18, 0x0133
    19e8:	30 91 34 01 	lds	r19, 0x0134
    19ec:	40 91 35 01 	lds	r20, 0x0135
    19f0:	50 91 36 01 	lds	r21, 0x0136
    19f4:	60 91 37 01 	lds	r22, 0x0137
    19f8:	70 91 38 01 	lds	r23, 0x0138
    19fc:	80 91 39 01 	lds	r24, 0x0139
    1a00:	90 91 3a 01 	lds	r25, 0x013A
    1a04:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    1a08:	f8 01       	movw	r30, r16
    1a0a:	20 83       	st	Z, r18
    1a0c:	31 83       	std	Z+1, r19	; 0x01
    1a0e:	42 83       	std	Z+2, r20	; 0x02
    1a10:	75 83       	std	Z+5, r23	; 0x05
    1a12:	86 83       	std	Z+6, r24	; 0x06
    1a14:	97 83       	std	Z+7, r25	; 0x07
	matrix.m[3] = 0x00;
    1a16:	13 82       	std	Z+3, r1	; 0x03
	matrix.m[4] = 0x00;
    1a18:	14 82       	std	Z+4, r1	; 0x04
    1a1a:	82 ef       	ldi	r24, 0xF2	; 242
    1a1c:	eb e3       	ldi	r30, 0x3B	; 59
    1a1e:	f1 e0       	ldi	r31, 0x01	; 1
    1a20:	de 01       	movw	r26, r28
    1a22:	ad 50       	subi	r26, 0x0D	; 13
    1a24:	bf 4f       	sbci	r27, 0xFF	; 255
    1a26:	01 90       	ld	r0, Z+
    1a28:	0d 92       	st	X+, r0
    1a2a:	8a 95       	dec	r24
    1a2c:	e1 f7       	brne	.-8      	; 0x1a26 <main+0x1076>
    1a2e:	f6 01       	movw	r30, r12
    1a30:	20 81       	ld	r18, Z
    1a32:	88 e0       	ldi	r24, 0x08	; 8
    1a34:	f8 01       	movw	r30, r16
    1a36:	de 01       	movw	r26, r28
    1a38:	ab 5d       	subi	r26, 0xDB	; 219
    1a3a:	bf 4d       	sbci	r27, 0xDF	; 223
    1a3c:	01 90       	ld	r0, Z+
    1a3e:	0d 92       	st	X+, r0
    1a40:	8a 95       	dec	r24
    1a42:	e1 f7       	brne	.-8      	; 0x1a3c <main+0x108c>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned short a, unsigned short b) {
	explosions.matricies[explosions.index] = matrix;
    1a44:	82 2f       	mov	r24, r18
    1a46:	90 e0       	ldi	r25, 0x00	; 0
    1a48:	a3 ef       	ldi	r26, 0xF3	; 243
    1a4a:	b0 e0       	ldi	r27, 0x00	; 0
    1a4c:	ac 0f       	add	r26, r28
    1a4e:	bd 1f       	adc	r27, r29
    1a50:	f8 e0       	ldi	r31, 0x08	; 8
    1a52:	2f 9f       	mul	r18, r31
    1a54:	a0 0d       	add	r26, r0
    1a56:	b1 1d       	adc	r27, r1
    1a58:	11 24       	eor	r1, r1
    1a5a:	38 e0       	ldi	r19, 0x08	; 8
    1a5c:	fe 01       	movw	r30, r28
    1a5e:	eb 5d       	subi	r30, 0xDB	; 219
    1a60:	ff 4d       	sbci	r31, 0xDF	; 223
    1a62:	01 90       	ld	r0, Z+
    1a64:	0d 92       	st	X+, r0
    1a66:	3a 95       	dec	r19
    1a68:	e1 f7       	brne	.-8      	; 0x1a62 <main+0x10b2>
	explosions.timeBetween[explosions.index] = a;
    1a6a:	fc 01       	movw	r30, r24
    1a6c:	e0 5b       	subi	r30, 0xB0	; 176
    1a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a70:	ee 0f       	add	r30, r30
    1a72:	ff 1f       	adc	r31, r31
    1a74:	43 ef       	ldi	r20, 0xF3	; 243
    1a76:	50 e0       	ldi	r21, 0x00	; 0
    1a78:	4c 0f       	add	r20, r28
    1a7a:	5d 1f       	adc	r21, r29
    1a7c:	e4 0f       	add	r30, r20
    1a7e:	f5 1f       	adc	r31, r21
    1a80:	11 82       	std	Z+1, r1	; 0x01
    1a82:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1a84:	fc 01       	movw	r30, r24
    1a86:	ec 59       	subi	r30, 0x9C	; 156
    1a88:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8a:	ee 0f       	add	r30, r30
    1a8c:	ff 1f       	adc	r31, r31
    1a8e:	e4 0f       	add	r30, r20
    1a90:	f5 1f       	adc	r31, r21
    1a92:	f1 82       	std	Z+1, r15	; 0x01
    1a94:	e0 82       	st	Z, r14
	explosions.index++;
    1a96:	2f 5f       	subi	r18, 0xFF	; 255
	
	return explosions;
    1a98:	cd 51       	subi	r28, 0x1D	; 29
    1a9a:	de 4f       	sbci	r29, 0xFE	; 254
    1a9c:	28 83       	st	Y, r18
    1a9e:	c3 5e       	subi	r28, 0xE3	; 227
    1aa0:	d1 40       	sbci	r29, 0x01	; 1
    1aa2:	82 ef       	ldi	r24, 0xF2	; 242
    1aa4:	fa 01       	movw	r30, r20
    1aa6:	de 01       	movw	r26, r28
    1aa8:	11 96       	adiw	r26, 0x01	; 1
    1aaa:	01 90       	ld	r0, Z+
    1aac:	0d 92       	st	X+, r0
    1aae:	8a 95       	dec	r24
    1ab0:	e1 f7       	brne	.-8      	; 0x1aaa <main+0x10fa>
	explosions = pushExplosion(explosions, matrix, 0, 20);
    1ab2:	cf 50       	subi	r28, 0x0F	; 15
    1ab4:	df 4f       	sbci	r29, 0xFF	; 255
    1ab6:	28 83       	st	Y, r18
    1ab8:	c1 5f       	subi	r28, 0xF1	; 241
    1aba:	d0 40       	sbci	r29, 0x00	; 0
    1abc:	82 ef       	ldi	r24, 0xF2	; 242
    1abe:	fe 01       	movw	r30, r28
    1ac0:	31 96       	adiw	r30, 0x01	; 1
    1ac2:	ab e3       	ldi	r26, 0x3B	; 59
    1ac4:	b1 e0       	ldi	r27, 0x01	; 1
    1ac6:	01 90       	ld	r0, Z+
    1ac8:	0d 92       	st	X+, r0
    1aca:	8a 95       	dec	r24
    1acc:	e1 f7       	brne	.-8      	; 0x1ac6 <main+0x1116>
	
	userMatrix = initSingleUserMatrix(userMatrix);
    1ace:	e0 90 2d 02 	lds	r14, 0x022D
    1ad2:	f0 90 2e 02 	lds	r15, 0x022E
    1ad6:	00 91 2f 02 	lds	r16, 0x022F
    1ada:	10 91 30 02 	lds	r17, 0x0230
    1ade:	20 91 31 02 	lds	r18, 0x0231
    1ae2:	30 91 32 02 	lds	r19, 0x0232
    1ae6:	40 91 33 02 	lds	r20, 0x0233
    1aea:	50 91 34 02 	lds	r21, 0x0234
    1aee:	60 91 35 02 	lds	r22, 0x0235
    1af2:	70 91 36 02 	lds	r23, 0x0236
    1af6:	ce 01       	movw	r24, r28
    1af8:	83 55       	subi	r24, 0x53	; 83
    1afa:	9f 4d       	sbci	r25, 0xDF	; 223
    1afc:	0e 94 ba 01 	call	0x374	; 0x374 <initSingleUserMatrix>
    1b00:	8a e0       	ldi	r24, 0x0A	; 10
    1b02:	fe 01       	movw	r30, r28
    1b04:	e3 55       	subi	r30, 0x53	; 83
    1b06:	ff 4d       	sbci	r31, 0xDF	; 223
    1b08:	ad e2       	ldi	r26, 0x2D	; 45
    1b0a:	b2 e0       	ldi	r27, 0x02	; 2
    1b0c:	01 90       	ld	r0, Z+
    1b0e:	0d 92       	st	X+, r0
    1b10:	8a 95       	dec	r24
    1b12:	e1 f7       	brne	.-8      	; 0x1b0c <main+0x115c>
	
	while (1) {
		explosions = ExpTick(explosions);
    1b14:	12 ef       	ldi	r17, 0xF2	; 242
    1b16:	8d b7       	in	r24, 0x3d	; 61
    1b18:	9e b7       	in	r25, 0x3e	; 62
    1b1a:	82 5f       	subi	r24, 0xF2	; 242
    1b1c:	91 09       	sbc	r25, r1
    1b1e:	0f b6       	in	r0, 0x3f	; 63
    1b20:	f8 94       	cli
    1b22:	9e bf       	out	0x3e, r25	; 62
    1b24:	0f be       	out	0x3f, r0	; 63
    1b26:	8d bf       	out	0x3d, r24	; 61
    1b28:	ad b7       	in	r26, 0x3d	; 61
    1b2a:	be b7       	in	r27, 0x3e	; 62
    1b2c:	11 96       	adiw	r26, 0x01	; 1
    1b2e:	eb e3       	ldi	r30, 0x3B	; 59
    1b30:	f1 e0       	ldi	r31, 0x01	; 1
    1b32:	81 2f       	mov	r24, r17
    1b34:	01 90       	ld	r0, Z+
    1b36:	0d 92       	st	X+, r0
    1b38:	8a 95       	dec	r24
    1b3a:	e1 f7       	brne	.-8      	; 0x1b34 <main+0x1184>
    1b3c:	ce 01       	movw	r24, r28
    1b3e:	83 55       	subi	r24, 0x53	; 83
    1b40:	9f 4d       	sbci	r25, 0xDF	; 223
    1b42:	0e 94 24 04 	call	0x848	; 0x848 <ExpTick>
    1b46:	fe 01       	movw	r30, r28
    1b48:	e3 55       	subi	r30, 0x53	; 83
    1b4a:	ff 4d       	sbci	r31, 0xDF	; 223
    1b4c:	ab e3       	ldi	r26, 0x3B	; 59
    1b4e:	b1 e0       	ldi	r27, 0x01	; 1
    1b50:	81 2f       	mov	r24, r17
    1b52:	01 90       	ld	r0, Z+
    1b54:	0d 92       	st	X+, r0
    1b56:	8a 95       	dec	r24
    1b58:	e1 f7       	brne	.-8      	; 0x1b52 <main+0x11a2>
		DeathTick();
    1b5a:	0f b6       	in	r0, 0x3f	; 63
    1b5c:	f8 94       	cli
    1b5e:	de bf       	out	0x3e, r29	; 62
    1b60:	0f be       	out	0x3f, r0	; 63
    1b62:	cd bf       	out	0x3d, r28	; 61
    1b64:	0e 94 ca 03 	call	0x794	; 0x794 <DeathTick>
		d3_setMatrixColor(userMatrix.m, GREEN);
    1b68:	62 e0       	ldi	r22, 0x02	; 2
    1b6a:	8d e2       	ldi	r24, 0x2D	; 45
    1b6c:	92 e0       	ldi	r25, 0x02	; 2
    1b6e:	0e 94 6d 02 	call	0x4da	; 0x4da <d3_setMatrixColor>
	}
    1b72:	d1 cf       	rjmp	.-94     	; 0x1b16 <main+0x1166>

00001b74 <_exit>:
    1b74:	f8 94       	cli

00001b76 <__stop_program>:
    1b76:	ff cf       	rjmp	.-2      	; 0x1b76 <__stop_program>
