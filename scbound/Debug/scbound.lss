
scbound.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001af2  00001b86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001af2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001a7  00800106  00800106  00001b8c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001b8c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bbc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00001bfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001722  00000000  00000000  00001cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000042c  00000000  00000000  00003416  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fe5  00000000  00000000  00003842  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000364  00000000  00000000  00004828  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000046d  00000000  00000000  00004b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ee8  00000000  00000000  00004ff9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  00005ee1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	61 c0       	rjmp	.+194    	; 0xc8 <__bad_interrupt>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	59 c0       	rjmp	.+178    	; 0xc8 <__bad_interrupt>
      16:	00 00       	nop
      18:	57 c0       	rjmp	.+174    	; 0xc8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	55 c0       	rjmp	.+170    	; 0xc8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	53 c0       	rjmp	.+166    	; 0xc8 <__bad_interrupt>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	1b c1       	rjmp	.+566    	; 0x26c <__vector_13>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	43 c0       	rjmp	.+134    	; 0xc8 <__bad_interrupt>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	2f c0       	rjmp	.+94     	; 0xc8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 ef       	ldi	r30, 0xF2	; 242
      a0:	fa e1       	ldi	r31, 0x1A	; 26
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 30       	cpi	r26, 0x06	; 6
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	a6 e0       	ldi	r26, 0x06	; 6
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	ad 3a       	cpi	r26, 0xAD	; 173
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	90 d4       	rcall	.+2336   	; 0x9e4 <main>
      c4:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <ETIMERTick>:
	}
	
	// Display explosion
	d3_setMatrixColor(explosions.matricies[explosions.displayIndex].m, RED);
	explosions.displayIndex++;
}
      ca:	00 97       	sbiw	r24, 0x00	; 0
      cc:	21 f0       	breq	.+8      	; 0xd6 <ETIMERTick+0xc>
      ce:	81 30       	cpi	r24, 0x01	; 1
      d0:	91 05       	cpc	r25, r1
      d2:	49 f0       	breq	.+18     	; 0xe6 <ETIMERTick+0x1c>
      d4:	05 c0       	rjmp	.+10     	; 0xe0 <ETIMERTick+0x16>
      d6:	10 92 07 01 	sts	0x0107, r1
      da:	10 92 06 01 	sts	0x0106, r1
      de:	03 c0       	rjmp	.+6      	; 0xe6 <ETIMERTick+0x1c>
      e0:	81 30       	cpi	r24, 0x01	; 1
      e2:	91 05       	cpc	r25, r1
      e4:	c9 f5       	brne	.+114    	; 0x158 <ETIMERTick+0x8e>
      e6:	80 91 06 01 	lds	r24, 0x0106
      ea:	90 91 07 01 	lds	r25, 0x0107
      ee:	01 96       	adiw	r24, 0x01	; 1
      f0:	90 93 07 01 	sts	0x0107, r25
      f4:	80 93 06 01 	sts	0x0106, r24
      f8:	40 91 0b 01 	lds	r20, 0x010B
      fc:	50 91 0c 01 	lds	r21, 0x010C
     100:	60 91 0d 01 	lds	r22, 0x010D
     104:	70 91 0e 01 	lds	r23, 0x010E
     108:	4f 5f       	subi	r20, 0xFF	; 255
     10a:	5f 4f       	sbci	r21, 0xFF	; 255
     10c:	6f 4f       	sbci	r22, 0xFF	; 255
     10e:	7f 4f       	sbci	r23, 0xFF	; 255
     110:	40 93 0b 01 	sts	0x010B, r20
     114:	50 93 0c 01 	sts	0x010C, r21
     118:	60 93 0d 01 	sts	0x010D, r22
     11c:	70 93 0e 01 	sts	0x010E, r23
     120:	20 91 00 01 	lds	r18, 0x0100
     124:	30 91 01 01 	lds	r19, 0x0101
     128:	28 17       	cp	r18, r24
     12a:	39 07       	cpc	r19, r25
     12c:	98 f4       	brcc	.+38     	; 0x154 <ETIMERTick+0x8a>
     12e:	80 91 0a 01 	lds	r24, 0x010A
     132:	81 11       	cpse	r24, r1
     134:	04 c0       	rjmp	.+8      	; 0x13e <ETIMERTick+0x74>
     136:	81 e0       	ldi	r24, 0x01	; 1
     138:	80 93 0a 01 	sts	0x010A, r24
     13c:	04 c0       	rjmp	.+8      	; 0x146 <ETIMERTick+0x7c>
     13e:	81 30       	cpi	r24, 0x01	; 1
     140:	11 f4       	brne	.+4      	; 0x146 <ETIMERTick+0x7c>
     142:	10 92 0a 01 	sts	0x010A, r1
     146:	10 92 07 01 	sts	0x0107, r1
     14a:	10 92 06 01 	sts	0x0106, r1
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	08 95       	ret
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	08 95       	ret

0000015a <initTasks>:
     15a:	e3 e1       	ldi	r30, 0x13	; 19
     15c:	f1 e0       	ldi	r31, 0x01	; 1
     15e:	11 82       	std	Z+1, r1	; 0x01
     160:	10 82       	st	Z, r1
     162:	84 e1       	ldi	r24, 0x14	; 20
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	a0 e0       	ldi	r26, 0x00	; 0
     168:	b0 e0       	ldi	r27, 0x00	; 0
     16a:	82 83       	std	Z+2, r24	; 0x02
     16c:	93 83       	std	Z+3, r25	; 0x03
     16e:	a4 83       	std	Z+4, r26	; 0x04
     170:	b5 83       	std	Z+5, r27	; 0x05
     172:	86 83       	std	Z+6, r24	; 0x06
     174:	97 83       	std	Z+7, r25	; 0x07
     176:	a0 87       	std	Z+8, r26	; 0x08
     178:	b1 87       	std	Z+9, r27	; 0x09
     17a:	87 ee       	ldi	r24, 0xE7	; 231
     17c:	92 e0       	ldi	r25, 0x02	; 2
     17e:	93 87       	std	Z+11, r25	; 0x0b
     180:	82 87       	std	Z+10, r24	; 0x0a
     182:	15 86       	std	Z+13, r1	; 0x0d
     184:	14 86       	std	Z+12, r1	; 0x0c
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	90 e0       	ldi	r25, 0x00	; 0
     18a:	a0 e0       	ldi	r26, 0x00	; 0
     18c:	b0 e0       	ldi	r27, 0x00	; 0
     18e:	86 87       	std	Z+14, r24	; 0x0e
     190:	97 87       	std	Z+15, r25	; 0x0f
     192:	a0 8b       	std	Z+16, r26	; 0x10
     194:	b1 8b       	std	Z+17, r27	; 0x11
     196:	82 8b       	std	Z+18, r24	; 0x12
     198:	93 8b       	std	Z+19, r25	; 0x13
     19a:	a4 8b       	std	Z+20, r26	; 0x14
     19c:	b5 8b       	std	Z+21, r27	; 0x15
     19e:	85 e6       	ldi	r24, 0x65	; 101
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	97 8b       	std	Z+23, r25	; 0x17
     1a4:	86 8b       	std	Z+22, r24	; 0x16
     1a6:	08 95       	ret

000001a8 <TimerOn>:
     1a8:	8b e0       	ldi	r24, 0x0B	; 11
     1aa:	80 93 81 00 	sts	0x0081, r24
     1ae:	8d e7       	ldi	r24, 0x7D	; 125
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	90 93 89 00 	sts	0x0089, r25
     1b6:	80 93 88 00 	sts	0x0088, r24
     1ba:	82 e0       	ldi	r24, 0x02	; 2
     1bc:	80 93 6f 00 	sts	0x006F, r24
     1c0:	10 92 85 00 	sts	0x0085, r1
     1c4:	10 92 84 00 	sts	0x0084, r1
     1c8:	80 91 02 01 	lds	r24, 0x0102
     1cc:	90 91 03 01 	lds	r25, 0x0103
     1d0:	a0 91 04 01 	lds	r26, 0x0104
     1d4:	b0 91 05 01 	lds	r27, 0x0105
     1d8:	80 93 0f 01 	sts	0x010F, r24
     1dc:	90 93 10 01 	sts	0x0110, r25
     1e0:	a0 93 11 01 	sts	0x0111, r26
     1e4:	b0 93 12 01 	sts	0x0112, r27
     1e8:	8f b7       	in	r24, 0x3f	; 63
     1ea:	80 68       	ori	r24, 0x80	; 128
     1ec:	8f bf       	out	0x3f, r24	; 63
     1ee:	08 95       	ret

000001f0 <TimerISR>:
     1f0:	ef 92       	push	r14
     1f2:	ff 92       	push	r15
     1f4:	0f 93       	push	r16
     1f6:	1f 93       	push	r17
     1f8:	cf 93       	push	r28
     1fa:	df 93       	push	r29
     1fc:	c3 e1       	ldi	r28, 0x13	; 19
     1fe:	d1 e0       	ldi	r29, 0x01	; 1
     200:	0f 2e       	mov	r0, r31
     202:	fb e2       	ldi	r31, 0x2B	; 43
     204:	ef 2e       	mov	r14, r31
     206:	f1 e0       	ldi	r31, 0x01	; 1
     208:	ff 2e       	mov	r15, r31
     20a:	f0 2d       	mov	r31, r0
     20c:	8e 01       	movw	r16, r28
     20e:	4e 81       	ldd	r20, Y+6	; 0x06
     210:	5f 81       	ldd	r21, Y+7	; 0x07
     212:	68 85       	ldd	r22, Y+8	; 0x08
     214:	79 85       	ldd	r23, Y+9	; 0x09
     216:	8a 81       	ldd	r24, Y+2	; 0x02
     218:	9b 81       	ldd	r25, Y+3	; 0x03
     21a:	ac 81       	ldd	r26, Y+4	; 0x04
     21c:	bd 81       	ldd	r27, Y+5	; 0x05
     21e:	48 17       	cp	r20, r24
     220:	59 07       	cpc	r21, r25
     222:	6a 07       	cpc	r22, r26
     224:	7b 07       	cpc	r23, r27
     226:	58 f0       	brcs	.+22     	; 0x23e <TimerISR+0x4e>
     228:	ea 85       	ldd	r30, Y+10	; 0x0a
     22a:	fb 85       	ldd	r31, Y+11	; 0x0b
     22c:	88 81       	ld	r24, Y
     22e:	99 81       	ldd	r25, Y+1	; 0x01
     230:	09 95       	icall
     232:	99 83       	std	Y+1, r25	; 0x01
     234:	88 83       	st	Y, r24
     236:	1e 82       	std	Y+6, r1	; 0x06
     238:	1f 82       	std	Y+7, r1	; 0x07
     23a:	18 86       	std	Y+8, r1	; 0x08
     23c:	19 86       	std	Y+9, r1	; 0x09
     23e:	f8 01       	movw	r30, r16
     240:	86 81       	ldd	r24, Z+6	; 0x06
     242:	97 81       	ldd	r25, Z+7	; 0x07
     244:	a0 85       	ldd	r26, Z+8	; 0x08
     246:	b1 85       	ldd	r27, Z+9	; 0x09
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	a1 1d       	adc	r26, r1
     24c:	b1 1d       	adc	r27, r1
     24e:	86 83       	std	Z+6, r24	; 0x06
     250:	97 83       	std	Z+7, r25	; 0x07
     252:	a0 87       	std	Z+8, r26	; 0x08
     254:	b1 87       	std	Z+9, r27	; 0x09
     256:	2c 96       	adiw	r28, 0x0c	; 12
     258:	ce 15       	cp	r28, r14
     25a:	df 05       	cpc	r29, r15
     25c:	b9 f6       	brne	.-82     	; 0x20c <TimerISR+0x1c>
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	1f 91       	pop	r17
     264:	0f 91       	pop	r16
     266:	ff 90       	pop	r15
     268:	ef 90       	pop	r14
     26a:	08 95       	ret

0000026c <__vector_13>:
     26c:	1f 92       	push	r1
     26e:	0f 92       	push	r0
     270:	0f b6       	in	r0, 0x3f	; 63
     272:	0f 92       	push	r0
     274:	11 24       	eor	r1, r1
     276:	0b b6       	in	r0, 0x3b	; 59
     278:	0f 92       	push	r0
     27a:	2f 93       	push	r18
     27c:	3f 93       	push	r19
     27e:	4f 93       	push	r20
     280:	5f 93       	push	r21
     282:	6f 93       	push	r22
     284:	7f 93       	push	r23
     286:	8f 93       	push	r24
     288:	9f 93       	push	r25
     28a:	af 93       	push	r26
     28c:	bf 93       	push	r27
     28e:	ef 93       	push	r30
     290:	ff 93       	push	r31
     292:	80 91 0f 01 	lds	r24, 0x010F
     296:	90 91 10 01 	lds	r25, 0x0110
     29a:	a0 91 11 01 	lds	r26, 0x0111
     29e:	b0 91 12 01 	lds	r27, 0x0112
     2a2:	01 97       	sbiw	r24, 0x01	; 1
     2a4:	a1 09       	sbc	r26, r1
     2a6:	b1 09       	sbc	r27, r1
     2a8:	80 93 0f 01 	sts	0x010F, r24
     2ac:	90 93 10 01 	sts	0x0110, r25
     2b0:	a0 93 11 01 	sts	0x0111, r26
     2b4:	b0 93 12 01 	sts	0x0112, r27
     2b8:	89 2b       	or	r24, r25
     2ba:	8a 2b       	or	r24, r26
     2bc:	8b 2b       	or	r24, r27
     2be:	89 f4       	brne	.+34     	; 0x2e2 <__vector_13+0x76>
     2c0:	97 df       	rcall	.-210    	; 0x1f0 <TimerISR>
     2c2:	80 91 02 01 	lds	r24, 0x0102
     2c6:	90 91 03 01 	lds	r25, 0x0103
     2ca:	a0 91 04 01 	lds	r26, 0x0104
     2ce:	b0 91 05 01 	lds	r27, 0x0105
     2d2:	80 93 0f 01 	sts	0x010F, r24
     2d6:	90 93 10 01 	sts	0x0110, r25
     2da:	a0 93 11 01 	sts	0x0111, r26
     2de:	b0 93 12 01 	sts	0x0112, r27
     2e2:	ff 91       	pop	r31
     2e4:	ef 91       	pop	r30
     2e6:	bf 91       	pop	r27
     2e8:	af 91       	pop	r26
     2ea:	9f 91       	pop	r25
     2ec:	8f 91       	pop	r24
     2ee:	7f 91       	pop	r23
     2f0:	6f 91       	pop	r22
     2f2:	5f 91       	pop	r21
     2f4:	4f 91       	pop	r20
     2f6:	3f 91       	pop	r19
     2f8:	2f 91       	pop	r18
     2fa:	0f 90       	pop	r0
     2fc:	0b be       	out	0x3b, r0	; 59
     2fe:	0f 90       	pop	r0
     300:	0f be       	out	0x3f, r0	; 63
     302:	0f 90       	pop	r0
     304:	1f 90       	pop	r1
     306:	18 95       	reti

00000308 <clearSingleMatrix>:
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
     30c:	cd b7       	in	r28, 0x3d	; 61
     30e:	de b7       	in	r29, 0x3e	; 62
     310:	60 97       	sbiw	r28, 0x10	; 16
     312:	0f b6       	in	r0, 0x3f	; 63
     314:	f8 94       	cli
     316:	de bf       	out	0x3e, r29	; 62
     318:	0f be       	out	0x3f, r0	; 63
     31a:	cd bf       	out	0x3d, r28	; 61
     31c:	29 87       	std	Y+9, r18	; 0x09
     31e:	3a 87       	std	Y+10, r19	; 0x0a
     320:	4b 87       	std	Y+11, r20	; 0x0b
     322:	5c 87       	std	Y+12, r21	; 0x0c
     324:	6d 87       	std	Y+13, r22	; 0x0d
     326:	7e 87       	std	Y+14, r23	; 0x0e
     328:	8f 87       	std	Y+15, r24	; 0x0f
     32a:	98 8b       	std	Y+16, r25	; 0x10
     32c:	fe 01       	movw	r30, r28
     32e:	39 96       	adiw	r30, 0x09	; 9
     330:	9e 01       	movw	r18, r28
     332:	2f 5e       	subi	r18, 0xEF	; 239
     334:	3f 4f       	sbci	r19, 0xFF	; 255
     336:	8f ef       	ldi	r24, 0xFF	; 255
     338:	81 93       	st	Z+, r24
     33a:	e2 17       	cp	r30, r18
     33c:	f3 07       	cpc	r31, r19
     33e:	e1 f7       	brne	.-8      	; 0x338 <clearSingleMatrix+0x30>
     340:	88 e0       	ldi	r24, 0x08	; 8
     342:	fe 01       	movw	r30, r28
     344:	39 96       	adiw	r30, 0x09	; 9
     346:	de 01       	movw	r26, r28
     348:	11 96       	adiw	r26, 0x01	; 1
     34a:	01 90       	ld	r0, Z+
     34c:	0d 92       	st	X+, r0
     34e:	8a 95       	dec	r24
     350:	e1 f7       	brne	.-8      	; 0x34a <clearSingleMatrix+0x42>
     352:	29 81       	ldd	r18, Y+1	; 0x01
     354:	3a 81       	ldd	r19, Y+2	; 0x02
     356:	4b 81       	ldd	r20, Y+3	; 0x03
     358:	5c 81       	ldd	r21, Y+4	; 0x04
     35a:	6d 81       	ldd	r22, Y+5	; 0x05
     35c:	7e 81       	ldd	r23, Y+6	; 0x06
     35e:	8f 81       	ldd	r24, Y+7	; 0x07
     360:	98 85       	ldd	r25, Y+8	; 0x08
     362:	60 96       	adiw	r28, 0x10	; 16
     364:	0f b6       	in	r0, 0x3f	; 63
     366:	f8 94       	cli
     368:	de bf       	out	0x3e, r29	; 62
     36a:	0f be       	out	0x3f, r0	; 63
     36c:	cd bf       	out	0x3d, r28	; 61
     36e:	df 91       	pop	r29
     370:	cf 91       	pop	r28
     372:	08 95       	ret

00000374 <initSingleUserMatrix>:
     374:	ef 92       	push	r14
     376:	ff 92       	push	r15
     378:	0f 93       	push	r16
     37a:	1f 93       	push	r17
     37c:	cf 93       	push	r28
     37e:	df 93       	push	r29
     380:	cd b7       	in	r28, 0x3d	; 61
     382:	de b7       	in	r29, 0x3e	; 62
     384:	2a 97       	sbiw	r28, 0x0a	; 10
     386:	0f b6       	in	r0, 0x3f	; 63
     388:	f8 94       	cli
     38a:	de bf       	out	0x3e, r29	; 62
     38c:	0f be       	out	0x3f, r0	; 63
     38e:	cd bf       	out	0x3d, r28	; 61
     390:	bc 01       	movw	r22, r24
     392:	e9 82       	std	Y+1, r14	; 0x01
     394:	fa 82       	std	Y+2, r15	; 0x02
     396:	0b 83       	std	Y+3, r16	; 0x03
     398:	1c 83       	std	Y+4, r17	; 0x04
     39a:	2d 83       	std	Y+5, r18	; 0x05
     39c:	3e 83       	std	Y+6, r19	; 0x06
     39e:	4f 83       	std	Y+7, r20	; 0x07
     3a0:	58 87       	std	Y+8, r21	; 0x08
     3a2:	fe 01       	movw	r30, r28
     3a4:	31 96       	adiw	r30, 0x01	; 1
     3a6:	9e 01       	movw	r18, r28
     3a8:	27 5f       	subi	r18, 0xF7	; 247
     3aa:	3f 4f       	sbci	r19, 0xFF	; 255
     3ac:	9f ef       	ldi	r25, 0xFF	; 255
     3ae:	91 93       	st	Z+, r25
     3b0:	e2 17       	cp	r30, r18
     3b2:	f3 07       	cpc	r31, r19
     3b4:	e1 f7       	brne	.-8      	; 0x3ae <initSingleUserMatrix+0x3a>
     3b6:	99 81       	ldd	r25, Y+1	; 0x01
     3b8:	97 7f       	andi	r25, 0xF7	; 247
     3ba:	99 83       	std	Y+1, r25	; 0x01
     3bc:	19 86       	std	Y+9, r1	; 0x09
     3be:	83 e0       	ldi	r24, 0x03	; 3
     3c0:	8a 87       	std	Y+10, r24	; 0x0a
     3c2:	8a e0       	ldi	r24, 0x0A	; 10
     3c4:	fe 01       	movw	r30, r28
     3c6:	31 96       	adiw	r30, 0x01	; 1
     3c8:	db 01       	movw	r26, r22
     3ca:	01 90       	ld	r0, Z+
     3cc:	0d 92       	st	X+, r0
     3ce:	8a 95       	dec	r24
     3d0:	e1 f7       	brne	.-8      	; 0x3ca <initSingleUserMatrix+0x56>
     3d2:	cb 01       	movw	r24, r22
     3d4:	2a 96       	adiw	r28, 0x0a	; 10
     3d6:	0f b6       	in	r0, 0x3f	; 63
     3d8:	f8 94       	cli
     3da:	de bf       	out	0x3e, r29	; 62
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	cd bf       	out	0x3d, r28	; 61
     3e0:	df 91       	pop	r29
     3e2:	cf 91       	pop	r28
     3e4:	1f 91       	pop	r17
     3e6:	0f 91       	pop	r16
     3e8:	ff 90       	pop	r15
     3ea:	ef 90       	pop	r14
     3ec:	08 95       	ret

000003ee <shiftSR>:
     3ee:	85 b9       	out	0x05, r24	; 5
     3f0:	29 9a       	sbi	0x05, 1	; 5
     3f2:	15 b8       	out	0x05, r1	; 5
     3f4:	08 95       	ret

000003f6 <shiftWhole>:
     3f6:	20 e0       	ldi	r18, 0x00	; 0
     3f8:	30 e0       	ldi	r19, 0x00	; 0
     3fa:	e1 e0       	ldi	r30, 0x01	; 1
     3fc:	f0 e0       	ldi	r31, 0x00	; 0
     3fe:	71 e0       	ldi	r23, 0x01	; 1
     400:	60 e0       	ldi	r22, 0x00	; 0
     402:	af 01       	movw	r20, r30
     404:	02 2e       	mov	r0, r18
     406:	02 c0       	rjmp	.+4      	; 0x40c <shiftWhole+0x16>
     408:	44 0f       	add	r20, r20
     40a:	55 1f       	adc	r21, r21
     40c:	0a 94       	dec	r0
     40e:	e2 f7       	brpl	.-8      	; 0x408 <shiftWhole+0x12>
     410:	48 23       	and	r20, r24
     412:	97 2f       	mov	r25, r23
     414:	09 f4       	brne	.+2      	; 0x418 <shiftWhole+0x22>
     416:	96 2f       	mov	r25, r22
     418:	95 b9       	out	0x05, r25	; 5
     41a:	29 9a       	sbi	0x05, 1	; 5
     41c:	65 b9       	out	0x05, r22	; 5
     41e:	2f 5f       	subi	r18, 0xFF	; 255
     420:	3f 4f       	sbci	r19, 0xFF	; 255
     422:	28 30       	cpi	r18, 0x08	; 8
     424:	31 05       	cpc	r19, r1
     426:	69 f7       	brne	.-38     	; 0x402 <shiftWhole+0xc>
     428:	84 e0       	ldi	r24, 0x04	; 4
     42a:	85 b9       	out	0x05, r24	; 5
     42c:	08 95       	ret

0000042e <clearSR>:
     42e:	cf 93       	push	r28
     430:	c8 e0       	ldi	r28, 0x08	; 8
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	dc df       	rcall	.-72     	; 0x3ee <shiftSR>
     436:	c1 50       	subi	r28, 0x01	; 1
     438:	e1 f7       	brne	.-8      	; 0x432 <clearSR+0x4>
     43a:	84 e0       	ldi	r24, 0x04	; 4
     43c:	85 b9       	out	0x05, r24	; 5
     43e:	cf 91       	pop	r28
     440:	08 95       	ret

00000442 <d3_clearSR>:
     442:	f5 df       	rcall	.-22     	; 0x42e <clearSR>
     444:	f4 df       	rcall	.-24     	; 0x42e <clearSR>
     446:	f3 cf       	rjmp	.-26     	; 0x42e <clearSR>
     448:	08 95       	ret

0000044a <d3_setRowMatrixColor>:
     44a:	0f 93       	push	r16
     44c:	1f 93       	push	r17
     44e:	cf 93       	push	r28
     450:	df 93       	push	r29
     452:	18 2f       	mov	r17, r24
     454:	c9 2f       	mov	r28, r25
     456:	06 2f       	mov	r16, r22
     458:	d4 2f       	mov	r29, r20
     45a:	f3 df       	rcall	.-26     	; 0x442 <d3_clearSR>
     45c:	51 e0       	ldi	r21, 0x01	; 1
     45e:	01 c0       	rjmp	.+2      	; 0x462 <d3_setRowMatrixColor+0x18>
     460:	55 0f       	add	r21, r21
     462:	0a 95       	dec	r16
     464:	ea f7       	brpl	.-6      	; 0x460 <d3_setRowMatrixColor+0x16>
     466:	e1 2f       	mov	r30, r17
     468:	fc 2f       	mov	r31, r28
     46a:	20 e0       	ldi	r18, 0x00	; 0
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	c0 e0       	ldi	r28, 0x00	; 0
     470:	a1 e0       	ldi	r26, 0x01	; 1
     472:	b0 e0       	ldi	r27, 0x00	; 0
     474:	91 91       	ld	r25, Z+
     476:	95 23       	and	r25, r21
     478:	49 f0       	breq	.+18     	; 0x48c <d3_setRowMatrixColor+0x42>
     47a:	cd 01       	movw	r24, r26
     47c:	02 2e       	mov	r0, r18
     47e:	02 c0       	rjmp	.+4      	; 0x484 <d3_setRowMatrixColor+0x3a>
     480:	88 0f       	add	r24, r24
     482:	99 1f       	adc	r25, r25
     484:	0a 94       	dec	r0
     486:	e2 f7       	brpl	.-8      	; 0x480 <d3_setRowMatrixColor+0x36>
     488:	c8 2b       	or	r28, r24
     48a:	09 c0       	rjmp	.+18     	; 0x49e <d3_setRowMatrixColor+0x54>
     48c:	bd 01       	movw	r22, r26
     48e:	02 2e       	mov	r0, r18
     490:	02 c0       	rjmp	.+4      	; 0x496 <d3_setRowMatrixColor+0x4c>
     492:	66 0f       	add	r22, r22
     494:	77 1f       	adc	r23, r23
     496:	0a 94       	dec	r0
     498:	e2 f7       	brpl	.-8      	; 0x492 <d3_setRowMatrixColor+0x48>
     49a:	60 95       	com	r22
     49c:	c6 23       	and	r28, r22
     49e:	2f 5f       	subi	r18, 0xFF	; 255
     4a0:	3f 4f       	sbci	r19, 0xFF	; 255
     4a2:	28 30       	cpi	r18, 0x08	; 8
     4a4:	31 05       	cpc	r19, r1
     4a6:	31 f7       	brne	.-52     	; 0x474 <d3_setRowMatrixColor+0x2a>
     4a8:	d1 30       	cpi	r29, 0x01	; 1
     4aa:	71 f0       	breq	.+28     	; 0x4c8 <d3_setRowMatrixColor+0x7e>
     4ac:	18 f0       	brcs	.+6      	; 0x4b4 <d3_setRowMatrixColor+0x6a>
     4ae:	d2 30       	cpi	r29, 0x02	; 2
     4b0:	31 f0       	breq	.+12     	; 0x4be <d3_setRowMatrixColor+0x74>
     4b2:	0e c0       	rjmp	.+28     	; 0x4d0 <d3_setRowMatrixColor+0x86>
     4b4:	bc df       	rcall	.-136    	; 0x42e <clearSR>
     4b6:	8c 2f       	mov	r24, r28
     4b8:	9e df       	rcall	.-196    	; 0x3f6 <shiftWhole>
     4ba:	b9 df       	rcall	.-142    	; 0x42e <clearSR>
     4bc:	09 c0       	rjmp	.+18     	; 0x4d0 <d3_setRowMatrixColor+0x86>
     4be:	8c 2f       	mov	r24, r28
     4c0:	9a df       	rcall	.-204    	; 0x3f6 <shiftWhole>
     4c2:	b5 df       	rcall	.-150    	; 0x42e <clearSR>
     4c4:	b4 df       	rcall	.-152    	; 0x42e <clearSR>
     4c6:	04 c0       	rjmp	.+8      	; 0x4d0 <d3_setRowMatrixColor+0x86>
     4c8:	b2 df       	rcall	.-156    	; 0x42e <clearSR>
     4ca:	b1 df       	rcall	.-158    	; 0x42e <clearSR>
     4cc:	8c 2f       	mov	r24, r28
     4ce:	93 df       	rcall	.-218    	; 0x3f6 <shiftWhole>
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	0f 91       	pop	r16
     4d8:	08 95       	ret

000004da <d3_setMatrixColor>:
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ff 92       	push	r15
     4e0:	0f 93       	push	r16
     4e2:	1f 93       	push	r17
     4e4:	cf 93       	push	r28
     4e6:	df 93       	push	r29
     4e8:	6c 01       	movw	r12, r24
     4ea:	f6 2e       	mov	r15, r22
     4ec:	c0 e0       	ldi	r28, 0x00	; 0
     4ee:	d0 e0       	ldi	r29, 0x00	; 0
     4f0:	01 e0       	ldi	r16, 0x01	; 1
     4f2:	10 e0       	ldi	r17, 0x00	; 0
     4f4:	98 01       	movw	r18, r16
     4f6:	0c 2e       	mov	r0, r28
     4f8:	02 c0       	rjmp	.+4      	; 0x4fe <d3_setMatrixColor+0x24>
     4fa:	22 0f       	add	r18, r18
     4fc:	33 1f       	adc	r19, r19
     4fe:	0a 94       	dec	r0
     500:	e2 f7       	brpl	.-8      	; 0x4fa <d3_setMatrixColor+0x20>
     502:	2b b9       	out	0x0b, r18	; 11
     504:	4f 2d       	mov	r20, r15
     506:	6c 2f       	mov	r22, r28
     508:	c6 01       	movw	r24, r12
     50a:	9f df       	rcall	.-194    	; 0x44a <d3_setRowMatrixColor>
     50c:	8f ea       	ldi	r24, 0xAF	; 175
     50e:	94 e0       	ldi	r25, 0x04	; 4
     510:	01 97       	sbiw	r24, 0x01	; 1
     512:	f1 f7       	brne	.-4      	; 0x510 <d3_setMatrixColor+0x36>
     514:	00 c0       	rjmp	.+0      	; 0x516 <d3_setMatrixColor+0x3c>
     516:	00 00       	nop
     518:	94 df       	rcall	.-216    	; 0x442 <d3_clearSR>
     51a:	21 96       	adiw	r28, 0x01	; 1
     51c:	c8 30       	cpi	r28, 0x08	; 8
     51e:	d1 05       	cpc	r29, r1
     520:	49 f7       	brne	.-46     	; 0x4f4 <d3_setMatrixColor+0x1a>
     522:	df 91       	pop	r29
     524:	cf 91       	pop	r28
     526:	1f 91       	pop	r17
     528:	0f 91       	pop	r16
     52a:	ff 90       	pop	r15
     52c:	df 90       	pop	r13
     52e:	cf 90       	pop	r12
     530:	08 95       	ret

00000532 <GetKeypadKey>:
     532:	8f ee       	ldi	r24, 0xEF	; 239
     534:	88 b9       	out	0x08, r24	; 8
     536:	00 00       	nop
     538:	30 9b       	sbis	0x06, 0	; 6
     53a:	29 c0       	rjmp	.+82     	; 0x58e <GetKeypadKey+0x5c>
     53c:	31 9b       	sbis	0x06, 1	; 6
     53e:	29 c0       	rjmp	.+82     	; 0x592 <GetKeypadKey+0x60>
     540:	32 9b       	sbis	0x06, 2	; 6
     542:	29 c0       	rjmp	.+82     	; 0x596 <GetKeypadKey+0x64>
     544:	33 9b       	sbis	0x06, 3	; 6
     546:	29 c0       	rjmp	.+82     	; 0x59a <GetKeypadKey+0x68>
     548:	8f ed       	ldi	r24, 0xDF	; 223
     54a:	88 b9       	out	0x08, r24	; 8
     54c:	00 00       	nop
     54e:	30 9b       	sbis	0x06, 0	; 6
     550:	26 c0       	rjmp	.+76     	; 0x59e <GetKeypadKey+0x6c>
     552:	31 9b       	sbis	0x06, 1	; 6
     554:	26 c0       	rjmp	.+76     	; 0x5a2 <GetKeypadKey+0x70>
     556:	32 9b       	sbis	0x06, 2	; 6
     558:	26 c0       	rjmp	.+76     	; 0x5a6 <GetKeypadKey+0x74>
     55a:	33 9b       	sbis	0x06, 3	; 6
     55c:	26 c0       	rjmp	.+76     	; 0x5aa <GetKeypadKey+0x78>
     55e:	8f eb       	ldi	r24, 0xBF	; 191
     560:	88 b9       	out	0x08, r24	; 8
     562:	00 00       	nop
     564:	30 9b       	sbis	0x06, 0	; 6
     566:	23 c0       	rjmp	.+70     	; 0x5ae <GetKeypadKey+0x7c>
     568:	31 9b       	sbis	0x06, 1	; 6
     56a:	23 c0       	rjmp	.+70     	; 0x5b2 <GetKeypadKey+0x80>
     56c:	32 9b       	sbis	0x06, 2	; 6
     56e:	23 c0       	rjmp	.+70     	; 0x5b6 <GetKeypadKey+0x84>
     570:	33 9b       	sbis	0x06, 3	; 6
     572:	23 c0       	rjmp	.+70     	; 0x5ba <GetKeypadKey+0x88>
     574:	8f e7       	ldi	r24, 0x7F	; 127
     576:	88 b9       	out	0x08, r24	; 8
     578:	00 00       	nop
     57a:	30 9b       	sbis	0x06, 0	; 6
     57c:	20 c0       	rjmp	.+64     	; 0x5be <GetKeypadKey+0x8c>
     57e:	31 9b       	sbis	0x06, 1	; 6
     580:	20 c0       	rjmp	.+64     	; 0x5c2 <GetKeypadKey+0x90>
     582:	32 9b       	sbis	0x06, 2	; 6
     584:	20 c0       	rjmp	.+64     	; 0x5c6 <GetKeypadKey+0x94>
     586:	33 9b       	sbis	0x06, 3	; 6
     588:	20 c0       	rjmp	.+64     	; 0x5ca <GetKeypadKey+0x98>
     58a:	80 e0       	ldi	r24, 0x00	; 0
     58c:	08 95       	ret
     58e:	81 e3       	ldi	r24, 0x31	; 49
     590:	08 95       	ret
     592:	84 e3       	ldi	r24, 0x34	; 52
     594:	08 95       	ret
     596:	87 e3       	ldi	r24, 0x37	; 55
     598:	08 95       	ret
     59a:	8a e2       	ldi	r24, 0x2A	; 42
     59c:	08 95       	ret
     59e:	82 e3       	ldi	r24, 0x32	; 50
     5a0:	08 95       	ret
     5a2:	85 e3       	ldi	r24, 0x35	; 53
     5a4:	08 95       	ret
     5a6:	88 e3       	ldi	r24, 0x38	; 56
     5a8:	08 95       	ret
     5aa:	80 e3       	ldi	r24, 0x30	; 48
     5ac:	08 95       	ret
     5ae:	83 e3       	ldi	r24, 0x33	; 51
     5b0:	08 95       	ret
     5b2:	86 e3       	ldi	r24, 0x36	; 54
     5b4:	08 95       	ret
     5b6:	89 e3       	ldi	r24, 0x39	; 57
     5b8:	08 95       	ret
     5ba:	83 e2       	ldi	r24, 0x23	; 35
     5bc:	08 95       	ret
     5be:	81 e4       	ldi	r24, 0x41	; 65
     5c0:	08 95       	ret
     5c2:	82 e4       	ldi	r24, 0x42	; 66
     5c4:	08 95       	ret
     5c6:	83 e4       	ldi	r24, 0x43	; 67
     5c8:	08 95       	ret
     5ca:	84 e4       	ldi	r24, 0x44	; 68
     5cc:	08 95       	ret

000005ce <KPTick>:
     5ce:	cf 93       	push	r28
     5d0:	df 93       	push	r29
     5d2:	ec 01       	movw	r28, r24
     5d4:	81 30       	cpi	r24, 0x01	; 1
     5d6:	91 05       	cpc	r25, r1
     5d8:	51 f0       	breq	.+20     	; 0x5ee <KPTick+0x20>
     5da:	82 30       	cpi	r24, 0x02	; 2
     5dc:	91 05       	cpc	r25, r1
     5de:	09 f4       	brne	.+2      	; 0x5e2 <KPTick+0x14>
     5e0:	a1 c0       	rjmp	.+322    	; 0x724 <KPTick+0x156>
     5e2:	89 2b       	or	r24, r25
     5e4:	09 f0       	breq	.+2      	; 0x5e8 <KPTick+0x1a>
     5e6:	b4 c0       	rjmp	.+360    	; 0x750 <KPTick+0x182>
     5e8:	c1 e0       	ldi	r28, 0x01	; 1
     5ea:	d0 e0       	ldi	r29, 0x00	; 0
     5ec:	b1 c0       	rjmp	.+354    	; 0x750 <KPTick+0x182>
     5ee:	a1 df       	rcall	.-190    	; 0x532 <GetKeypadKey>
     5f0:	80 93 08 01 	sts	0x0108, r24
     5f4:	88 23       	and	r24, r24
     5f6:	09 f4       	brne	.+2      	; 0x5fa <KPTick+0x2c>
     5f8:	ab c0       	rjmp	.+342    	; 0x750 <KPTick+0x182>
     5fa:	84 33       	cpi	r24, 0x34	; 52
     5fc:	21 f5       	brne	.+72     	; 0x646 <KPTick+0x78>
     5fe:	e0 91 a3 02 	lds	r30, 0x02A3
     602:	e7 30       	cpi	r30, 0x07	; 7
     604:	08 f0       	brcs	.+2      	; 0x608 <KPTick+0x3a>
     606:	93 c0       	rjmp	.+294    	; 0x72e <KPTick+0x160>
     608:	ef 5f       	subi	r30, 0xFF	; 255
     60a:	ab e9       	ldi	r26, 0x9B	; 155
     60c:	b2 e0       	ldi	r27, 0x02	; 2
     60e:	18 96       	adiw	r26, 0x08	; 8
     610:	ec 93       	st	X, r30
     612:	18 97       	sbiw	r26, 0x08	; 8
     614:	f0 e0       	ldi	r31, 0x00	; 0
     616:	81 e0       	ldi	r24, 0x01	; 1
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	19 96       	adiw	r26, 0x09	; 9
     61c:	0c 90       	ld	r0, X
     61e:	02 c0       	rjmp	.+4      	; 0x624 <KPTick+0x56>
     620:	88 0f       	add	r24, r24
     622:	99 1f       	adc	r25, r25
     624:	0a 94       	dec	r0
     626:	e2 f7       	brpl	.-8      	; 0x620 <KPTick+0x52>
     628:	df 01       	movw	r26, r30
     62a:	a6 56       	subi	r26, 0x66	; 102
     62c:	bd 4f       	sbci	r27, 0xFD	; 253
     62e:	9c 91       	ld	r25, X
     630:	98 2b       	or	r25, r24
     632:	9c 93       	st	X, r25
     634:	e5 56       	subi	r30, 0x65	; 101
     636:	fd 4f       	sbci	r31, 0xFD	; 253
     638:	80 95       	com	r24
     63a:	90 81       	ld	r25, Z
     63c:	89 23       	and	r24, r25
     63e:	80 83       	st	Z, r24
     640:	c2 e0       	ldi	r28, 0x02	; 2
     642:	d0 e0       	ldi	r29, 0x00	; 0
     644:	85 c0       	rjmp	.+266    	; 0x750 <KPTick+0x182>
     646:	82 33       	cpi	r24, 0x32	; 50
     648:	19 f5       	brne	.+70     	; 0x690 <KPTick+0xc2>
     64a:	20 91 a4 02 	lds	r18, 0x02A4
     64e:	27 30       	cpi	r18, 0x07	; 7
     650:	08 f0       	brcs	.+2      	; 0x654 <KPTick+0x86>
     652:	70 c0       	rjmp	.+224    	; 0x734 <KPTick+0x166>
     654:	31 e0       	ldi	r19, 0x01	; 1
     656:	32 0f       	add	r19, r18
     658:	eb e9       	ldi	r30, 0x9B	; 155
     65a:	f2 e0       	ldi	r31, 0x02	; 2
     65c:	31 87       	std	Z+9, r19	; 0x09
     65e:	e0 85       	ldd	r30, Z+8	; 0x08
     660:	f0 e0       	ldi	r31, 0x00	; 0
     662:	e5 56       	subi	r30, 0x65	; 101
     664:	fd 4f       	sbci	r31, 0xFD	; 253
     666:	81 e0       	ldi	r24, 0x01	; 1
     668:	90 e0       	ldi	r25, 0x00	; 0
     66a:	ac 01       	movw	r20, r24
     66c:	02 c0       	rjmp	.+4      	; 0x672 <KPTick+0xa4>
     66e:	44 0f       	add	r20, r20
     670:	55 1f       	adc	r21, r21
     672:	3a 95       	dec	r19
     674:	e2 f7       	brpl	.-8      	; 0x66e <KPTick+0xa0>
     676:	40 95       	com	r20
     678:	02 c0       	rjmp	.+4      	; 0x67e <KPTick+0xb0>
     67a:	88 0f       	add	r24, r24
     67c:	99 1f       	adc	r25, r25
     67e:	2a 95       	dec	r18
     680:	e2 f7       	brpl	.-8      	; 0x67a <KPTick+0xac>
     682:	90 81       	ld	r25, Z
     684:	89 2b       	or	r24, r25
     686:	84 23       	and	r24, r20
     688:	80 83       	st	Z, r24
     68a:	c2 e0       	ldi	r28, 0x02	; 2
     68c:	d0 e0       	ldi	r29, 0x00	; 0
     68e:	60 c0       	rjmp	.+192    	; 0x750 <KPTick+0x182>
     690:	85 33       	cpi	r24, 0x35	; 53
     692:	21 f5       	brne	.+72     	; 0x6dc <KPTick+0x10e>
     694:	e0 91 a3 02 	lds	r30, 0x02A3
     698:	ee 23       	and	r30, r30
     69a:	09 f4       	brne	.+2      	; 0x69e <KPTick+0xd0>
     69c:	4e c0       	rjmp	.+156    	; 0x73a <KPTick+0x16c>
     69e:	e1 50       	subi	r30, 0x01	; 1
     6a0:	ab e9       	ldi	r26, 0x9B	; 155
     6a2:	b2 e0       	ldi	r27, 0x02	; 2
     6a4:	18 96       	adiw	r26, 0x08	; 8
     6a6:	ec 93       	st	X, r30
     6a8:	18 97       	sbiw	r26, 0x08	; 8
     6aa:	f0 e0       	ldi	r31, 0x00	; 0
     6ac:	81 e0       	ldi	r24, 0x01	; 1
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	19 96       	adiw	r26, 0x09	; 9
     6b2:	0c 90       	ld	r0, X
     6b4:	02 c0       	rjmp	.+4      	; 0x6ba <KPTick+0xec>
     6b6:	88 0f       	add	r24, r24
     6b8:	99 1f       	adc	r25, r25
     6ba:	0a 94       	dec	r0
     6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <KPTick+0xe8>
     6be:	df 01       	movw	r26, r30
     6c0:	a4 56       	subi	r26, 0x64	; 100
     6c2:	bd 4f       	sbci	r27, 0xFD	; 253
     6c4:	9c 91       	ld	r25, X
     6c6:	98 2b       	or	r25, r24
     6c8:	9c 93       	st	X, r25
     6ca:	e5 56       	subi	r30, 0x65	; 101
     6cc:	fd 4f       	sbci	r31, 0xFD	; 253
     6ce:	80 95       	com	r24
     6d0:	90 81       	ld	r25, Z
     6d2:	89 23       	and	r24, r25
     6d4:	80 83       	st	Z, r24
     6d6:	c2 e0       	ldi	r28, 0x02	; 2
     6d8:	d0 e0       	ldi	r29, 0x00	; 0
     6da:	3a c0       	rjmp	.+116    	; 0x750 <KPTick+0x182>
     6dc:	88 33       	cpi	r24, 0x38	; 56
     6de:	81 f5       	brne	.+96     	; 0x740 <KPTick+0x172>
     6e0:	20 91 a4 02 	lds	r18, 0x02A4
     6e4:	22 23       	and	r18, r18
     6e6:	79 f1       	breq	.+94     	; 0x746 <KPTick+0x178>
     6e8:	3f ef       	ldi	r19, 0xFF	; 255
     6ea:	32 0f       	add	r19, r18
     6ec:	eb e9       	ldi	r30, 0x9B	; 155
     6ee:	f2 e0       	ldi	r31, 0x02	; 2
     6f0:	31 87       	std	Z+9, r19	; 0x09
     6f2:	e0 85       	ldd	r30, Z+8	; 0x08
     6f4:	f0 e0       	ldi	r31, 0x00	; 0
     6f6:	e5 56       	subi	r30, 0x65	; 101
     6f8:	fd 4f       	sbci	r31, 0xFD	; 253
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	ac 01       	movw	r20, r24
     700:	02 c0       	rjmp	.+4      	; 0x706 <KPTick+0x138>
     702:	44 0f       	add	r20, r20
     704:	55 1f       	adc	r21, r21
     706:	3a 95       	dec	r19
     708:	e2 f7       	brpl	.-8      	; 0x702 <KPTick+0x134>
     70a:	40 95       	com	r20
     70c:	02 c0       	rjmp	.+4      	; 0x712 <KPTick+0x144>
     70e:	88 0f       	add	r24, r24
     710:	99 1f       	adc	r25, r25
     712:	2a 95       	dec	r18
     714:	e2 f7       	brpl	.-8      	; 0x70e <KPTick+0x140>
     716:	90 81       	ld	r25, Z
     718:	89 2b       	or	r24, r25
     71a:	84 23       	and	r24, r20
     71c:	80 83       	st	Z, r24
     71e:	c2 e0       	ldi	r28, 0x02	; 2
     720:	d0 e0       	ldi	r29, 0x00	; 0
     722:	16 c0       	rjmp	.+44     	; 0x750 <KPTick+0x182>
     724:	06 df       	rcall	.-500    	; 0x532 <GetKeypadKey>
     726:	88 23       	and	r24, r24
     728:	89 f0       	breq	.+34     	; 0x74c <KPTick+0x17e>
     72a:	03 df       	rcall	.-506    	; 0x532 <GetKeypadKey>
     72c:	11 c0       	rjmp	.+34     	; 0x750 <KPTick+0x182>
     72e:	c2 e0       	ldi	r28, 0x02	; 2
     730:	d0 e0       	ldi	r29, 0x00	; 0
     732:	0e c0       	rjmp	.+28     	; 0x750 <KPTick+0x182>
     734:	c2 e0       	ldi	r28, 0x02	; 2
     736:	d0 e0       	ldi	r29, 0x00	; 0
     738:	0b c0       	rjmp	.+22     	; 0x750 <KPTick+0x182>
     73a:	c2 e0       	ldi	r28, 0x02	; 2
     73c:	d0 e0       	ldi	r29, 0x00	; 0
     73e:	08 c0       	rjmp	.+16     	; 0x750 <KPTick+0x182>
     740:	c2 e0       	ldi	r28, 0x02	; 2
     742:	d0 e0       	ldi	r29, 0x00	; 0
     744:	05 c0       	rjmp	.+10     	; 0x750 <KPTick+0x182>
     746:	c2 e0       	ldi	r28, 0x02	; 2
     748:	d0 e0       	ldi	r29, 0x00	; 0
     74a:	02 c0       	rjmp	.+4      	; 0x750 <KPTick+0x182>
     74c:	c1 e0       	ldi	r28, 0x01	; 1
     74e:	d0 e0       	ldi	r29, 0x00	; 0
     750:	ce 01       	movw	r24, r28
     752:	df 91       	pop	r29
     754:	cf 91       	pop	r28
     756:	08 95       	ret

00000758 <initExplosions>:
     758:	cf 93       	push	r28
     75a:	df 93       	push	r29
     75c:	cd b7       	in	r28, 0x3d	; 61
     75e:	de b7       	in	r29, 0x3e	; 62
     760:	9c 01       	movw	r18, r24
     762:	93 e2       	ldi	r25, 0x23	; 35
     764:	91 50       	subi	r25, 0x01	; 1
     766:	f1 f7       	brne	.-4      	; 0x764 <initExplosions+0xc>
     768:	cd 59       	subi	r28, 0x9D	; 157
     76a:	de 4f       	sbci	r29, 0xFE	; 254
     76c:	18 82       	st	Y, r1
     76e:	c3 56       	subi	r28, 0x63	; 99
     770:	d1 40       	sbci	r29, 0x01	; 1
     772:	cc 59       	subi	r28, 0x9C	; 156
     774:	de 4f       	sbci	r29, 0xFE	; 254
     776:	18 82       	st	Y, r1
     778:	c4 56       	subi	r28, 0x64	; 100
     77a:	d1 40       	sbci	r29, 0x01	; 1
     77c:	80 e6       	ldi	r24, 0x60	; 96
     77e:	91 e0       	ldi	r25, 0x01	; 1
     780:	fe 01       	movw	r30, r28
     782:	35 96       	adiw	r30, 0x05	; 5
     784:	d9 01       	movw	r26, r18
     786:	01 90       	ld	r0, Z+
     788:	0d 92       	st	X+, r0
     78a:	01 97       	sbiw	r24, 0x01	; 1
     78c:	e1 f7       	brne	.-8      	; 0x786 <initExplosions+0x2e>
     78e:	c9 01       	movw	r24, r18
     790:	df 91       	pop	r29
     792:	cf 91       	pop	r28
     794:	08 95       	ret

00000796 <DeathTick>:
			}
		}
	return state;
}

unsigned char DeathTick() {	
     796:	ef 92       	push	r14
     798:	ff 92       	push	r15
     79a:	0f 93       	push	r16
     79c:	1f 93       	push	r17
     79e:	cf 93       	push	r28
     7a0:	df 93       	push	r29
     7a2:	cd b7       	in	r28, 0x3d	; 61
     7a4:	de b7       	in	r29, 0x3e	; 62
     7a6:	2a 97       	sbiw	r28, 0x0a	; 10
     7a8:	0f b6       	in	r0, 0x3f	; 63
     7aa:	f8 94       	cli
     7ac:	de bf       	out	0x3e, r29	; 62
     7ae:	0f be       	out	0x3f, r0	; 63
     7b0:	cd bf       	out	0x3d, r28	; 61
	if ((displayBlank == 0) && GetBit(explosions.matricies[explosions.displayIndex].m[userMatrix.row], userMatrix.column) == 0) {
     7b2:	80 91 09 01 	lds	r24, 0x0109
     7b6:	81 11       	cpse	r24, r1
     7b8:	3a c0       	rjmp	.+116    	; 0x82e <DeathTick+0x98>
     7ba:	eb e9       	ldi	r30, 0x9B	; 155
     7bc:	f2 e0       	ldi	r31, 0x02	; 2
#ifndef BIT_H_
#define BIT_H_

unsigned char GetBit(unsigned char bits, unsigned char numShifts) {
	unsigned char mask = 0x01 << numShifts;
     7be:	21 e0       	ldi	r18, 0x01	; 1
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	01 84       	ldd	r0, Z+9	; 0x09
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <DeathTick+0x34>
     7c6:	22 0f       	add	r18, r18
     7c8:	33 1f       	adc	r19, r19
     7ca:	0a 94       	dec	r0
     7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <DeathTick+0x30>
     7ce:	90 91 9a 02 	lds	r25, 0x029A
     7d2:	e0 85       	ldd	r30, Z+8	; 0x08
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	48 e0       	ldi	r20, 0x08	; 8
     7d8:	94 9f       	mul	r25, r20
     7da:	e0 0d       	add	r30, r0
     7dc:	f1 1d       	adc	r31, r1
     7de:	11 24       	eor	r1, r1
     7e0:	e5 5c       	subi	r30, 0xC5	; 197
     7e2:	fe 4f       	sbci	r31, 0xFE	; 254
	return ((bits & mask) != 0);
     7e4:	90 81       	ld	r25, Z
     7e6:	29 23       	and	r18, r25
     7e8:	19 f5       	brne	.+70     	; 0x830 <DeathTick+0x9a>
		userMatrix = initSingleUserMatrix(userMatrix);
     7ea:	e0 90 9b 02 	lds	r14, 0x029B
     7ee:	f0 90 9c 02 	lds	r15, 0x029C
     7f2:	00 91 9d 02 	lds	r16, 0x029D
     7f6:	10 91 9e 02 	lds	r17, 0x029E
     7fa:	20 91 9f 02 	lds	r18, 0x029F
     7fe:	30 91 a0 02 	lds	r19, 0x02A0
     802:	40 91 a1 02 	lds	r20, 0x02A1
     806:	50 91 a2 02 	lds	r21, 0x02A2
     80a:	60 91 a3 02 	lds	r22, 0x02A3
     80e:	70 91 a4 02 	lds	r23, 0x02A4
     812:	ce 01       	movw	r24, r28
     814:	01 96       	adiw	r24, 0x01	; 1
     816:	ae dd       	rcall	.-1188   	; 0x374 <initSingleUserMatrix>
     818:	8a e0       	ldi	r24, 0x0A	; 10
     81a:	fe 01       	movw	r30, r28
     81c:	31 96       	adiw	r30, 0x01	; 1
     81e:	ab e9       	ldi	r26, 0x9B	; 155
     820:	b2 e0       	ldi	r27, 0x02	; 2
     822:	01 90       	ld	r0, Z+
     824:	0d 92       	st	X+, r0
     826:	8a 95       	dec	r24
     828:	e1 f7       	brne	.-8      	; 0x822 <DeathTick+0x8c>
		return 1;
     82a:	81 e0       	ldi	r24, 0x01	; 1
     82c:	01 c0       	rjmp	.+2      	; 0x830 <DeathTick+0x9a>
	} else {
		// nothing
		return 0;
     82e:	80 e0       	ldi	r24, 0x00	; 0
	}
}
     830:	2a 96       	adiw	r28, 0x0a	; 10
     832:	0f b6       	in	r0, 0x3f	; 63
     834:	f8 94       	cli
     836:	de bf       	out	0x3e, r29	; 62
     838:	0f be       	out	0x3f, r0	; 63
     83a:	cd bf       	out	0x3d, r28	; 61
     83c:	df 91       	pop	r29
     83e:	cf 91       	pop	r28
     840:	1f 91       	pop	r17
     842:	0f 91       	pop	r16
     844:	ff 90       	pop	r15
     846:	ef 90       	pop	r14
     848:	08 95       	ret

0000084a <ExpTick>:

Explosions ExpTick(Explosions explosions) {	
     84a:	cf 92       	push	r12
     84c:	df 92       	push	r13
     84e:	ef 92       	push	r14
     850:	ff 92       	push	r15
     852:	0f 93       	push	r16
     854:	1f 93       	push	r17
     856:	cf 93       	push	r28
     858:	df 93       	push	r29
     85a:	cd b7       	in	r28, 0x3d	; 61
     85c:	de b7       	in	r29, 0x3e	; 62
     85e:	8c 01       	movw	r16, r24
	// Return if empty (Protection code)
	if (explosions.index == 0) {
     860:	c7 59       	subi	r28, 0x97	; 151
     862:	de 4f       	sbci	r29, 0xFE	; 254
     864:	88 81       	ld	r24, Y
     866:	c9 56       	subi	r28, 0x69	; 105
     868:	d1 40       	sbci	r29, 0x01	; 1
     86a:	81 11       	cpse	r24, r1
     86c:	0a c0       	rjmp	.+20     	; 0x882 <ExpTick+0x38>
		return explosions;
     86e:	80 e6       	ldi	r24, 0x60	; 96
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	fe 01       	movw	r30, r28
     874:	3b 96       	adiw	r30, 0x0b	; 11
     876:	d8 01       	movw	r26, r16
     878:	01 90       	ld	r0, Z+
     87a:	0d 92       	st	X+, r0
     87c:	01 97       	sbiw	r24, 0x01	; 1
     87e:	e1 f7       	brne	.-8      	; 0x878 <ExpTick+0x2e>
     880:	a7 c0       	rjmp	.+334    	; 0x9d0 <ExpTick+0x186>
	} 
	
	if (explosions.displayIndex >= explosions.index) {
     882:	c6 59       	subi	r28, 0x96	; 150
     884:	de 4f       	sbci	r29, 0xFE	; 254
     886:	98 81       	ld	r25, Y
     888:	ca 56       	subi	r28, 0x6A	; 106
     88a:	d1 40       	sbci	r29, 0x01	; 1
     88c:	98 17       	cp	r25, r24
     88e:	28 f0       	brcs	.+10     	; 0x89a <ExpTick+0x50>
		explosions.displayIndex = 0;
     890:	c6 59       	subi	r28, 0x96	; 150
     892:	de 4f       	sbci	r29, 0xFE	; 254
     894:	18 82       	st	Y, r1
     896:	ca 56       	subi	r28, 0x6A	; 106
     898:	d1 40       	sbci	r29, 0x01	; 1
	}
	
	if (displayBlank == 0)
     89a:	80 91 09 01 	lds	r24, 0x0109
     89e:	81 11       	cpse	r24, r1
     8a0:	12 c0       	rjmp	.+36     	; 0x8c6 <ExpTick+0x7c>
		d3_setMatrixColor(explosions.matricies[explosions.displayIndex].m, RED);
     8a2:	c6 59       	subi	r28, 0x96	; 150
     8a4:	de 4f       	sbci	r29, 0xFE	; 254
     8a6:	88 81       	ld	r24, Y
     8a8:	ca 56       	subi	r28, 0x6A	; 106
     8aa:	d1 40       	sbci	r29, 0x01	; 1
     8ac:	60 e0       	ldi	r22, 0x00	; 0
     8ae:	2b e0       	ldi	r18, 0x0B	; 11
     8b0:	30 e0       	ldi	r19, 0x00	; 0
     8b2:	2c 0f       	add	r18, r28
     8b4:	3d 1f       	adc	r19, r29
     8b6:	48 e0       	ldi	r20, 0x08	; 8
     8b8:	84 9f       	mul	r24, r20
     8ba:	20 0d       	add	r18, r0
     8bc:	31 1d       	adc	r19, r1
     8be:	11 24       	eor	r1, r1
     8c0:	c9 01       	movw	r24, r18
     8c2:	0b de       	rcall	.-1002   	; 0x4da <d3_setMatrixColor>
     8c4:	07 c0       	rjmp	.+14     	; 0x8d4 <ExpTick+0x8a>
	else if (displayBlank == 1)
     8c6:	81 30       	cpi	r24, 0x01	; 1
     8c8:	09 f0       	breq	.+2      	; 0x8cc <ExpTick+0x82>
     8ca:	79 c0       	rjmp	.+242    	; 0x9be <ExpTick+0x174>
		d3_setMatrixColor(blankMatrix.m, RED);
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	8b e2       	ldi	r24, 0x2B	; 43
     8d0:	91 e0       	ldi	r25, 0x01	; 1
     8d2:	03 de       	rcall	.-1018   	; 0x4da <d3_setMatrixColor>
	
	if (displayBlank == 0 && contClock >= (explosions.timeDuration[explosions.displayIndex] * 10)) {
     8d4:	80 91 09 01 	lds	r24, 0x0109
     8d8:	81 11       	cpse	r24, r1
     8da:	3c c0       	rjmp	.+120    	; 0x954 <ExpTick+0x10a>
     8dc:	c6 59       	subi	r28, 0x96	; 150
     8de:	de 4f       	sbci	r29, 0xFE	; 254
     8e0:	88 81       	ld	r24, Y
     8e2:	ca 56       	subi	r28, 0x6A	; 106
     8e4:	d1 40       	sbci	r29, 0x01	; 1
     8e6:	e6 e4       	ldi	r30, 0x46	; 70
     8e8:	f1 e0       	ldi	r31, 0x01	; 1
     8ea:	ec 0f       	add	r30, r28
     8ec:	fd 1f       	adc	r31, r29
     8ee:	e8 0f       	add	r30, r24
     8f0:	f1 1d       	adc	r31, r1
     8f2:	20 81       	ld	r18, Z
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	a9 01       	movw	r20, r18
     8f8:	44 0f       	add	r20, r20
     8fa:	55 1f       	adc	r21, r21
     8fc:	22 0f       	add	r18, r18
     8fe:	33 1f       	adc	r19, r19
     900:	22 0f       	add	r18, r18
     902:	33 1f       	adc	r19, r19
     904:	22 0f       	add	r18, r18
     906:	33 1f       	adc	r19, r19
     908:	42 0f       	add	r20, r18
     90a:	53 1f       	adc	r21, r19
     90c:	05 2e       	mov	r0, r21
     90e:	00 0c       	add	r0, r0
     910:	66 0b       	sbc	r22, r22
     912:	77 0b       	sbc	r23, r23
     914:	c0 90 0b 01 	lds	r12, 0x010B
     918:	d0 90 0c 01 	lds	r13, 0x010C
     91c:	e0 90 0d 01 	lds	r14, 0x010D
     920:	f0 90 0e 01 	lds	r15, 0x010E
     924:	c4 16       	cp	r12, r20
     926:	d5 06       	cpc	r13, r21
     928:	e6 06       	cpc	r14, r22
     92a:	f7 06       	cpc	r15, r23
     92c:	08 f4       	brcc	.+2      	; 0x930 <ExpTick+0xe6>
     92e:	47 c0       	rjmp	.+142    	; 0x9be <ExpTick+0x174>
		displayBlank = 1;
     930:	91 e0       	ldi	r25, 0x01	; 1
     932:	90 93 09 01 	sts	0x0109, r25
		explosions.displayIndex++;
     936:	8f 5f       	subi	r24, 0xFF	; 255
     938:	c6 59       	subi	r28, 0x96	; 150
     93a:	de 4f       	sbci	r29, 0xFE	; 254
     93c:	88 83       	st	Y, r24
     93e:	ca 56       	subi	r28, 0x6A	; 106
     940:	d1 40       	sbci	r29, 0x01	; 1
		contClock = 0;
     942:	10 92 0b 01 	sts	0x010B, r1
     946:	10 92 0c 01 	sts	0x010C, r1
     94a:	10 92 0d 01 	sts	0x010D, r1
     94e:	10 92 0e 01 	sts	0x010E, r1
     952:	35 c0       	rjmp	.+106    	; 0x9be <ExpTick+0x174>
	} else if (displayBlank == 1 && contClock >= (explosions.timeBetween[explosions.displayIndex] * 10)) {
     954:	81 30       	cpi	r24, 0x01	; 1
     956:	99 f5       	brne	.+102    	; 0x9be <ExpTick+0x174>
     958:	c6 59       	subi	r28, 0x96	; 150
     95a:	de 4f       	sbci	r29, 0xFE	; 254
     95c:	88 81       	ld	r24, Y
     95e:	ca 56       	subi	r28, 0x6A	; 106
     960:	d1 40       	sbci	r29, 0x01	; 1
     962:	e3 e2       	ldi	r30, 0x23	; 35
     964:	f1 e0       	ldi	r31, 0x01	; 1
     966:	ec 0f       	add	r30, r28
     968:	fd 1f       	adc	r31, r29
     96a:	e8 0f       	add	r30, r24
     96c:	f1 1d       	adc	r31, r1
     96e:	20 81       	ld	r18, Z
     970:	30 e0       	ldi	r19, 0x00	; 0
     972:	c9 01       	movw	r24, r18
     974:	88 0f       	add	r24, r24
     976:	99 1f       	adc	r25, r25
     978:	22 0f       	add	r18, r18
     97a:	33 1f       	adc	r19, r19
     97c:	22 0f       	add	r18, r18
     97e:	33 1f       	adc	r19, r19
     980:	22 0f       	add	r18, r18
     982:	33 1f       	adc	r19, r19
     984:	82 0f       	add	r24, r18
     986:	93 1f       	adc	r25, r19
     988:	09 2e       	mov	r0, r25
     98a:	00 0c       	add	r0, r0
     98c:	aa 0b       	sbc	r26, r26
     98e:	bb 0b       	sbc	r27, r27
     990:	40 91 0b 01 	lds	r20, 0x010B
     994:	50 91 0c 01 	lds	r21, 0x010C
     998:	60 91 0d 01 	lds	r22, 0x010D
     99c:	70 91 0e 01 	lds	r23, 0x010E
     9a0:	48 17       	cp	r20, r24
     9a2:	59 07       	cpc	r21, r25
     9a4:	6a 07       	cpc	r22, r26
     9a6:	7b 07       	cpc	r23, r27
     9a8:	50 f0       	brcs	.+20     	; 0x9be <ExpTick+0x174>
		displayBlank = 0;
     9aa:	10 92 09 01 	sts	0x0109, r1
		contClock = 0;
     9ae:	10 92 0b 01 	sts	0x010B, r1
     9b2:	10 92 0c 01 	sts	0x010C, r1
     9b6:	10 92 0d 01 	sts	0x010D, r1
     9ba:	10 92 0e 01 	sts	0x010E, r1
	}
	
	return explosions;
     9be:	80 e6       	ldi	r24, 0x60	; 96
     9c0:	91 e0       	ldi	r25, 0x01	; 1
     9c2:	fe 01       	movw	r30, r28
     9c4:	3b 96       	adiw	r30, 0x0b	; 11
     9c6:	d8 01       	movw	r26, r16
     9c8:	01 90       	ld	r0, Z+
     9ca:	0d 92       	st	X+, r0
     9cc:	01 97       	sbiw	r24, 0x01	; 1
     9ce:	e1 f7       	brne	.-8      	; 0x9c8 <ExpTick+0x17e>
     9d0:	c8 01       	movw	r24, r16
     9d2:	df 91       	pop	r29
     9d4:	cf 91       	pop	r28
     9d6:	1f 91       	pop	r17
     9d8:	0f 91       	pop	r16
     9da:	ff 90       	pop	r15
     9dc:	ef 90       	pop	r14
     9de:	df 90       	pop	r13
     9e0:	cf 90       	pop	r12
     9e2:	08 95       	ret

000009e4 <main>:
SingleMatrix matrix;
SingleMatrix matrix2;
SingleMatrix blankMatrix;


int main(void) {
     9e4:	cf 93       	push	r28
     9e6:	df 93       	push	r29
     9e8:	cd b7       	in	r28, 0x3d	; 61
     9ea:	de b7       	in	r29, 0x3e	; 62
     9ec:	c8 5a       	subi	r28, 0xA8	; 168
     9ee:	d0 43       	sbci	r29, 0x30	; 48
     9f0:	0f b6       	in	r0, 0x3f	; 63
     9f2:	f8 94       	cli
     9f4:	de bf       	out	0x3e, r29	; 62
     9f6:	0f be       	out	0x3f, r0	; 63
     9f8:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; PORTB = 0x00;
     9fa:	8f ef       	ldi	r24, 0xFF	; 255
     9fc:	84 b9       	out	0x04, r24	; 4
     9fe:	15 b8       	out	0x05, r1	; 5
	DDRD = 0xFF; PORTD = 0x00;
     a00:	8a b9       	out	0x0a, r24	; 10
     a02:	1b b8       	out	0x0b, r1	; 11
	DDRC = 0xF0; PORTC = 0x0F;
     a04:	80 ef       	ldi	r24, 0xF0	; 240
     a06:	87 b9       	out	0x07, r24	; 7
     a08:	8f e0       	ldi	r24, 0x0F	; 15
     a0a:	88 b9       	out	0x08, r24	; 8
	
	initTasks();
     a0c:	a6 db       	rcall	.-2228   	; 0x15a <initTasks>
	}
}

// Set TimerISR() to tick every M ms
void TimerSet(unsigned long M) {
	_avr_timer_M = M;
     a0e:	81 e0       	ldi	r24, 0x01	; 1
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	a0 e0       	ldi	r26, 0x00	; 0
     a14:	b0 e0       	ldi	r27, 0x00	; 0
     a16:	80 93 02 01 	sts	0x0102, r24
     a1a:	90 93 03 01 	sts	0x0103, r25
     a1e:	a0 93 04 01 	sts	0x0104, r26
     a22:	b0 93 05 01 	sts	0x0105, r27
	_avr_timer_cntcurr = _avr_timer_M;
     a26:	80 93 0f 01 	sts	0x010F, r24
     a2a:	90 93 10 01 	sts	0x0110, r25
     a2e:	a0 93 11 01 	sts	0x0111, r26
     a32:	b0 93 12 01 	sts	0x0112, r27
	
	TimerSet(1);
	TimerOn();
     a36:	b8 db       	rcall	.-2192   	; 0x1a8 <TimerOn>
	
	matrix = clearSingleMatrix(matrix);
     a38:	20 91 33 01 	lds	r18, 0x0133
     a3c:	30 91 34 01 	lds	r19, 0x0134
     a40:	40 91 35 01 	lds	r20, 0x0135
     a44:	50 91 36 01 	lds	r21, 0x0136
     a48:	60 91 37 01 	lds	r22, 0x0137
     a4c:	70 91 38 01 	lds	r23, 0x0138
     a50:	80 91 39 01 	lds	r24, 0x0139
     a54:	90 91 3a 01 	lds	r25, 0x013A
     a58:	57 dc       	rcall	.-1874   	; 0x308 <clearSingleMatrix>
     a5a:	03 e3       	ldi	r16, 0x33	; 51
     a5c:	11 e0       	ldi	r17, 0x01	; 1
     a5e:	f8 01       	movw	r30, r16
     a60:	20 83       	st	Z, r18
     a62:	31 83       	std	Z+1, r19	; 0x01
     a64:	42 83       	std	Z+2, r20	; 0x02
     a66:	53 83       	std	Z+3, r21	; 0x03
     a68:	64 83       	std	Z+4, r22	; 0x04
     a6a:	75 83       	std	Z+5, r23	; 0x05
     a6c:	86 83       	std	Z+6, r24	; 0x06
     a6e:	97 83       	std	Z+7, r25	; 0x07
	explosions = initExplosions(explosions);
	explosions = pushExplosion(explosions, matrix, 350, 200);
	explosions = pushExplosion(explosions, matrix2, 350, 200);
	*/
	
	blankMatrix = clearSingleMatrix(blankMatrix);
     a70:	20 91 2b 01 	lds	r18, 0x012B
     a74:	30 91 2c 01 	lds	r19, 0x012C
     a78:	40 91 2d 01 	lds	r20, 0x012D
     a7c:	50 91 2e 01 	lds	r21, 0x012E
     a80:	60 91 2f 01 	lds	r22, 0x012F
     a84:	70 91 30 01 	lds	r23, 0x0130
     a88:	80 91 31 01 	lds	r24, 0x0131
     a8c:	90 91 32 01 	lds	r25, 0x0132
     a90:	3b dc       	rcall	.-1930   	; 0x308 <clearSingleMatrix>
     a92:	eb e2       	ldi	r30, 0x2B	; 43
     a94:	f1 e0       	ldi	r31, 0x01	; 1
     a96:	20 83       	st	Z, r18
     a98:	31 83       	std	Z+1, r19	; 0x01
     a9a:	42 83       	std	Z+2, r20	; 0x02
     a9c:	53 83       	std	Z+3, r21	; 0x03
     a9e:	64 83       	std	Z+4, r22	; 0x04
     aa0:	75 83       	std	Z+5, r23	; 0x05
     aa2:	86 83       	std	Z+6, r24	; 0x06
     aa4:	97 83       	std	Z+7, r25	; 0x07
	
	explosions = initExplosions(explosions);
     aa6:	8d b7       	in	r24, 0x3d	; 61
     aa8:	9e b7       	in	r25, 0x3e	; 62
     aaa:	80 56       	subi	r24, 0x60	; 96
     aac:	91 40       	sbci	r25, 0x01	; 1
     aae:	0f b6       	in	r0, 0x3f	; 63
     ab0:	f8 94       	cli
     ab2:	9e bf       	out	0x3e, r25	; 62
     ab4:	0f be       	out	0x3f, r0	; 63
     ab6:	8d bf       	out	0x3d, r24	; 61
     ab8:	ad b7       	in	r26, 0x3d	; 61
     aba:	be b7       	in	r27, 0x3e	; 62
     abc:	11 96       	adiw	r26, 0x01	; 1
     abe:	80 e6       	ldi	r24, 0x60	; 96
     ac0:	91 e0       	ldi	r25, 0x01	; 1
     ac2:	eb e3       	ldi	r30, 0x3B	; 59
     ac4:	f1 e0       	ldi	r31, 0x01	; 1
     ac6:	01 90       	ld	r0, Z+
     ac8:	0d 92       	st	X+, r0
     aca:	01 97       	sbiw	r24, 0x01	; 1
     acc:	e1 f7       	brne	.-8      	; 0xac6 <main+0xe2>
     ace:	ce 01       	movw	r24, r28
     ad0:	87 5b       	subi	r24, 0xB7	; 183
     ad2:	90 4d       	sbci	r25, 0xD0	; 208
     ad4:	41 de       	rcall	.-894    	; 0x758 <initExplosions>
     ad6:	80 e6       	ldi	r24, 0x60	; 96
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	fe 01       	movw	r30, r28
     adc:	e7 5b       	subi	r30, 0xB7	; 183
     ade:	f0 4d       	sbci	r31, 0xD0	; 208
     ae0:	ab e3       	ldi	r26, 0x3B	; 59
     ae2:	b1 e0       	ldi	r27, 0x01	; 1
     ae4:	01 90       	ld	r0, Z+
     ae6:	0d 92       	st	X+, r0
     ae8:	01 97       	sbiw	r24, 0x01	; 1
     aea:	e1 f7       	brne	.-8      	; 0xae4 <main+0x100>
	
	matrix = clearSingleMatrix(matrix);
     aec:	0f b6       	in	r0, 0x3f	; 63
     aee:	f8 94       	cli
     af0:	de bf       	out	0x3e, r29	; 62
     af2:	0f be       	out	0x3f, r0	; 63
     af4:	cd bf       	out	0x3d, r28	; 61
     af6:	20 91 33 01 	lds	r18, 0x0133
     afa:	30 91 34 01 	lds	r19, 0x0134
     afe:	40 91 35 01 	lds	r20, 0x0135
     b02:	50 91 36 01 	lds	r21, 0x0136
     b06:	60 91 37 01 	lds	r22, 0x0137
     b0a:	70 91 38 01 	lds	r23, 0x0138
     b0e:	80 91 39 01 	lds	r24, 0x0139
     b12:	90 91 3a 01 	lds	r25, 0x013A
     b16:	f8 db       	rcall	.-2064   	; 0x308 <clearSingleMatrix>
     b18:	f8 01       	movw	r30, r16
     b1a:	20 83       	st	Z, r18
     b1c:	42 83       	std	Z+2, r20	; 0x02
     b1e:	53 83       	std	Z+3, r21	; 0x03
     b20:	64 83       	std	Z+4, r22	; 0x04
     b22:	75 83       	std	Z+5, r23	; 0x05
     b24:	97 83       	std	Z+7, r25	; 0x07
}

unsigned char SetBit(unsigned char x, unsigned char k, unsigned char b) {
	return (b ?  (x | (0x01 << k))  :  (x & ~(0x01 << k)));
     b26:	3e 7f       	andi	r19, 0xFE	; 254
	matrix.m[1] = SetBit(matrix.m[1], 0, 0);
     b28:	31 83       	std	Z+1, r19	; 0x01
     b2a:	8e 7f       	andi	r24, 0xFE	; 254
	matrix.m[6] = SetBit(matrix.m[6], 0, 0);
     b2c:	86 83       	std	Z+6, r24	; 0x06
     b2e:	80 e6       	ldi	r24, 0x60	; 96
     b30:	91 e0       	ldi	r25, 0x01	; 1
     b32:	eb e3       	ldi	r30, 0x3B	; 59
     b34:	f1 e0       	ldi	r31, 0x01	; 1
     b36:	de 01       	movw	r26, r28
     b38:	af 59       	subi	r26, 0x9F	; 159
     b3a:	b2 4d       	sbci	r27, 0xD2	; 210
     b3c:	01 90       	ld	r0, Z+
     b3e:	0d 92       	st	X+, r0
     b40:	01 97       	sbiw	r24, 0x01	; 1
     b42:	e1 f7       	brne	.-8      	; 0xb3c <main+0x158>
     b44:	0f 2e       	mov	r0, r31
     b46:	f9 e9       	ldi	r31, 0x99	; 153
     b48:	ef 2e       	mov	r14, r31
     b4a:	f2 e0       	ldi	r31, 0x02	; 2
     b4c:	ff 2e       	mov	r15, r31
     b4e:	f0 2d       	mov	r31, r0
     b50:	f7 01       	movw	r30, r14
     b52:	80 81       	ld	r24, Z
     b54:	98 e0       	ldi	r25, 0x08	; 8
     b56:	f8 01       	movw	r30, r16
     b58:	de 01       	movw	r26, r28
     b5a:	af 5b       	subi	r26, 0xBF	; 191
     b5c:	b0 4d       	sbci	r27, 0xD0	; 208
     b5e:	01 90       	ld	r0, Z+
     b60:	0d 92       	st	X+, r0
     b62:	9a 95       	dec	r25
     b64:	e1 f7       	brne	.-8      	; 0xb5e <main+0x17a>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
     b66:	a1 e6       	ldi	r26, 0x61	; 97
     b68:	bd e2       	ldi	r27, 0x2D	; 45
     b6a:	ac 0f       	add	r26, r28
     b6c:	bd 1f       	adc	r27, r29
     b6e:	f8 e0       	ldi	r31, 0x08	; 8
     b70:	8f 9f       	mul	r24, r31
     b72:	a0 0d       	add	r26, r0
     b74:	b1 1d       	adc	r27, r1
     b76:	11 24       	eor	r1, r1
     b78:	98 e0       	ldi	r25, 0x08	; 8
     b7a:	fe 01       	movw	r30, r28
     b7c:	ef 5b       	subi	r30, 0xBF	; 191
     b7e:	f0 4d       	sbci	r31, 0xD0	; 208
     b80:	01 90       	ld	r0, Z+
     b82:	0d 92       	st	X+, r0
     b84:	9a 95       	dec	r25
     b86:	e1 f7       	brne	.-8      	; 0xb80 <main+0x19c>
	explosions.timeBetween[explosions.index] = a;
     b88:	21 e6       	ldi	r18, 0x61	; 97
     b8a:	3d e2       	ldi	r19, 0x2D	; 45
     b8c:	2c 0f       	add	r18, r28
     b8e:	3d 1f       	adc	r19, r29
     b90:	28 0f       	add	r18, r24
     b92:	31 1d       	adc	r19, r1
     b94:	f9 01       	movw	r30, r18
     b96:	e8 5e       	subi	r30, 0xE8	; 232
     b98:	fe 4f       	sbci	r31, 0xFE	; 254
     b9a:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     b9c:	b3 96       	adiw	r30, 0x23	; 35
     b9e:	68 94       	set
     ba0:	dd 24       	eor	r13, r13
     ba2:	d1 f8       	bld	r13, 1
     ba4:	d0 82       	st	Z, r13
	explosions.index++;
     ba6:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
     ba8:	c1 54       	subi	r28, 0x41	; 65
     baa:	d1 4d       	sbci	r29, 0xD1	; 209
     bac:	88 83       	st	Y, r24
     bae:	cf 5b       	subi	r28, 0xBF	; 191
     bb0:	de 42       	sbci	r29, 0x2E	; 46
     bb2:	20 e6       	ldi	r18, 0x60	; 96
     bb4:	31 e0       	ldi	r19, 0x01	; 1
     bb6:	fe 01       	movw	r30, r28
     bb8:	ef 59       	subi	r30, 0x9F	; 159
     bba:	f2 4d       	sbci	r31, 0xD2	; 210
     bbc:	de 01       	movw	r26, r28
     bbe:	af 5f       	subi	r26, 0xFF	; 255
     bc0:	b3 4d       	sbci	r27, 0xD3	; 211
     bc2:	01 90       	ld	r0, Z+
     bc4:	0d 92       	st	X+, r0
     bc6:	21 50       	subi	r18, 0x01	; 1
     bc8:	30 40       	sbci	r19, 0x00	; 0
     bca:	d9 f7       	brne	.-10     	; 0xbc2 <main+0x1de>
	explosions = pushExplosion(explosions, matrix, 0, 2);
     bcc:	c1 5a       	subi	r28, 0xA1	; 161
     bce:	d2 4d       	sbci	r29, 0xD2	; 210
     bd0:	88 83       	st	Y, r24
     bd2:	cf 55       	subi	r28, 0x5F	; 95
     bd4:	dd 42       	sbci	r29, 0x2D	; 45
     bd6:	80 e6       	ldi	r24, 0x60	; 96
     bd8:	91 e0       	ldi	r25, 0x01	; 1
     bda:	fe 01       	movw	r30, r28
     bdc:	ef 5f       	subi	r30, 0xFF	; 255
     bde:	f3 4d       	sbci	r31, 0xD3	; 211
     be0:	ab e3       	ldi	r26, 0x3B	; 59
     be2:	b1 e0       	ldi	r27, 0x01	; 1
     be4:	01 90       	ld	r0, Z+
     be6:	0d 92       	st	X+, r0
     be8:	01 97       	sbiw	r24, 0x01	; 1
     bea:	e1 f7       	brne	.-8      	; 0xbe4 <main+0x200>
	
	matrix = clearSingleMatrix(matrix);
     bec:	20 91 33 01 	lds	r18, 0x0133
     bf0:	30 91 34 01 	lds	r19, 0x0134
     bf4:	40 91 35 01 	lds	r20, 0x0135
     bf8:	50 91 36 01 	lds	r21, 0x0136
     bfc:	60 91 37 01 	lds	r22, 0x0137
     c00:	70 91 38 01 	lds	r23, 0x0138
     c04:	80 91 39 01 	lds	r24, 0x0139
     c08:	90 91 3a 01 	lds	r25, 0x013A
     c0c:	7d db       	rcall	.-2310   	; 0x308 <clearSingleMatrix>
     c0e:	f8 01       	movw	r30, r16
     c10:	20 83       	st	Z, r18
     c12:	42 83       	std	Z+2, r20	; 0x02
     c14:	53 83       	std	Z+3, r21	; 0x03
     c16:	64 83       	std	Z+4, r22	; 0x04
     c18:	75 83       	std	Z+5, r23	; 0x05
     c1a:	97 83       	std	Z+7, r25	; 0x07
     c1c:	3d 7f       	andi	r19, 0xFD	; 253
	matrix.m[1] = SetBit(matrix.m[1], 1, 0);
     c1e:	31 83       	std	Z+1, r19	; 0x01
     c20:	8d 7f       	andi	r24, 0xFD	; 253
	matrix.m[6] = SetBit(matrix.m[6], 1, 0);
     c22:	86 83       	std	Z+6, r24	; 0x06
     c24:	80 e6       	ldi	r24, 0x60	; 96
     c26:	91 e0       	ldi	r25, 0x01	; 1
     c28:	eb e3       	ldi	r30, 0x3B	; 59
     c2a:	f1 e0       	ldi	r31, 0x01	; 1
     c2c:	de 01       	movw	r26, r28
     c2e:	af 55       	subi	r26, 0x5F	; 95
     c30:	b5 4d       	sbci	r27, 0xD5	; 213
     c32:	01 90       	ld	r0, Z+
     c34:	0d 92       	st	X+, r0
     c36:	01 97       	sbiw	r24, 0x01	; 1
     c38:	e1 f7       	brne	.-8      	; 0xc32 <main+0x24e>
     c3a:	f7 01       	movw	r30, r14
     c3c:	80 81       	ld	r24, Z
     c3e:	98 e0       	ldi	r25, 0x08	; 8
     c40:	f8 01       	movw	r30, r16
     c42:	de 01       	movw	r26, r28
     c44:	a7 5c       	subi	r26, 0xC7	; 199
     c46:	b0 4d       	sbci	r27, 0xD0	; 208
     c48:	01 90       	ld	r0, Z+
     c4a:	0d 92       	st	X+, r0
     c4c:	9a 95       	dec	r25
     c4e:	e1 f7       	brne	.-8      	; 0xc48 <main+0x264>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
     c50:	a1 ea       	ldi	r26, 0xA1	; 161
     c52:	ba e2       	ldi	r27, 0x2A	; 42
     c54:	ac 0f       	add	r26, r28
     c56:	bd 1f       	adc	r27, r29
     c58:	f8 e0       	ldi	r31, 0x08	; 8
     c5a:	8f 9f       	mul	r24, r31
     c5c:	a0 0d       	add	r26, r0
     c5e:	b1 1d       	adc	r27, r1
     c60:	11 24       	eor	r1, r1
     c62:	98 e0       	ldi	r25, 0x08	; 8
     c64:	fe 01       	movw	r30, r28
     c66:	e7 5c       	subi	r30, 0xC7	; 199
     c68:	f0 4d       	sbci	r31, 0xD0	; 208
     c6a:	01 90       	ld	r0, Z+
     c6c:	0d 92       	st	X+, r0
     c6e:	9a 95       	dec	r25
     c70:	e1 f7       	brne	.-8      	; 0xc6a <main+0x286>
	explosions.timeBetween[explosions.index] = a;
     c72:	21 ea       	ldi	r18, 0xA1	; 161
     c74:	3a e2       	ldi	r19, 0x2A	; 42
     c76:	2c 0f       	add	r18, r28
     c78:	3d 1f       	adc	r19, r29
     c7a:	28 0f       	add	r18, r24
     c7c:	31 1d       	adc	r19, r1
     c7e:	f9 01       	movw	r30, r18
     c80:	e8 5e       	subi	r30, 0xE8	; 232
     c82:	fe 4f       	sbci	r31, 0xFE	; 254
     c84:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     c86:	b3 96       	adiw	r30, 0x23	; 35
     c88:	d0 82       	st	Z, r13
	explosions.index++;
     c8a:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
     c8c:	c1 50       	subi	r28, 0x01	; 1
     c8e:	d4 4d       	sbci	r29, 0xD4	; 212
     c90:	88 83       	st	Y, r24
     c92:	cf 5f       	subi	r28, 0xFF	; 255
     c94:	db 42       	sbci	r29, 0x2B	; 43
     c96:	20 e6       	ldi	r18, 0x60	; 96
     c98:	31 e0       	ldi	r19, 0x01	; 1
     c9a:	fe 01       	movw	r30, r28
     c9c:	ef 55       	subi	r30, 0x5F	; 95
     c9e:	f5 4d       	sbci	r31, 0xD5	; 213
     ca0:	de 01       	movw	r26, r28
     ca2:	af 5b       	subi	r26, 0xBF	; 191
     ca4:	b6 4d       	sbci	r27, 0xD6	; 214
     ca6:	01 90       	ld	r0, Z+
     ca8:	0d 92       	st	X+, r0
     caa:	21 50       	subi	r18, 0x01	; 1
     cac:	30 40       	sbci	r19, 0x00	; 0
     cae:	d9 f7       	brne	.-10     	; 0xca6 <main+0x2c2>
	explosions = pushExplosion(explosions, matrix, 0, 2);
     cb0:	c1 56       	subi	r28, 0x61	; 97
     cb2:	d5 4d       	sbci	r29, 0xD5	; 213
     cb4:	88 83       	st	Y, r24
     cb6:	cf 59       	subi	r28, 0x9F	; 159
     cb8:	da 42       	sbci	r29, 0x2A	; 42
     cba:	80 e6       	ldi	r24, 0x60	; 96
     cbc:	91 e0       	ldi	r25, 0x01	; 1
     cbe:	fe 01       	movw	r30, r28
     cc0:	ef 5b       	subi	r30, 0xBF	; 191
     cc2:	f6 4d       	sbci	r31, 0xD6	; 214
     cc4:	ab e3       	ldi	r26, 0x3B	; 59
     cc6:	b1 e0       	ldi	r27, 0x01	; 1
     cc8:	01 90       	ld	r0, Z+
     cca:	0d 92       	st	X+, r0
     ccc:	01 97       	sbiw	r24, 0x01	; 1
     cce:	e1 f7       	brne	.-8      	; 0xcc8 <main+0x2e4>
	
	matrix = clearSingleMatrix(matrix);
     cd0:	20 91 33 01 	lds	r18, 0x0133
     cd4:	30 91 34 01 	lds	r19, 0x0134
     cd8:	40 91 35 01 	lds	r20, 0x0135
     cdc:	50 91 36 01 	lds	r21, 0x0136
     ce0:	60 91 37 01 	lds	r22, 0x0137
     ce4:	70 91 38 01 	lds	r23, 0x0138
     ce8:	80 91 39 01 	lds	r24, 0x0139
     cec:	90 91 3a 01 	lds	r25, 0x013A
     cf0:	0b db       	rcall	.-2538   	; 0x308 <clearSingleMatrix>
     cf2:	f8 01       	movw	r30, r16
     cf4:	20 83       	st	Z, r18
     cf6:	42 83       	std	Z+2, r20	; 0x02
     cf8:	53 83       	std	Z+3, r21	; 0x03
     cfa:	64 83       	std	Z+4, r22	; 0x04
     cfc:	75 83       	std	Z+5, r23	; 0x05
     cfe:	97 83       	std	Z+7, r25	; 0x07
     d00:	3b 7f       	andi	r19, 0xFB	; 251
	matrix.m[1] = SetBit(matrix.m[1], 2, 0);
     d02:	31 83       	std	Z+1, r19	; 0x01
     d04:	8b 7f       	andi	r24, 0xFB	; 251
	matrix.m[6] = SetBit(matrix.m[6], 2, 0);
     d06:	86 83       	std	Z+6, r24	; 0x06
     d08:	80 e6       	ldi	r24, 0x60	; 96
     d0a:	91 e0       	ldi	r25, 0x01	; 1
     d0c:	eb e3       	ldi	r30, 0x3B	; 59
     d0e:	f1 e0       	ldi	r31, 0x01	; 1
     d10:	de 01       	movw	r26, r28
     d12:	af 51       	subi	r26, 0x1F	; 31
     d14:	b8 4d       	sbci	r27, 0xD8	; 216
     d16:	01 90       	ld	r0, Z+
     d18:	0d 92       	st	X+, r0
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	e1 f7       	brne	.-8      	; 0xd16 <main+0x332>
     d1e:	f7 01       	movw	r30, r14
     d20:	80 81       	ld	r24, Z
     d22:	98 e0       	ldi	r25, 0x08	; 8
     d24:	f8 01       	movw	r30, r16
     d26:	de 01       	movw	r26, r28
     d28:	af 5c       	subi	r26, 0xCF	; 207
     d2a:	b0 4d       	sbci	r27, 0xD0	; 208
     d2c:	01 90       	ld	r0, Z+
     d2e:	0d 92       	st	X+, r0
     d30:	9a 95       	dec	r25
     d32:	e1 f7       	brne	.-8      	; 0xd2c <main+0x348>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
     d34:	a1 ee       	ldi	r26, 0xE1	; 225
     d36:	b7 e2       	ldi	r27, 0x27	; 39
     d38:	ac 0f       	add	r26, r28
     d3a:	bd 1f       	adc	r27, r29
     d3c:	f8 e0       	ldi	r31, 0x08	; 8
     d3e:	8f 9f       	mul	r24, r31
     d40:	a0 0d       	add	r26, r0
     d42:	b1 1d       	adc	r27, r1
     d44:	11 24       	eor	r1, r1
     d46:	98 e0       	ldi	r25, 0x08	; 8
     d48:	fe 01       	movw	r30, r28
     d4a:	ef 5c       	subi	r30, 0xCF	; 207
     d4c:	f0 4d       	sbci	r31, 0xD0	; 208
     d4e:	01 90       	ld	r0, Z+
     d50:	0d 92       	st	X+, r0
     d52:	9a 95       	dec	r25
     d54:	e1 f7       	brne	.-8      	; 0xd4e <main+0x36a>
	explosions.timeBetween[explosions.index] = a;
     d56:	21 ee       	ldi	r18, 0xE1	; 225
     d58:	37 e2       	ldi	r19, 0x27	; 39
     d5a:	2c 0f       	add	r18, r28
     d5c:	3d 1f       	adc	r19, r29
     d5e:	28 0f       	add	r18, r24
     d60:	31 1d       	adc	r19, r1
     d62:	f9 01       	movw	r30, r18
     d64:	e8 5e       	subi	r30, 0xE8	; 232
     d66:	fe 4f       	sbci	r31, 0xFE	; 254
     d68:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     d6a:	b3 96       	adiw	r30, 0x23	; 35
     d6c:	d0 82       	st	Z, r13
	explosions.index++;
     d6e:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
     d70:	c1 5c       	subi	r28, 0xC1	; 193
     d72:	d6 4d       	sbci	r29, 0xD6	; 214
     d74:	88 83       	st	Y, r24
     d76:	cf 53       	subi	r28, 0x3F	; 63
     d78:	d9 42       	sbci	r29, 0x29	; 41
     d7a:	20 e6       	ldi	r18, 0x60	; 96
     d7c:	31 e0       	ldi	r19, 0x01	; 1
     d7e:	fe 01       	movw	r30, r28
     d80:	ef 51       	subi	r30, 0x1F	; 31
     d82:	f8 4d       	sbci	r31, 0xD8	; 216
     d84:	de 01       	movw	r26, r28
     d86:	af 57       	subi	r26, 0x7F	; 127
     d88:	b9 4d       	sbci	r27, 0xD9	; 217
     d8a:	01 90       	ld	r0, Z+
     d8c:	0d 92       	st	X+, r0
     d8e:	21 50       	subi	r18, 0x01	; 1
     d90:	30 40       	sbci	r19, 0x00	; 0
     d92:	d9 f7       	brne	.-10     	; 0xd8a <main+0x3a6>
	explosions = pushExplosion(explosions, matrix, 0, 2);
     d94:	c1 52       	subi	r28, 0x21	; 33
     d96:	d8 4d       	sbci	r29, 0xD8	; 216
     d98:	88 83       	st	Y, r24
     d9a:	cf 5d       	subi	r28, 0xDF	; 223
     d9c:	d7 42       	sbci	r29, 0x27	; 39
     d9e:	80 e6       	ldi	r24, 0x60	; 96
     da0:	91 e0       	ldi	r25, 0x01	; 1
     da2:	fe 01       	movw	r30, r28
     da4:	ef 57       	subi	r30, 0x7F	; 127
     da6:	f9 4d       	sbci	r31, 0xD9	; 217
     da8:	ab e3       	ldi	r26, 0x3B	; 59
     daa:	b1 e0       	ldi	r27, 0x01	; 1
     dac:	01 90       	ld	r0, Z+
     dae:	0d 92       	st	X+, r0
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	e1 f7       	brne	.-8      	; 0xdac <main+0x3c8>
	
	matrix = clearSingleMatrix(matrix);
     db4:	20 91 33 01 	lds	r18, 0x0133
     db8:	30 91 34 01 	lds	r19, 0x0134
     dbc:	40 91 35 01 	lds	r20, 0x0135
     dc0:	50 91 36 01 	lds	r21, 0x0136
     dc4:	60 91 37 01 	lds	r22, 0x0137
     dc8:	70 91 38 01 	lds	r23, 0x0138
     dcc:	80 91 39 01 	lds	r24, 0x0139
     dd0:	90 91 3a 01 	lds	r25, 0x013A
     dd4:	99 da       	rcall	.-2766   	; 0x308 <clearSingleMatrix>
     dd6:	f8 01       	movw	r30, r16
     dd8:	20 83       	st	Z, r18
     dda:	42 83       	std	Z+2, r20	; 0x02
     ddc:	53 83       	std	Z+3, r21	; 0x03
     dde:	64 83       	std	Z+4, r22	; 0x04
     de0:	75 83       	std	Z+5, r23	; 0x05
     de2:	97 83       	std	Z+7, r25	; 0x07
     de4:	37 7f       	andi	r19, 0xF7	; 247
	matrix.m[1] = SetBit(matrix.m[1], 3, 0);
     de6:	31 83       	std	Z+1, r19	; 0x01
     de8:	87 7f       	andi	r24, 0xF7	; 247
	matrix.m[6] = SetBit(matrix.m[6], 3, 0);
     dea:	86 83       	std	Z+6, r24	; 0x06
     dec:	80 e6       	ldi	r24, 0x60	; 96
     dee:	91 e0       	ldi	r25, 0x01	; 1
     df0:	eb e3       	ldi	r30, 0x3B	; 59
     df2:	f1 e0       	ldi	r31, 0x01	; 1
     df4:	de 01       	movw	r26, r28
     df6:	af 5d       	subi	r26, 0xDF	; 223
     df8:	ba 4d       	sbci	r27, 0xDA	; 218
     dfa:	01 90       	ld	r0, Z+
     dfc:	0d 92       	st	X+, r0
     dfe:	01 97       	sbiw	r24, 0x01	; 1
     e00:	e1 f7       	brne	.-8      	; 0xdfa <main+0x416>
     e02:	f7 01       	movw	r30, r14
     e04:	80 81       	ld	r24, Z
     e06:	98 e0       	ldi	r25, 0x08	; 8
     e08:	f8 01       	movw	r30, r16
     e0a:	de 01       	movw	r26, r28
     e0c:	a7 5d       	subi	r26, 0xD7	; 215
     e0e:	b0 4d       	sbci	r27, 0xD0	; 208
     e10:	01 90       	ld	r0, Z+
     e12:	0d 92       	st	X+, r0
     e14:	9a 95       	dec	r25
     e16:	e1 f7       	brne	.-8      	; 0xe10 <main+0x42c>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
     e18:	a1 e2       	ldi	r26, 0x21	; 33
     e1a:	b5 e2       	ldi	r27, 0x25	; 37
     e1c:	ac 0f       	add	r26, r28
     e1e:	bd 1f       	adc	r27, r29
     e20:	f8 e0       	ldi	r31, 0x08	; 8
     e22:	8f 9f       	mul	r24, r31
     e24:	a0 0d       	add	r26, r0
     e26:	b1 1d       	adc	r27, r1
     e28:	11 24       	eor	r1, r1
     e2a:	98 e0       	ldi	r25, 0x08	; 8
     e2c:	fe 01       	movw	r30, r28
     e2e:	e7 5d       	subi	r30, 0xD7	; 215
     e30:	f0 4d       	sbci	r31, 0xD0	; 208
     e32:	01 90       	ld	r0, Z+
     e34:	0d 92       	st	X+, r0
     e36:	9a 95       	dec	r25
     e38:	e1 f7       	brne	.-8      	; 0xe32 <main+0x44e>
	explosions.timeBetween[explosions.index] = a;
     e3a:	21 e2       	ldi	r18, 0x21	; 33
     e3c:	35 e2       	ldi	r19, 0x25	; 37
     e3e:	2c 0f       	add	r18, r28
     e40:	3d 1f       	adc	r19, r29
     e42:	28 0f       	add	r18, r24
     e44:	31 1d       	adc	r19, r1
     e46:	f9 01       	movw	r30, r18
     e48:	e8 5e       	subi	r30, 0xE8	; 232
     e4a:	fe 4f       	sbci	r31, 0xFE	; 254
     e4c:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     e4e:	b3 96       	adiw	r30, 0x23	; 35
     e50:	d0 82       	st	Z, r13
	explosions.index++;
     e52:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
     e54:	c1 58       	subi	r28, 0x81	; 129
     e56:	d9 4d       	sbci	r29, 0xD9	; 217
     e58:	88 83       	st	Y, r24
     e5a:	cf 57       	subi	r28, 0x7F	; 127
     e5c:	d6 42       	sbci	r29, 0x26	; 38
     e5e:	20 e6       	ldi	r18, 0x60	; 96
     e60:	31 e0       	ldi	r19, 0x01	; 1
     e62:	fe 01       	movw	r30, r28
     e64:	ef 5d       	subi	r30, 0xDF	; 223
     e66:	fa 4d       	sbci	r31, 0xDA	; 218
     e68:	de 01       	movw	r26, r28
     e6a:	af 53       	subi	r26, 0x3F	; 63
     e6c:	bc 4d       	sbci	r27, 0xDC	; 220
     e6e:	01 90       	ld	r0, Z+
     e70:	0d 92       	st	X+, r0
     e72:	21 50       	subi	r18, 0x01	; 1
     e74:	30 40       	sbci	r19, 0x00	; 0
     e76:	d9 f7       	brne	.-10     	; 0xe6e <main+0x48a>
	explosions = pushExplosion(explosions, matrix, 0, 2);
     e78:	c1 5e       	subi	r28, 0xE1	; 225
     e7a:	da 4d       	sbci	r29, 0xDA	; 218
     e7c:	88 83       	st	Y, r24
     e7e:	cf 51       	subi	r28, 0x1F	; 31
     e80:	d5 42       	sbci	r29, 0x25	; 37
     e82:	80 e6       	ldi	r24, 0x60	; 96
     e84:	91 e0       	ldi	r25, 0x01	; 1
     e86:	fe 01       	movw	r30, r28
     e88:	ef 53       	subi	r30, 0x3F	; 63
     e8a:	fc 4d       	sbci	r31, 0xDC	; 220
     e8c:	ab e3       	ldi	r26, 0x3B	; 59
     e8e:	b1 e0       	ldi	r27, 0x01	; 1
     e90:	01 90       	ld	r0, Z+
     e92:	0d 92       	st	X+, r0
     e94:	01 97       	sbiw	r24, 0x01	; 1
     e96:	e1 f7       	brne	.-8      	; 0xe90 <main+0x4ac>
	
	matrix = clearSingleMatrix(matrix);
     e98:	20 91 33 01 	lds	r18, 0x0133
     e9c:	30 91 34 01 	lds	r19, 0x0134
     ea0:	40 91 35 01 	lds	r20, 0x0135
     ea4:	50 91 36 01 	lds	r21, 0x0136
     ea8:	60 91 37 01 	lds	r22, 0x0137
     eac:	70 91 38 01 	lds	r23, 0x0138
     eb0:	80 91 39 01 	lds	r24, 0x0139
     eb4:	90 91 3a 01 	lds	r25, 0x013A
     eb8:	27 da       	rcall	.-2994   	; 0x308 <clearSingleMatrix>
     eba:	f8 01       	movw	r30, r16
     ebc:	20 83       	st	Z, r18
     ebe:	42 83       	std	Z+2, r20	; 0x02
     ec0:	53 83       	std	Z+3, r21	; 0x03
     ec2:	64 83       	std	Z+4, r22	; 0x04
     ec4:	75 83       	std	Z+5, r23	; 0x05
     ec6:	97 83       	std	Z+7, r25	; 0x07
     ec8:	3f 7e       	andi	r19, 0xEF	; 239
	matrix.m[1] = SetBit(matrix.m[1], 4, 0);
     eca:	31 83       	std	Z+1, r19	; 0x01
     ecc:	8f 7e       	andi	r24, 0xEF	; 239
	matrix.m[6] = SetBit(matrix.m[6], 4, 0);
     ece:	86 83       	std	Z+6, r24	; 0x06
     ed0:	80 e6       	ldi	r24, 0x60	; 96
     ed2:	91 e0       	ldi	r25, 0x01	; 1
     ed4:	eb e3       	ldi	r30, 0x3B	; 59
     ed6:	f1 e0       	ldi	r31, 0x01	; 1
     ed8:	de 01       	movw	r26, r28
     eda:	af 59       	subi	r26, 0x9F	; 159
     edc:	bd 4d       	sbci	r27, 0xDD	; 221
     ede:	01 90       	ld	r0, Z+
     ee0:	0d 92       	st	X+, r0
     ee2:	01 97       	sbiw	r24, 0x01	; 1
     ee4:	e1 f7       	brne	.-8      	; 0xede <main+0x4fa>
     ee6:	f7 01       	movw	r30, r14
     ee8:	80 81       	ld	r24, Z
     eea:	98 e0       	ldi	r25, 0x08	; 8
     eec:	f8 01       	movw	r30, r16
     eee:	de 01       	movw	r26, r28
     ef0:	af 5d       	subi	r26, 0xDF	; 223
     ef2:	b0 4d       	sbci	r27, 0xD0	; 208
     ef4:	01 90       	ld	r0, Z+
     ef6:	0d 92       	st	X+, r0
     ef8:	9a 95       	dec	r25
     efa:	e1 f7       	brne	.-8      	; 0xef4 <main+0x510>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
     efc:	a1 e6       	ldi	r26, 0x61	; 97
     efe:	b2 e2       	ldi	r27, 0x22	; 34
     f00:	ac 0f       	add	r26, r28
     f02:	bd 1f       	adc	r27, r29
     f04:	f8 e0       	ldi	r31, 0x08	; 8
     f06:	8f 9f       	mul	r24, r31
     f08:	a0 0d       	add	r26, r0
     f0a:	b1 1d       	adc	r27, r1
     f0c:	11 24       	eor	r1, r1
     f0e:	98 e0       	ldi	r25, 0x08	; 8
     f10:	fe 01       	movw	r30, r28
     f12:	ef 5d       	subi	r30, 0xDF	; 223
     f14:	f0 4d       	sbci	r31, 0xD0	; 208
     f16:	01 90       	ld	r0, Z+
     f18:	0d 92       	st	X+, r0
     f1a:	9a 95       	dec	r25
     f1c:	e1 f7       	brne	.-8      	; 0xf16 <main+0x532>
	explosions.timeBetween[explosions.index] = a;
     f1e:	21 e6       	ldi	r18, 0x61	; 97
     f20:	32 e2       	ldi	r19, 0x22	; 34
     f22:	2c 0f       	add	r18, r28
     f24:	3d 1f       	adc	r19, r29
     f26:	28 0f       	add	r18, r24
     f28:	31 1d       	adc	r19, r1
     f2a:	f9 01       	movw	r30, r18
     f2c:	e8 5e       	subi	r30, 0xE8	; 232
     f2e:	fe 4f       	sbci	r31, 0xFE	; 254
     f30:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
     f32:	b3 96       	adiw	r30, 0x23	; 35
     f34:	d0 82       	st	Z, r13
	explosions.index++;
     f36:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
     f38:	c1 54       	subi	r28, 0x41	; 65
     f3a:	dc 4d       	sbci	r29, 0xDC	; 220
     f3c:	88 83       	st	Y, r24
     f3e:	cf 5b       	subi	r28, 0xBF	; 191
     f40:	d3 42       	sbci	r29, 0x23	; 35
     f42:	20 e6       	ldi	r18, 0x60	; 96
     f44:	31 e0       	ldi	r19, 0x01	; 1
     f46:	fe 01       	movw	r30, r28
     f48:	ef 59       	subi	r30, 0x9F	; 159
     f4a:	fd 4d       	sbci	r31, 0xDD	; 221
     f4c:	de 01       	movw	r26, r28
     f4e:	af 5f       	subi	r26, 0xFF	; 255
     f50:	be 4d       	sbci	r27, 0xDE	; 222
     f52:	01 90       	ld	r0, Z+
     f54:	0d 92       	st	X+, r0
     f56:	21 50       	subi	r18, 0x01	; 1
     f58:	30 40       	sbci	r19, 0x00	; 0
     f5a:	d9 f7       	brne	.-10     	; 0xf52 <main+0x56e>
	explosions = pushExplosion(explosions, matrix, 0, 2);
     f5c:	c1 5a       	subi	r28, 0xA1	; 161
     f5e:	dd 4d       	sbci	r29, 0xDD	; 221
     f60:	88 83       	st	Y, r24
     f62:	cf 55       	subi	r28, 0x5F	; 95
     f64:	d2 42       	sbci	r29, 0x22	; 34
     f66:	80 e6       	ldi	r24, 0x60	; 96
     f68:	91 e0       	ldi	r25, 0x01	; 1
     f6a:	fe 01       	movw	r30, r28
     f6c:	ef 5f       	subi	r30, 0xFF	; 255
     f6e:	fe 4d       	sbci	r31, 0xDE	; 222
     f70:	ab e3       	ldi	r26, 0x3B	; 59
     f72:	b1 e0       	ldi	r27, 0x01	; 1
     f74:	01 90       	ld	r0, Z+
     f76:	0d 92       	st	X+, r0
     f78:	01 97       	sbiw	r24, 0x01	; 1
     f7a:	e1 f7       	brne	.-8      	; 0xf74 <main+0x590>
	
	matrix = clearSingleMatrix(matrix);
     f7c:	20 91 33 01 	lds	r18, 0x0133
     f80:	30 91 34 01 	lds	r19, 0x0134
     f84:	40 91 35 01 	lds	r20, 0x0135
     f88:	50 91 36 01 	lds	r21, 0x0136
     f8c:	60 91 37 01 	lds	r22, 0x0137
     f90:	70 91 38 01 	lds	r23, 0x0138
     f94:	80 91 39 01 	lds	r24, 0x0139
     f98:	90 91 3a 01 	lds	r25, 0x013A
     f9c:	b5 d9       	rcall	.-3222   	; 0x308 <clearSingleMatrix>
     f9e:	f8 01       	movw	r30, r16
     fa0:	20 83       	st	Z, r18
     fa2:	42 83       	std	Z+2, r20	; 0x02
     fa4:	53 83       	std	Z+3, r21	; 0x03
     fa6:	64 83       	std	Z+4, r22	; 0x04
     fa8:	75 83       	std	Z+5, r23	; 0x05
     faa:	97 83       	std	Z+7, r25	; 0x07
     fac:	3f 7d       	andi	r19, 0xDF	; 223
	matrix.m[1] = SetBit(matrix.m[1], 5, 0);
     fae:	31 83       	std	Z+1, r19	; 0x01
     fb0:	8f 7d       	andi	r24, 0xDF	; 223
	matrix.m[6] = SetBit(matrix.m[6], 5, 0);
     fb2:	86 83       	std	Z+6, r24	; 0x06
     fb4:	80 e6       	ldi	r24, 0x60	; 96
     fb6:	91 e0       	ldi	r25, 0x01	; 1
     fb8:	eb e3       	ldi	r30, 0x3B	; 59
     fba:	f1 e0       	ldi	r31, 0x01	; 1
     fbc:	de 01       	movw	r26, r28
     fbe:	af 55       	subi	r26, 0x5F	; 95
     fc0:	b0 4e       	sbci	r27, 0xE0	; 224
     fc2:	01 90       	ld	r0, Z+
     fc4:	0d 92       	st	X+, r0
     fc6:	01 97       	sbiw	r24, 0x01	; 1
     fc8:	e1 f7       	brne	.-8      	; 0xfc2 <main+0x5de>
     fca:	f7 01       	movw	r30, r14
     fcc:	80 81       	ld	r24, Z
     fce:	98 e0       	ldi	r25, 0x08	; 8
     fd0:	f8 01       	movw	r30, r16
     fd2:	de 01       	movw	r26, r28
     fd4:	a7 5e       	subi	r26, 0xE7	; 231
     fd6:	b0 4d       	sbci	r27, 0xD0	; 208
     fd8:	01 90       	ld	r0, Z+
     fda:	0d 92       	st	X+, r0
     fdc:	9a 95       	dec	r25
     fde:	e1 f7       	brne	.-8      	; 0xfd8 <main+0x5f4>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
     fe0:	a1 ea       	ldi	r26, 0xA1	; 161
     fe2:	bf e1       	ldi	r27, 0x1F	; 31
     fe4:	ac 0f       	add	r26, r28
     fe6:	bd 1f       	adc	r27, r29
     fe8:	f8 e0       	ldi	r31, 0x08	; 8
     fea:	8f 9f       	mul	r24, r31
     fec:	a0 0d       	add	r26, r0
     fee:	b1 1d       	adc	r27, r1
     ff0:	11 24       	eor	r1, r1
     ff2:	98 e0       	ldi	r25, 0x08	; 8
     ff4:	fe 01       	movw	r30, r28
     ff6:	e7 5e       	subi	r30, 0xE7	; 231
     ff8:	f0 4d       	sbci	r31, 0xD0	; 208
     ffa:	01 90       	ld	r0, Z+
     ffc:	0d 92       	st	X+, r0
     ffe:	9a 95       	dec	r25
    1000:	e1 f7       	brne	.-8      	; 0xffa <main+0x616>
	explosions.timeBetween[explosions.index] = a;
    1002:	21 ea       	ldi	r18, 0xA1	; 161
    1004:	3f e1       	ldi	r19, 0x1F	; 31
    1006:	2c 0f       	add	r18, r28
    1008:	3d 1f       	adc	r19, r29
    100a:	28 0f       	add	r18, r24
    100c:	31 1d       	adc	r19, r1
    100e:	f9 01       	movw	r30, r18
    1010:	e8 5e       	subi	r30, 0xE8	; 232
    1012:	fe 4f       	sbci	r31, 0xFE	; 254
    1014:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1016:	b3 96       	adiw	r30, 0x23	; 35
    1018:	d0 82       	st	Z, r13
	explosions.index++;
    101a:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    101c:	c1 50       	subi	r28, 0x01	; 1
    101e:	df 4d       	sbci	r29, 0xDF	; 223
    1020:	88 83       	st	Y, r24
    1022:	cf 5f       	subi	r28, 0xFF	; 255
    1024:	d0 42       	sbci	r29, 0x20	; 32
    1026:	20 e6       	ldi	r18, 0x60	; 96
    1028:	31 e0       	ldi	r19, 0x01	; 1
    102a:	fe 01       	movw	r30, r28
    102c:	ef 55       	subi	r30, 0x5F	; 95
    102e:	f0 4e       	sbci	r31, 0xE0	; 224
    1030:	de 01       	movw	r26, r28
    1032:	af 5b       	subi	r26, 0xBF	; 191
    1034:	b1 4e       	sbci	r27, 0xE1	; 225
    1036:	01 90       	ld	r0, Z+
    1038:	0d 92       	st	X+, r0
    103a:	21 50       	subi	r18, 0x01	; 1
    103c:	30 40       	sbci	r19, 0x00	; 0
    103e:	d9 f7       	brne	.-10     	; 0x1036 <main+0x652>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    1040:	c1 56       	subi	r28, 0x61	; 97
    1042:	d0 4e       	sbci	r29, 0xE0	; 224
    1044:	88 83       	st	Y, r24
    1046:	cf 59       	subi	r28, 0x9F	; 159
    1048:	df 41       	sbci	r29, 0x1F	; 31
    104a:	80 e6       	ldi	r24, 0x60	; 96
    104c:	91 e0       	ldi	r25, 0x01	; 1
    104e:	fe 01       	movw	r30, r28
    1050:	ef 5b       	subi	r30, 0xBF	; 191
    1052:	f1 4e       	sbci	r31, 0xE1	; 225
    1054:	ab e3       	ldi	r26, 0x3B	; 59
    1056:	b1 e0       	ldi	r27, 0x01	; 1
    1058:	01 90       	ld	r0, Z+
    105a:	0d 92       	st	X+, r0
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	e1 f7       	brne	.-8      	; 0x1058 <main+0x674>
	
	matrix = clearSingleMatrix(matrix);
    1060:	20 91 33 01 	lds	r18, 0x0133
    1064:	30 91 34 01 	lds	r19, 0x0134
    1068:	40 91 35 01 	lds	r20, 0x0135
    106c:	50 91 36 01 	lds	r21, 0x0136
    1070:	60 91 37 01 	lds	r22, 0x0137
    1074:	70 91 38 01 	lds	r23, 0x0138
    1078:	80 91 39 01 	lds	r24, 0x0139
    107c:	90 91 3a 01 	lds	r25, 0x013A
    1080:	43 d9       	rcall	.-3450   	; 0x308 <clearSingleMatrix>
    1082:	f8 01       	movw	r30, r16
    1084:	20 83       	st	Z, r18
    1086:	42 83       	std	Z+2, r20	; 0x02
    1088:	53 83       	std	Z+3, r21	; 0x03
    108a:	64 83       	std	Z+4, r22	; 0x04
    108c:	75 83       	std	Z+5, r23	; 0x05
    108e:	97 83       	std	Z+7, r25	; 0x07
    1090:	3f 7b       	andi	r19, 0xBF	; 191
	matrix.m[1] = SetBit(matrix.m[1], 6, 0);
    1092:	31 83       	std	Z+1, r19	; 0x01
    1094:	8f 7b       	andi	r24, 0xBF	; 191
	matrix.m[6] = SetBit(matrix.m[6], 6, 0);
    1096:	86 83       	std	Z+6, r24	; 0x06
    1098:	80 e6       	ldi	r24, 0x60	; 96
    109a:	91 e0       	ldi	r25, 0x01	; 1
    109c:	eb e3       	ldi	r30, 0x3B	; 59
    109e:	f1 e0       	ldi	r31, 0x01	; 1
    10a0:	de 01       	movw	r26, r28
    10a2:	af 51       	subi	r26, 0x1F	; 31
    10a4:	b3 4e       	sbci	r27, 0xE3	; 227
    10a6:	01 90       	ld	r0, Z+
    10a8:	0d 92       	st	X+, r0
    10aa:	01 97       	sbiw	r24, 0x01	; 1
    10ac:	e1 f7       	brne	.-8      	; 0x10a6 <main+0x6c2>
    10ae:	f7 01       	movw	r30, r14
    10b0:	80 81       	ld	r24, Z
    10b2:	98 e0       	ldi	r25, 0x08	; 8
    10b4:	f8 01       	movw	r30, r16
    10b6:	de 01       	movw	r26, r28
    10b8:	af 5e       	subi	r26, 0xEF	; 239
    10ba:	b0 4d       	sbci	r27, 0xD0	; 208
    10bc:	01 90       	ld	r0, Z+
    10be:	0d 92       	st	X+, r0
    10c0:	9a 95       	dec	r25
    10c2:	e1 f7       	brne	.-8      	; 0x10bc <main+0x6d8>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    10c4:	a1 ee       	ldi	r26, 0xE1	; 225
    10c6:	bc e1       	ldi	r27, 0x1C	; 28
    10c8:	ac 0f       	add	r26, r28
    10ca:	bd 1f       	adc	r27, r29
    10cc:	f8 e0       	ldi	r31, 0x08	; 8
    10ce:	8f 9f       	mul	r24, r31
    10d0:	a0 0d       	add	r26, r0
    10d2:	b1 1d       	adc	r27, r1
    10d4:	11 24       	eor	r1, r1
    10d6:	98 e0       	ldi	r25, 0x08	; 8
    10d8:	fe 01       	movw	r30, r28
    10da:	ef 5e       	subi	r30, 0xEF	; 239
    10dc:	f0 4d       	sbci	r31, 0xD0	; 208
    10de:	01 90       	ld	r0, Z+
    10e0:	0d 92       	st	X+, r0
    10e2:	9a 95       	dec	r25
    10e4:	e1 f7       	brne	.-8      	; 0x10de <main+0x6fa>
	explosions.timeBetween[explosions.index] = a;
    10e6:	21 ee       	ldi	r18, 0xE1	; 225
    10e8:	3c e1       	ldi	r19, 0x1C	; 28
    10ea:	2c 0f       	add	r18, r28
    10ec:	3d 1f       	adc	r19, r29
    10ee:	28 0f       	add	r18, r24
    10f0:	31 1d       	adc	r19, r1
    10f2:	f9 01       	movw	r30, r18
    10f4:	e8 5e       	subi	r30, 0xE8	; 232
    10f6:	fe 4f       	sbci	r31, 0xFE	; 254
    10f8:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    10fa:	b3 96       	adiw	r30, 0x23	; 35
    10fc:	d0 82       	st	Z, r13
	explosions.index++;
    10fe:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    1100:	c1 5c       	subi	r28, 0xC1	; 193
    1102:	d1 4e       	sbci	r29, 0xE1	; 225
    1104:	88 83       	st	Y, r24
    1106:	cf 53       	subi	r28, 0x3F	; 63
    1108:	de 41       	sbci	r29, 0x1E	; 30
    110a:	20 e6       	ldi	r18, 0x60	; 96
    110c:	31 e0       	ldi	r19, 0x01	; 1
    110e:	fe 01       	movw	r30, r28
    1110:	ef 51       	subi	r30, 0x1F	; 31
    1112:	f3 4e       	sbci	r31, 0xE3	; 227
    1114:	de 01       	movw	r26, r28
    1116:	af 57       	subi	r26, 0x7F	; 127
    1118:	b4 4e       	sbci	r27, 0xE4	; 228
    111a:	01 90       	ld	r0, Z+
    111c:	0d 92       	st	X+, r0
    111e:	21 50       	subi	r18, 0x01	; 1
    1120:	30 40       	sbci	r19, 0x00	; 0
    1122:	d9 f7       	brne	.-10     	; 0x111a <main+0x736>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    1124:	c1 52       	subi	r28, 0x21	; 33
    1126:	d3 4e       	sbci	r29, 0xE3	; 227
    1128:	88 83       	st	Y, r24
    112a:	cf 5d       	subi	r28, 0xDF	; 223
    112c:	dc 41       	sbci	r29, 0x1C	; 28
    112e:	80 e6       	ldi	r24, 0x60	; 96
    1130:	91 e0       	ldi	r25, 0x01	; 1
    1132:	fe 01       	movw	r30, r28
    1134:	ef 57       	subi	r30, 0x7F	; 127
    1136:	f4 4e       	sbci	r31, 0xE4	; 228
    1138:	ab e3       	ldi	r26, 0x3B	; 59
    113a:	b1 e0       	ldi	r27, 0x01	; 1
    113c:	01 90       	ld	r0, Z+
    113e:	0d 92       	st	X+, r0
    1140:	01 97       	sbiw	r24, 0x01	; 1
    1142:	e1 f7       	brne	.-8      	; 0x113c <main+0x758>
	
	matrix = clearSingleMatrix(matrix);
    1144:	20 91 33 01 	lds	r18, 0x0133
    1148:	30 91 34 01 	lds	r19, 0x0134
    114c:	40 91 35 01 	lds	r20, 0x0135
    1150:	50 91 36 01 	lds	r21, 0x0136
    1154:	60 91 37 01 	lds	r22, 0x0137
    1158:	70 91 38 01 	lds	r23, 0x0138
    115c:	80 91 39 01 	lds	r24, 0x0139
    1160:	90 91 3a 01 	lds	r25, 0x013A
    1164:	d1 d8       	rcall	.-3678   	; 0x308 <clearSingleMatrix>
    1166:	f8 01       	movw	r30, r16
    1168:	20 83       	st	Z, r18
    116a:	42 83       	std	Z+2, r20	; 0x02
    116c:	53 83       	std	Z+3, r21	; 0x03
    116e:	64 83       	std	Z+4, r22	; 0x04
    1170:	75 83       	std	Z+5, r23	; 0x05
    1172:	97 83       	std	Z+7, r25	; 0x07
    1174:	3f 77       	andi	r19, 0x7F	; 127
	matrix.m[1] = SetBit(matrix.m[1], 7, 0);
    1176:	31 83       	std	Z+1, r19	; 0x01
    1178:	8f 77       	andi	r24, 0x7F	; 127
	matrix.m[6] = SetBit(matrix.m[6], 7, 0);
    117a:	86 83       	std	Z+6, r24	; 0x06
    117c:	80 e6       	ldi	r24, 0x60	; 96
    117e:	91 e0       	ldi	r25, 0x01	; 1
    1180:	eb e3       	ldi	r30, 0x3B	; 59
    1182:	f1 e0       	ldi	r31, 0x01	; 1
    1184:	de 01       	movw	r26, r28
    1186:	af 5d       	subi	r26, 0xDF	; 223
    1188:	b5 4e       	sbci	r27, 0xE5	; 229
    118a:	01 90       	ld	r0, Z+
    118c:	0d 92       	st	X+, r0
    118e:	01 97       	sbiw	r24, 0x01	; 1
    1190:	e1 f7       	brne	.-8      	; 0x118a <main+0x7a6>
    1192:	f7 01       	movw	r30, r14
    1194:	80 81       	ld	r24, Z
    1196:	98 e0       	ldi	r25, 0x08	; 8
    1198:	f8 01       	movw	r30, r16
    119a:	de 01       	movw	r26, r28
    119c:	a7 5f       	subi	r26, 0xF7	; 247
    119e:	b0 4d       	sbci	r27, 0xD0	; 208
    11a0:	01 90       	ld	r0, Z+
    11a2:	0d 92       	st	X+, r0
    11a4:	9a 95       	dec	r25
    11a6:	e1 f7       	brne	.-8      	; 0x11a0 <main+0x7bc>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    11a8:	a1 e2       	ldi	r26, 0x21	; 33
    11aa:	ba e1       	ldi	r27, 0x1A	; 26
    11ac:	ac 0f       	add	r26, r28
    11ae:	bd 1f       	adc	r27, r29
    11b0:	f8 e0       	ldi	r31, 0x08	; 8
    11b2:	8f 9f       	mul	r24, r31
    11b4:	a0 0d       	add	r26, r0
    11b6:	b1 1d       	adc	r27, r1
    11b8:	11 24       	eor	r1, r1
    11ba:	98 e0       	ldi	r25, 0x08	; 8
    11bc:	fe 01       	movw	r30, r28
    11be:	e7 5f       	subi	r30, 0xF7	; 247
    11c0:	f0 4d       	sbci	r31, 0xD0	; 208
    11c2:	01 90       	ld	r0, Z+
    11c4:	0d 92       	st	X+, r0
    11c6:	9a 95       	dec	r25
    11c8:	e1 f7       	brne	.-8      	; 0x11c2 <main+0x7de>
	explosions.timeBetween[explosions.index] = a;
    11ca:	21 e2       	ldi	r18, 0x21	; 33
    11cc:	3a e1       	ldi	r19, 0x1A	; 26
    11ce:	2c 0f       	add	r18, r28
    11d0:	3d 1f       	adc	r19, r29
    11d2:	28 0f       	add	r18, r24
    11d4:	31 1d       	adc	r19, r1
    11d6:	f9 01       	movw	r30, r18
    11d8:	e8 5e       	subi	r30, 0xE8	; 232
    11da:	fe 4f       	sbci	r31, 0xFE	; 254
    11dc:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    11de:	b3 96       	adiw	r30, 0x23	; 35
    11e0:	d0 82       	st	Z, r13
	explosions.index++;
    11e2:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    11e4:	c1 58       	subi	r28, 0x81	; 129
    11e6:	d4 4e       	sbci	r29, 0xE4	; 228
    11e8:	88 83       	st	Y, r24
    11ea:	cf 57       	subi	r28, 0x7F	; 127
    11ec:	db 41       	sbci	r29, 0x1B	; 27
    11ee:	20 e6       	ldi	r18, 0x60	; 96
    11f0:	31 e0       	ldi	r19, 0x01	; 1
    11f2:	fe 01       	movw	r30, r28
    11f4:	ef 5d       	subi	r30, 0xDF	; 223
    11f6:	f5 4e       	sbci	r31, 0xE5	; 229
    11f8:	de 01       	movw	r26, r28
    11fa:	af 53       	subi	r26, 0x3F	; 63
    11fc:	b7 4e       	sbci	r27, 0xE7	; 231
    11fe:	01 90       	ld	r0, Z+
    1200:	0d 92       	st	X+, r0
    1202:	21 50       	subi	r18, 0x01	; 1
    1204:	30 40       	sbci	r19, 0x00	; 0
    1206:	d9 f7       	brne	.-10     	; 0x11fe <main+0x81a>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    1208:	c1 5e       	subi	r28, 0xE1	; 225
    120a:	d5 4e       	sbci	r29, 0xE5	; 229
    120c:	88 83       	st	Y, r24
    120e:	cf 51       	subi	r28, 0x1F	; 31
    1210:	da 41       	sbci	r29, 0x1A	; 26
    1212:	80 e6       	ldi	r24, 0x60	; 96
    1214:	91 e0       	ldi	r25, 0x01	; 1
    1216:	fe 01       	movw	r30, r28
    1218:	ef 53       	subi	r30, 0x3F	; 63
    121a:	f7 4e       	sbci	r31, 0xE7	; 231
    121c:	ab e3       	ldi	r26, 0x3B	; 59
    121e:	b1 e0       	ldi	r27, 0x01	; 1
    1220:	01 90       	ld	r0, Z+
    1222:	0d 92       	st	X+, r0
    1224:	01 97       	sbiw	r24, 0x01	; 1
    1226:	e1 f7       	brne	.-8      	; 0x1220 <main+0x83c>
	
	matrix = clearSingleMatrix(matrix);
    1228:	20 91 33 01 	lds	r18, 0x0133
    122c:	30 91 34 01 	lds	r19, 0x0134
    1230:	40 91 35 01 	lds	r20, 0x0135
    1234:	50 91 36 01 	lds	r21, 0x0136
    1238:	60 91 37 01 	lds	r22, 0x0137
    123c:	70 91 38 01 	lds	r23, 0x0138
    1240:	80 91 39 01 	lds	r24, 0x0139
    1244:	90 91 3a 01 	lds	r25, 0x013A
    1248:	5f d8       	rcall	.-3906   	; 0x308 <clearSingleMatrix>
    124a:	f8 01       	movw	r30, r16
    124c:	20 83       	st	Z, r18
    124e:	31 83       	std	Z+1, r19	; 0x01
    1250:	53 83       	std	Z+3, r21	; 0x03
    1252:	64 83       	std	Z+4, r22	; 0x04
    1254:	86 83       	std	Z+6, r24	; 0x06
    1256:	97 83       	std	Z+7, r25	; 0x07
    1258:	4f 77       	andi	r20, 0x7F	; 127
	matrix.m[2] = SetBit(matrix.m[2], 7, 0);
    125a:	42 83       	std	Z+2, r20	; 0x02
    125c:	7f 77       	andi	r23, 0x7F	; 127
	matrix.m[5] = SetBit(matrix.m[5], 7, 0);
    125e:	75 83       	std	Z+5, r23	; 0x05
    1260:	80 e6       	ldi	r24, 0x60	; 96
    1262:	91 e0       	ldi	r25, 0x01	; 1
    1264:	eb e3       	ldi	r30, 0x3B	; 59
    1266:	f1 e0       	ldi	r31, 0x01	; 1
    1268:	de 01       	movw	r26, r28
    126a:	af 59       	subi	r26, 0x9F	; 159
    126c:	b8 4e       	sbci	r27, 0xE8	; 232
    126e:	01 90       	ld	r0, Z+
    1270:	0d 92       	st	X+, r0
    1272:	01 97       	sbiw	r24, 0x01	; 1
    1274:	e1 f7       	brne	.-8      	; 0x126e <main+0x88a>
    1276:	f7 01       	movw	r30, r14
    1278:	80 81       	ld	r24, Z
    127a:	98 e0       	ldi	r25, 0x08	; 8
    127c:	f8 01       	movw	r30, r16
    127e:	de 01       	movw	r26, r28
    1280:	af 5f       	subi	r26, 0xFF	; 255
    1282:	b0 4d       	sbci	r27, 0xD0	; 208
    1284:	01 90       	ld	r0, Z+
    1286:	0d 92       	st	X+, r0
    1288:	9a 95       	dec	r25
    128a:	e1 f7       	brne	.-8      	; 0x1284 <main+0x8a0>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    128c:	a1 e6       	ldi	r26, 0x61	; 97
    128e:	b7 e1       	ldi	r27, 0x17	; 23
    1290:	ac 0f       	add	r26, r28
    1292:	bd 1f       	adc	r27, r29
    1294:	f8 e0       	ldi	r31, 0x08	; 8
    1296:	8f 9f       	mul	r24, r31
    1298:	a0 0d       	add	r26, r0
    129a:	b1 1d       	adc	r27, r1
    129c:	11 24       	eor	r1, r1
    129e:	98 e0       	ldi	r25, 0x08	; 8
    12a0:	fe 01       	movw	r30, r28
    12a2:	ef 5f       	subi	r30, 0xFF	; 255
    12a4:	f0 4d       	sbci	r31, 0xD0	; 208
    12a6:	01 90       	ld	r0, Z+
    12a8:	0d 92       	st	X+, r0
    12aa:	9a 95       	dec	r25
    12ac:	e1 f7       	brne	.-8      	; 0x12a6 <main+0x8c2>
	explosions.timeBetween[explosions.index] = a;
    12ae:	21 e6       	ldi	r18, 0x61	; 97
    12b0:	37 e1       	ldi	r19, 0x17	; 23
    12b2:	2c 0f       	add	r18, r28
    12b4:	3d 1f       	adc	r19, r29
    12b6:	28 0f       	add	r18, r24
    12b8:	31 1d       	adc	r19, r1
    12ba:	f9 01       	movw	r30, r18
    12bc:	e8 5e       	subi	r30, 0xE8	; 232
    12be:	fe 4f       	sbci	r31, 0xFE	; 254
    12c0:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    12c2:	b3 96       	adiw	r30, 0x23	; 35
    12c4:	d0 82       	st	Z, r13
	explosions.index++;
    12c6:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    12c8:	c1 54       	subi	r28, 0x41	; 65
    12ca:	d7 4e       	sbci	r29, 0xE7	; 231
    12cc:	88 83       	st	Y, r24
    12ce:	cf 5b       	subi	r28, 0xBF	; 191
    12d0:	d8 41       	sbci	r29, 0x18	; 24
    12d2:	20 e6       	ldi	r18, 0x60	; 96
    12d4:	31 e0       	ldi	r19, 0x01	; 1
    12d6:	fe 01       	movw	r30, r28
    12d8:	ef 59       	subi	r30, 0x9F	; 159
    12da:	f8 4e       	sbci	r31, 0xE8	; 232
    12dc:	de 01       	movw	r26, r28
    12de:	af 5f       	subi	r26, 0xFF	; 255
    12e0:	b9 4e       	sbci	r27, 0xE9	; 233
    12e2:	01 90       	ld	r0, Z+
    12e4:	0d 92       	st	X+, r0
    12e6:	21 50       	subi	r18, 0x01	; 1
    12e8:	30 40       	sbci	r19, 0x00	; 0
    12ea:	d9 f7       	brne	.-10     	; 0x12e2 <main+0x8fe>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    12ec:	c1 5a       	subi	r28, 0xA1	; 161
    12ee:	d8 4e       	sbci	r29, 0xE8	; 232
    12f0:	88 83       	st	Y, r24
    12f2:	cf 55       	subi	r28, 0x5F	; 95
    12f4:	d7 41       	sbci	r29, 0x17	; 23
    12f6:	80 e6       	ldi	r24, 0x60	; 96
    12f8:	91 e0       	ldi	r25, 0x01	; 1
    12fa:	fe 01       	movw	r30, r28
    12fc:	ef 5f       	subi	r30, 0xFF	; 255
    12fe:	f9 4e       	sbci	r31, 0xE9	; 233
    1300:	ab e3       	ldi	r26, 0x3B	; 59
    1302:	b1 e0       	ldi	r27, 0x01	; 1
    1304:	01 90       	ld	r0, Z+
    1306:	0d 92       	st	X+, r0
    1308:	01 97       	sbiw	r24, 0x01	; 1
    130a:	e1 f7       	brne	.-8      	; 0x1304 <main+0x920>
	
	matrix = clearSingleMatrix(matrix);
    130c:	20 91 33 01 	lds	r18, 0x0133
    1310:	30 91 34 01 	lds	r19, 0x0134
    1314:	40 91 35 01 	lds	r20, 0x0135
    1318:	50 91 36 01 	lds	r21, 0x0136
    131c:	60 91 37 01 	lds	r22, 0x0137
    1320:	70 91 38 01 	lds	r23, 0x0138
    1324:	80 91 39 01 	lds	r24, 0x0139
    1328:	90 91 3a 01 	lds	r25, 0x013A
    132c:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    1330:	f8 01       	movw	r30, r16
    1332:	20 83       	st	Z, r18
    1334:	31 83       	std	Z+1, r19	; 0x01
    1336:	53 83       	std	Z+3, r21	; 0x03
    1338:	64 83       	std	Z+4, r22	; 0x04
    133a:	86 83       	std	Z+6, r24	; 0x06
    133c:	97 83       	std	Z+7, r25	; 0x07
    133e:	4f 7b       	andi	r20, 0xBF	; 191
	matrix.m[2] = SetBit(matrix.m[2], 6, 0);
    1340:	42 83       	std	Z+2, r20	; 0x02
    1342:	7f 7b       	andi	r23, 0xBF	; 191
	matrix.m[5] = SetBit(matrix.m[5], 6, 0);
    1344:	75 83       	std	Z+5, r23	; 0x05
    1346:	80 e6       	ldi	r24, 0x60	; 96
    1348:	91 e0       	ldi	r25, 0x01	; 1
    134a:	eb e3       	ldi	r30, 0x3B	; 59
    134c:	f1 e0       	ldi	r31, 0x01	; 1
    134e:	de 01       	movw	r26, r28
    1350:	af 55       	subi	r26, 0x5F	; 95
    1352:	bb 4e       	sbci	r27, 0xEB	; 235
    1354:	01 90       	ld	r0, Z+
    1356:	0d 92       	st	X+, r0
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	e1 f7       	brne	.-8      	; 0x1354 <main+0x970>
    135c:	f7 01       	movw	r30, r14
    135e:	80 81       	ld	r24, Z
    1360:	98 e0       	ldi	r25, 0x08	; 8
    1362:	f8 01       	movw	r30, r16
    1364:	de 01       	movw	r26, r28
    1366:	a7 50       	subi	r26, 0x07	; 7
    1368:	b1 4d       	sbci	r27, 0xD1	; 209
    136a:	01 90       	ld	r0, Z+
    136c:	0d 92       	st	X+, r0
    136e:	9a 95       	dec	r25
    1370:	e1 f7       	brne	.-8      	; 0x136a <main+0x986>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    1372:	a1 ea       	ldi	r26, 0xA1	; 161
    1374:	b4 e1       	ldi	r27, 0x14	; 20
    1376:	ac 0f       	add	r26, r28
    1378:	bd 1f       	adc	r27, r29
    137a:	f8 e0       	ldi	r31, 0x08	; 8
    137c:	8f 9f       	mul	r24, r31
    137e:	a0 0d       	add	r26, r0
    1380:	b1 1d       	adc	r27, r1
    1382:	11 24       	eor	r1, r1
    1384:	98 e0       	ldi	r25, 0x08	; 8
    1386:	fe 01       	movw	r30, r28
    1388:	e7 50       	subi	r30, 0x07	; 7
    138a:	f1 4d       	sbci	r31, 0xD1	; 209
    138c:	01 90       	ld	r0, Z+
    138e:	0d 92       	st	X+, r0
    1390:	9a 95       	dec	r25
    1392:	e1 f7       	brne	.-8      	; 0x138c <main+0x9a8>
	explosions.timeBetween[explosions.index] = a;
    1394:	21 ea       	ldi	r18, 0xA1	; 161
    1396:	34 e1       	ldi	r19, 0x14	; 20
    1398:	2c 0f       	add	r18, r28
    139a:	3d 1f       	adc	r19, r29
    139c:	28 0f       	add	r18, r24
    139e:	31 1d       	adc	r19, r1
    13a0:	f9 01       	movw	r30, r18
    13a2:	e8 5e       	subi	r30, 0xE8	; 232
    13a4:	fe 4f       	sbci	r31, 0xFE	; 254
    13a6:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    13a8:	b3 96       	adiw	r30, 0x23	; 35
    13aa:	68 94       	set
    13ac:	ff 24       	eor	r15, r15
    13ae:	f1 f8       	bld	r15, 1
    13b0:	f0 82       	st	Z, r15
	explosions.index++;
    13b2:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    13b4:	c1 50       	subi	r28, 0x01	; 1
    13b6:	da 4e       	sbci	r29, 0xEA	; 234
    13b8:	88 83       	st	Y, r24
    13ba:	cf 5f       	subi	r28, 0xFF	; 255
    13bc:	d5 41       	sbci	r29, 0x15	; 21
    13be:	20 e6       	ldi	r18, 0x60	; 96
    13c0:	31 e0       	ldi	r19, 0x01	; 1
    13c2:	fe 01       	movw	r30, r28
    13c4:	ef 55       	subi	r30, 0x5F	; 95
    13c6:	fb 4e       	sbci	r31, 0xEB	; 235
    13c8:	de 01       	movw	r26, r28
    13ca:	af 5b       	subi	r26, 0xBF	; 191
    13cc:	bc 4e       	sbci	r27, 0xEC	; 236
    13ce:	01 90       	ld	r0, Z+
    13d0:	0d 92       	st	X+, r0
    13d2:	21 50       	subi	r18, 0x01	; 1
    13d4:	30 40       	sbci	r19, 0x00	; 0
    13d6:	d9 f7       	brne	.-10     	; 0x13ce <main+0x9ea>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    13d8:	c1 56       	subi	r28, 0x61	; 97
    13da:	db 4e       	sbci	r29, 0xEB	; 235
    13dc:	88 83       	st	Y, r24
    13de:	cf 59       	subi	r28, 0x9F	; 159
    13e0:	d4 41       	sbci	r29, 0x14	; 20
    13e2:	80 e6       	ldi	r24, 0x60	; 96
    13e4:	91 e0       	ldi	r25, 0x01	; 1
    13e6:	fe 01       	movw	r30, r28
    13e8:	ef 5b       	subi	r30, 0xBF	; 191
    13ea:	fc 4e       	sbci	r31, 0xEC	; 236
    13ec:	ab e3       	ldi	r26, 0x3B	; 59
    13ee:	b1 e0       	ldi	r27, 0x01	; 1
    13f0:	01 90       	ld	r0, Z+
    13f2:	0d 92       	st	X+, r0
    13f4:	01 97       	sbiw	r24, 0x01	; 1
    13f6:	e1 f7       	brne	.-8      	; 0x13f0 <main+0xa0c>
	
	matrix = clearSingleMatrix(matrix);
    13f8:	20 91 33 01 	lds	r18, 0x0133
    13fc:	30 91 34 01 	lds	r19, 0x0134
    1400:	40 91 35 01 	lds	r20, 0x0135
    1404:	50 91 36 01 	lds	r21, 0x0136
    1408:	60 91 37 01 	lds	r22, 0x0137
    140c:	70 91 38 01 	lds	r23, 0x0138
    1410:	80 91 39 01 	lds	r24, 0x0139
    1414:	90 91 3a 01 	lds	r25, 0x013A
    1418:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    141c:	f8 01       	movw	r30, r16
    141e:	20 83       	st	Z, r18
    1420:	31 83       	std	Z+1, r19	; 0x01
    1422:	53 83       	std	Z+3, r21	; 0x03
    1424:	64 83       	std	Z+4, r22	; 0x04
    1426:	86 83       	std	Z+6, r24	; 0x06
    1428:	97 83       	std	Z+7, r25	; 0x07
    142a:	4f 7d       	andi	r20, 0xDF	; 223
	matrix.m[2] = SetBit(matrix.m[2], 5, 0);
    142c:	42 83       	std	Z+2, r20	; 0x02
    142e:	7f 7d       	andi	r23, 0xDF	; 223
	matrix.m[5] = SetBit(matrix.m[5], 5, 0);
    1430:	75 83       	std	Z+5, r23	; 0x05
    1432:	80 e6       	ldi	r24, 0x60	; 96
    1434:	91 e0       	ldi	r25, 0x01	; 1
    1436:	eb e3       	ldi	r30, 0x3B	; 59
    1438:	f1 e0       	ldi	r31, 0x01	; 1
    143a:	de 01       	movw	r26, r28
    143c:	af 51       	subi	r26, 0x1F	; 31
    143e:	be 4e       	sbci	r27, 0xEE	; 238
    1440:	01 90       	ld	r0, Z+
    1442:	0d 92       	st	X+, r0
    1444:	01 97       	sbiw	r24, 0x01	; 1
    1446:	e1 f7       	brne	.-8      	; 0x1440 <main+0xa5c>
    1448:	0f 2e       	mov	r0, r31
    144a:	f9 e9       	ldi	r31, 0x99	; 153
    144c:	cf 2e       	mov	r12, r31
    144e:	f2 e0       	ldi	r31, 0x02	; 2
    1450:	df 2e       	mov	r13, r31
    1452:	f0 2d       	mov	r31, r0
    1454:	f6 01       	movw	r30, r12
    1456:	80 81       	ld	r24, Z
    1458:	98 e0       	ldi	r25, 0x08	; 8
    145a:	f8 01       	movw	r30, r16
    145c:	de 01       	movw	r26, r28
    145e:	af 50       	subi	r26, 0x0F	; 15
    1460:	b1 4d       	sbci	r27, 0xD1	; 209
    1462:	01 90       	ld	r0, Z+
    1464:	0d 92       	st	X+, r0
    1466:	9a 95       	dec	r25
    1468:	e1 f7       	brne	.-8      	; 0x1462 <main+0xa7e>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    146a:	a1 ee       	ldi	r26, 0xE1	; 225
    146c:	b1 e1       	ldi	r27, 0x11	; 17
    146e:	ac 0f       	add	r26, r28
    1470:	bd 1f       	adc	r27, r29
    1472:	f8 e0       	ldi	r31, 0x08	; 8
    1474:	8f 9f       	mul	r24, r31
    1476:	a0 0d       	add	r26, r0
    1478:	b1 1d       	adc	r27, r1
    147a:	11 24       	eor	r1, r1
    147c:	98 e0       	ldi	r25, 0x08	; 8
    147e:	fe 01       	movw	r30, r28
    1480:	ef 50       	subi	r30, 0x0F	; 15
    1482:	f1 4d       	sbci	r31, 0xD1	; 209
    1484:	01 90       	ld	r0, Z+
    1486:	0d 92       	st	X+, r0
    1488:	9a 95       	dec	r25
    148a:	e1 f7       	brne	.-8      	; 0x1484 <main+0xaa0>
	explosions.timeBetween[explosions.index] = a;
    148c:	21 ee       	ldi	r18, 0xE1	; 225
    148e:	31 e1       	ldi	r19, 0x11	; 17
    1490:	2c 0f       	add	r18, r28
    1492:	3d 1f       	adc	r19, r29
    1494:	28 0f       	add	r18, r24
    1496:	31 1d       	adc	r19, r1
    1498:	f9 01       	movw	r30, r18
    149a:	e8 5e       	subi	r30, 0xE8	; 232
    149c:	fe 4f       	sbci	r31, 0xFE	; 254
    149e:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    14a0:	b3 96       	adiw	r30, 0x23	; 35
    14a2:	f0 82       	st	Z, r15
	explosions.index++;
    14a4:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    14a6:	c1 5c       	subi	r28, 0xC1	; 193
    14a8:	dc 4e       	sbci	r29, 0xEC	; 236
    14aa:	88 83       	st	Y, r24
    14ac:	cf 53       	subi	r28, 0x3F	; 63
    14ae:	d3 41       	sbci	r29, 0x13	; 19
    14b0:	20 e6       	ldi	r18, 0x60	; 96
    14b2:	31 e0       	ldi	r19, 0x01	; 1
    14b4:	fe 01       	movw	r30, r28
    14b6:	ef 51       	subi	r30, 0x1F	; 31
    14b8:	fe 4e       	sbci	r31, 0xEE	; 238
    14ba:	de 01       	movw	r26, r28
    14bc:	af 57       	subi	r26, 0x7F	; 127
    14be:	bf 4e       	sbci	r27, 0xEF	; 239
    14c0:	01 90       	ld	r0, Z+
    14c2:	0d 92       	st	X+, r0
    14c4:	21 50       	subi	r18, 0x01	; 1
    14c6:	30 40       	sbci	r19, 0x00	; 0
    14c8:	d9 f7       	brne	.-10     	; 0x14c0 <main+0xadc>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    14ca:	c1 52       	subi	r28, 0x21	; 33
    14cc:	de 4e       	sbci	r29, 0xEE	; 238
    14ce:	88 83       	st	Y, r24
    14d0:	cf 5d       	subi	r28, 0xDF	; 223
    14d2:	d1 41       	sbci	r29, 0x11	; 17
    14d4:	80 e6       	ldi	r24, 0x60	; 96
    14d6:	91 e0       	ldi	r25, 0x01	; 1
    14d8:	fe 01       	movw	r30, r28
    14da:	ef 57       	subi	r30, 0x7F	; 127
    14dc:	ff 4e       	sbci	r31, 0xEF	; 239
    14de:	ab e3       	ldi	r26, 0x3B	; 59
    14e0:	b1 e0       	ldi	r27, 0x01	; 1
    14e2:	01 90       	ld	r0, Z+
    14e4:	0d 92       	st	X+, r0
    14e6:	01 97       	sbiw	r24, 0x01	; 1
    14e8:	e1 f7       	brne	.-8      	; 0x14e2 <main+0xafe>
	
	matrix = clearSingleMatrix(matrix);
    14ea:	20 91 33 01 	lds	r18, 0x0133
    14ee:	30 91 34 01 	lds	r19, 0x0134
    14f2:	40 91 35 01 	lds	r20, 0x0135
    14f6:	50 91 36 01 	lds	r21, 0x0136
    14fa:	60 91 37 01 	lds	r22, 0x0137
    14fe:	70 91 38 01 	lds	r23, 0x0138
    1502:	80 91 39 01 	lds	r24, 0x0139
    1506:	90 91 3a 01 	lds	r25, 0x013A
    150a:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    150e:	f8 01       	movw	r30, r16
    1510:	20 83       	st	Z, r18
    1512:	31 83       	std	Z+1, r19	; 0x01
    1514:	53 83       	std	Z+3, r21	; 0x03
    1516:	64 83       	std	Z+4, r22	; 0x04
    1518:	86 83       	std	Z+6, r24	; 0x06
    151a:	97 83       	std	Z+7, r25	; 0x07
    151c:	4f 7e       	andi	r20, 0xEF	; 239
	matrix.m[2] = SetBit(matrix.m[2], 4, 0);
    151e:	42 83       	std	Z+2, r20	; 0x02
    1520:	7f 7e       	andi	r23, 0xEF	; 239
	matrix.m[5] = SetBit(matrix.m[5], 4, 0);
    1522:	75 83       	std	Z+5, r23	; 0x05
    1524:	80 e6       	ldi	r24, 0x60	; 96
    1526:	91 e0       	ldi	r25, 0x01	; 1
    1528:	eb e3       	ldi	r30, 0x3B	; 59
    152a:	f1 e0       	ldi	r31, 0x01	; 1
    152c:	de 01       	movw	r26, r28
    152e:	af 5d       	subi	r26, 0xDF	; 223
    1530:	b0 4f       	sbci	r27, 0xF0	; 240
    1532:	01 90       	ld	r0, Z+
    1534:	0d 92       	st	X+, r0
    1536:	01 97       	sbiw	r24, 0x01	; 1
    1538:	e1 f7       	brne	.-8      	; 0x1532 <main+0xb4e>
    153a:	f6 01       	movw	r30, r12
    153c:	80 81       	ld	r24, Z
    153e:	98 e0       	ldi	r25, 0x08	; 8
    1540:	f8 01       	movw	r30, r16
    1542:	de 01       	movw	r26, r28
    1544:	a7 51       	subi	r26, 0x17	; 23
    1546:	b1 4d       	sbci	r27, 0xD1	; 209
    1548:	01 90       	ld	r0, Z+
    154a:	0d 92       	st	X+, r0
    154c:	9a 95       	dec	r25
    154e:	e1 f7       	brne	.-8      	; 0x1548 <main+0xb64>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    1550:	a1 e2       	ldi	r26, 0x21	; 33
    1552:	bf e0       	ldi	r27, 0x0F	; 15
    1554:	ac 0f       	add	r26, r28
    1556:	bd 1f       	adc	r27, r29
    1558:	f8 e0       	ldi	r31, 0x08	; 8
    155a:	8f 9f       	mul	r24, r31
    155c:	a0 0d       	add	r26, r0
    155e:	b1 1d       	adc	r27, r1
    1560:	11 24       	eor	r1, r1
    1562:	98 e0       	ldi	r25, 0x08	; 8
    1564:	fe 01       	movw	r30, r28
    1566:	e7 51       	subi	r30, 0x17	; 23
    1568:	f1 4d       	sbci	r31, 0xD1	; 209
    156a:	01 90       	ld	r0, Z+
    156c:	0d 92       	st	X+, r0
    156e:	9a 95       	dec	r25
    1570:	e1 f7       	brne	.-8      	; 0x156a <main+0xb86>
	explosions.timeBetween[explosions.index] = a;
    1572:	21 e2       	ldi	r18, 0x21	; 33
    1574:	3f e0       	ldi	r19, 0x0F	; 15
    1576:	2c 0f       	add	r18, r28
    1578:	3d 1f       	adc	r19, r29
    157a:	28 0f       	add	r18, r24
    157c:	31 1d       	adc	r19, r1
    157e:	f9 01       	movw	r30, r18
    1580:	e8 5e       	subi	r30, 0xE8	; 232
    1582:	fe 4f       	sbci	r31, 0xFE	; 254
    1584:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1586:	b3 96       	adiw	r30, 0x23	; 35
    1588:	f0 82       	st	Z, r15
	explosions.index++;
    158a:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    158c:	c1 58       	subi	r28, 0x81	; 129
    158e:	df 4e       	sbci	r29, 0xEF	; 239
    1590:	88 83       	st	Y, r24
    1592:	cf 57       	subi	r28, 0x7F	; 127
    1594:	d0 41       	sbci	r29, 0x10	; 16
    1596:	20 e6       	ldi	r18, 0x60	; 96
    1598:	31 e0       	ldi	r19, 0x01	; 1
    159a:	fe 01       	movw	r30, r28
    159c:	ef 5d       	subi	r30, 0xDF	; 223
    159e:	f0 4f       	sbci	r31, 0xF0	; 240
    15a0:	de 01       	movw	r26, r28
    15a2:	af 53       	subi	r26, 0x3F	; 63
    15a4:	b2 4f       	sbci	r27, 0xF2	; 242
    15a6:	01 90       	ld	r0, Z+
    15a8:	0d 92       	st	X+, r0
    15aa:	21 50       	subi	r18, 0x01	; 1
    15ac:	30 40       	sbci	r19, 0x00	; 0
    15ae:	d9 f7       	brne	.-10     	; 0x15a6 <main+0xbc2>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    15b0:	c1 5e       	subi	r28, 0xE1	; 225
    15b2:	d0 4f       	sbci	r29, 0xF0	; 240
    15b4:	88 83       	st	Y, r24
    15b6:	cf 51       	subi	r28, 0x1F	; 31
    15b8:	df 40       	sbci	r29, 0x0F	; 15
    15ba:	80 e6       	ldi	r24, 0x60	; 96
    15bc:	91 e0       	ldi	r25, 0x01	; 1
    15be:	fe 01       	movw	r30, r28
    15c0:	ef 53       	subi	r30, 0x3F	; 63
    15c2:	f2 4f       	sbci	r31, 0xF2	; 242
    15c4:	ab e3       	ldi	r26, 0x3B	; 59
    15c6:	b1 e0       	ldi	r27, 0x01	; 1
    15c8:	01 90       	ld	r0, Z+
    15ca:	0d 92       	st	X+, r0
    15cc:	01 97       	sbiw	r24, 0x01	; 1
    15ce:	e1 f7       	brne	.-8      	; 0x15c8 <main+0xbe4>
	
	matrix = clearSingleMatrix(matrix);
    15d0:	20 91 33 01 	lds	r18, 0x0133
    15d4:	30 91 34 01 	lds	r19, 0x0134
    15d8:	40 91 35 01 	lds	r20, 0x0135
    15dc:	50 91 36 01 	lds	r21, 0x0136
    15e0:	60 91 37 01 	lds	r22, 0x0137
    15e4:	70 91 38 01 	lds	r23, 0x0138
    15e8:	80 91 39 01 	lds	r24, 0x0139
    15ec:	90 91 3a 01 	lds	r25, 0x013A
    15f0:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    15f4:	f8 01       	movw	r30, r16
    15f6:	20 83       	st	Z, r18
    15f8:	31 83       	std	Z+1, r19	; 0x01
    15fa:	53 83       	std	Z+3, r21	; 0x03
    15fc:	64 83       	std	Z+4, r22	; 0x04
    15fe:	86 83       	std	Z+6, r24	; 0x06
    1600:	97 83       	std	Z+7, r25	; 0x07
    1602:	47 7f       	andi	r20, 0xF7	; 247
	matrix.m[2] = SetBit(matrix.m[2], 3, 0);
    1604:	42 83       	std	Z+2, r20	; 0x02
    1606:	77 7f       	andi	r23, 0xF7	; 247
	matrix.m[5] = SetBit(matrix.m[5], 3, 0);
    1608:	75 83       	std	Z+5, r23	; 0x05
    160a:	80 e6       	ldi	r24, 0x60	; 96
    160c:	91 e0       	ldi	r25, 0x01	; 1
    160e:	eb e3       	ldi	r30, 0x3B	; 59
    1610:	f1 e0       	ldi	r31, 0x01	; 1
    1612:	de 01       	movw	r26, r28
    1614:	af 59       	subi	r26, 0x9F	; 159
    1616:	b3 4f       	sbci	r27, 0xF3	; 243
    1618:	01 90       	ld	r0, Z+
    161a:	0d 92       	st	X+, r0
    161c:	01 97       	sbiw	r24, 0x01	; 1
    161e:	e1 f7       	brne	.-8      	; 0x1618 <main+0xc34>
    1620:	f6 01       	movw	r30, r12
    1622:	80 81       	ld	r24, Z
    1624:	98 e0       	ldi	r25, 0x08	; 8
    1626:	f8 01       	movw	r30, r16
    1628:	de 01       	movw	r26, r28
    162a:	af 51       	subi	r26, 0x1F	; 31
    162c:	b1 4d       	sbci	r27, 0xD1	; 209
    162e:	01 90       	ld	r0, Z+
    1630:	0d 92       	st	X+, r0
    1632:	9a 95       	dec	r25
    1634:	e1 f7       	brne	.-8      	; 0x162e <main+0xc4a>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    1636:	a1 e6       	ldi	r26, 0x61	; 97
    1638:	bc e0       	ldi	r27, 0x0C	; 12
    163a:	ac 0f       	add	r26, r28
    163c:	bd 1f       	adc	r27, r29
    163e:	f8 e0       	ldi	r31, 0x08	; 8
    1640:	8f 9f       	mul	r24, r31
    1642:	a0 0d       	add	r26, r0
    1644:	b1 1d       	adc	r27, r1
    1646:	11 24       	eor	r1, r1
    1648:	98 e0       	ldi	r25, 0x08	; 8
    164a:	fe 01       	movw	r30, r28
    164c:	ef 51       	subi	r30, 0x1F	; 31
    164e:	f1 4d       	sbci	r31, 0xD1	; 209
    1650:	01 90       	ld	r0, Z+
    1652:	0d 92       	st	X+, r0
    1654:	9a 95       	dec	r25
    1656:	e1 f7       	brne	.-8      	; 0x1650 <main+0xc6c>
	explosions.timeBetween[explosions.index] = a;
    1658:	21 e6       	ldi	r18, 0x61	; 97
    165a:	3c e0       	ldi	r19, 0x0C	; 12
    165c:	2c 0f       	add	r18, r28
    165e:	3d 1f       	adc	r19, r29
    1660:	28 0f       	add	r18, r24
    1662:	31 1d       	adc	r19, r1
    1664:	f9 01       	movw	r30, r18
    1666:	e8 5e       	subi	r30, 0xE8	; 232
    1668:	fe 4f       	sbci	r31, 0xFE	; 254
    166a:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    166c:	b3 96       	adiw	r30, 0x23	; 35
    166e:	f0 82       	st	Z, r15
	explosions.index++;
    1670:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    1672:	c1 54       	subi	r28, 0x41	; 65
    1674:	d2 4f       	sbci	r29, 0xF2	; 242
    1676:	88 83       	st	Y, r24
    1678:	cf 5b       	subi	r28, 0xBF	; 191
    167a:	dd 40       	sbci	r29, 0x0D	; 13
    167c:	20 e6       	ldi	r18, 0x60	; 96
    167e:	31 e0       	ldi	r19, 0x01	; 1
    1680:	fe 01       	movw	r30, r28
    1682:	ef 59       	subi	r30, 0x9F	; 159
    1684:	f3 4f       	sbci	r31, 0xF3	; 243
    1686:	de 01       	movw	r26, r28
    1688:	af 5f       	subi	r26, 0xFF	; 255
    168a:	b4 4f       	sbci	r27, 0xF4	; 244
    168c:	01 90       	ld	r0, Z+
    168e:	0d 92       	st	X+, r0
    1690:	21 50       	subi	r18, 0x01	; 1
    1692:	30 40       	sbci	r19, 0x00	; 0
    1694:	d9 f7       	brne	.-10     	; 0x168c <main+0xca8>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    1696:	c1 5a       	subi	r28, 0xA1	; 161
    1698:	d3 4f       	sbci	r29, 0xF3	; 243
    169a:	88 83       	st	Y, r24
    169c:	cf 55       	subi	r28, 0x5F	; 95
    169e:	dc 40       	sbci	r29, 0x0C	; 12
    16a0:	80 e6       	ldi	r24, 0x60	; 96
    16a2:	91 e0       	ldi	r25, 0x01	; 1
    16a4:	fe 01       	movw	r30, r28
    16a6:	ef 5f       	subi	r30, 0xFF	; 255
    16a8:	f4 4f       	sbci	r31, 0xF4	; 244
    16aa:	ab e3       	ldi	r26, 0x3B	; 59
    16ac:	b1 e0       	ldi	r27, 0x01	; 1
    16ae:	01 90       	ld	r0, Z+
    16b0:	0d 92       	st	X+, r0
    16b2:	01 97       	sbiw	r24, 0x01	; 1
    16b4:	e1 f7       	brne	.-8      	; 0x16ae <main+0xcca>
	
	matrix = clearSingleMatrix(matrix);
    16b6:	20 91 33 01 	lds	r18, 0x0133
    16ba:	30 91 34 01 	lds	r19, 0x0134
    16be:	40 91 35 01 	lds	r20, 0x0135
    16c2:	50 91 36 01 	lds	r21, 0x0136
    16c6:	60 91 37 01 	lds	r22, 0x0137
    16ca:	70 91 38 01 	lds	r23, 0x0138
    16ce:	80 91 39 01 	lds	r24, 0x0139
    16d2:	90 91 3a 01 	lds	r25, 0x013A
    16d6:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    16da:	f8 01       	movw	r30, r16
    16dc:	20 83       	st	Z, r18
    16de:	31 83       	std	Z+1, r19	; 0x01
    16e0:	53 83       	std	Z+3, r21	; 0x03
    16e2:	64 83       	std	Z+4, r22	; 0x04
    16e4:	86 83       	std	Z+6, r24	; 0x06
    16e6:	97 83       	std	Z+7, r25	; 0x07
    16e8:	4b 7f       	andi	r20, 0xFB	; 251
	matrix.m[2] = SetBit(matrix.m[2], 2, 0);
    16ea:	42 83       	std	Z+2, r20	; 0x02
    16ec:	7b 7f       	andi	r23, 0xFB	; 251
	matrix.m[5] = SetBit(matrix.m[5], 2, 0);
    16ee:	75 83       	std	Z+5, r23	; 0x05
    16f0:	80 e6       	ldi	r24, 0x60	; 96
    16f2:	91 e0       	ldi	r25, 0x01	; 1
    16f4:	eb e3       	ldi	r30, 0x3B	; 59
    16f6:	f1 e0       	ldi	r31, 0x01	; 1
    16f8:	de 01       	movw	r26, r28
    16fa:	af 55       	subi	r26, 0x5F	; 95
    16fc:	b6 4f       	sbci	r27, 0xF6	; 246
    16fe:	01 90       	ld	r0, Z+
    1700:	0d 92       	st	X+, r0
    1702:	01 97       	sbiw	r24, 0x01	; 1
    1704:	e1 f7       	brne	.-8      	; 0x16fe <main+0xd1a>
    1706:	f6 01       	movw	r30, r12
    1708:	80 81       	ld	r24, Z
    170a:	98 e0       	ldi	r25, 0x08	; 8
    170c:	f8 01       	movw	r30, r16
    170e:	de 01       	movw	r26, r28
    1710:	a7 52       	subi	r26, 0x27	; 39
    1712:	b1 4d       	sbci	r27, 0xD1	; 209
    1714:	01 90       	ld	r0, Z+
    1716:	0d 92       	st	X+, r0
    1718:	9a 95       	dec	r25
    171a:	e1 f7       	brne	.-8      	; 0x1714 <main+0xd30>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    171c:	a1 ea       	ldi	r26, 0xA1	; 161
    171e:	b9 e0       	ldi	r27, 0x09	; 9
    1720:	ac 0f       	add	r26, r28
    1722:	bd 1f       	adc	r27, r29
    1724:	f8 e0       	ldi	r31, 0x08	; 8
    1726:	8f 9f       	mul	r24, r31
    1728:	a0 0d       	add	r26, r0
    172a:	b1 1d       	adc	r27, r1
    172c:	11 24       	eor	r1, r1
    172e:	98 e0       	ldi	r25, 0x08	; 8
    1730:	fe 01       	movw	r30, r28
    1732:	e7 52       	subi	r30, 0x27	; 39
    1734:	f1 4d       	sbci	r31, 0xD1	; 209
    1736:	01 90       	ld	r0, Z+
    1738:	0d 92       	st	X+, r0
    173a:	9a 95       	dec	r25
    173c:	e1 f7       	brne	.-8      	; 0x1736 <main+0xd52>
	explosions.timeBetween[explosions.index] = a;
    173e:	21 ea       	ldi	r18, 0xA1	; 161
    1740:	39 e0       	ldi	r19, 0x09	; 9
    1742:	2c 0f       	add	r18, r28
    1744:	3d 1f       	adc	r19, r29
    1746:	28 0f       	add	r18, r24
    1748:	31 1d       	adc	r19, r1
    174a:	f9 01       	movw	r30, r18
    174c:	e8 5e       	subi	r30, 0xE8	; 232
    174e:	fe 4f       	sbci	r31, 0xFE	; 254
    1750:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1752:	b3 96       	adiw	r30, 0x23	; 35
    1754:	f0 82       	st	Z, r15
	explosions.index++;
    1756:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    1758:	c1 50       	subi	r28, 0x01	; 1
    175a:	d5 4f       	sbci	r29, 0xF5	; 245
    175c:	88 83       	st	Y, r24
    175e:	cf 5f       	subi	r28, 0xFF	; 255
    1760:	da 40       	sbci	r29, 0x0A	; 10
    1762:	20 e6       	ldi	r18, 0x60	; 96
    1764:	31 e0       	ldi	r19, 0x01	; 1
    1766:	fe 01       	movw	r30, r28
    1768:	ef 55       	subi	r30, 0x5F	; 95
    176a:	f6 4f       	sbci	r31, 0xF6	; 246
    176c:	de 01       	movw	r26, r28
    176e:	af 5b       	subi	r26, 0xBF	; 191
    1770:	b7 4f       	sbci	r27, 0xF7	; 247
    1772:	01 90       	ld	r0, Z+
    1774:	0d 92       	st	X+, r0
    1776:	21 50       	subi	r18, 0x01	; 1
    1778:	30 40       	sbci	r19, 0x00	; 0
    177a:	d9 f7       	brne	.-10     	; 0x1772 <main+0xd8e>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    177c:	c1 56       	subi	r28, 0x61	; 97
    177e:	d6 4f       	sbci	r29, 0xF6	; 246
    1780:	88 83       	st	Y, r24
    1782:	cf 59       	subi	r28, 0x9F	; 159
    1784:	d9 40       	sbci	r29, 0x09	; 9
    1786:	80 e6       	ldi	r24, 0x60	; 96
    1788:	91 e0       	ldi	r25, 0x01	; 1
    178a:	fe 01       	movw	r30, r28
    178c:	ef 5b       	subi	r30, 0xBF	; 191
    178e:	f7 4f       	sbci	r31, 0xF7	; 247
    1790:	ab e3       	ldi	r26, 0x3B	; 59
    1792:	b1 e0       	ldi	r27, 0x01	; 1
    1794:	01 90       	ld	r0, Z+
    1796:	0d 92       	st	X+, r0
    1798:	01 97       	sbiw	r24, 0x01	; 1
    179a:	e1 f7       	brne	.-8      	; 0x1794 <main+0xdb0>
	
	matrix = clearSingleMatrix(matrix);
    179c:	20 91 33 01 	lds	r18, 0x0133
    17a0:	30 91 34 01 	lds	r19, 0x0134
    17a4:	40 91 35 01 	lds	r20, 0x0135
    17a8:	50 91 36 01 	lds	r21, 0x0136
    17ac:	60 91 37 01 	lds	r22, 0x0137
    17b0:	70 91 38 01 	lds	r23, 0x0138
    17b4:	80 91 39 01 	lds	r24, 0x0139
    17b8:	90 91 3a 01 	lds	r25, 0x013A
    17bc:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    17c0:	f8 01       	movw	r30, r16
    17c2:	20 83       	st	Z, r18
    17c4:	31 83       	std	Z+1, r19	; 0x01
    17c6:	53 83       	std	Z+3, r21	; 0x03
    17c8:	64 83       	std	Z+4, r22	; 0x04
    17ca:	86 83       	std	Z+6, r24	; 0x06
    17cc:	97 83       	std	Z+7, r25	; 0x07
    17ce:	4d 7f       	andi	r20, 0xFD	; 253
	matrix.m[2] = SetBit(matrix.m[2], 1, 0);
    17d0:	42 83       	std	Z+2, r20	; 0x02
    17d2:	7d 7f       	andi	r23, 0xFD	; 253
	matrix.m[5] = SetBit(matrix.m[5], 1, 0);
    17d4:	75 83       	std	Z+5, r23	; 0x05
    17d6:	80 e6       	ldi	r24, 0x60	; 96
    17d8:	91 e0       	ldi	r25, 0x01	; 1
    17da:	eb e3       	ldi	r30, 0x3B	; 59
    17dc:	f1 e0       	ldi	r31, 0x01	; 1
    17de:	de 01       	movw	r26, r28
    17e0:	af 51       	subi	r26, 0x1F	; 31
    17e2:	b9 4f       	sbci	r27, 0xF9	; 249
    17e4:	01 90       	ld	r0, Z+
    17e6:	0d 92       	st	X+, r0
    17e8:	01 97       	sbiw	r24, 0x01	; 1
    17ea:	e1 f7       	brne	.-8      	; 0x17e4 <main+0xe00>
    17ec:	f6 01       	movw	r30, r12
    17ee:	80 81       	ld	r24, Z
    17f0:	98 e0       	ldi	r25, 0x08	; 8
    17f2:	f8 01       	movw	r30, r16
    17f4:	de 01       	movw	r26, r28
    17f6:	af 52       	subi	r26, 0x2F	; 47
    17f8:	b1 4d       	sbci	r27, 0xD1	; 209
    17fa:	01 90       	ld	r0, Z+
    17fc:	0d 92       	st	X+, r0
    17fe:	9a 95       	dec	r25
    1800:	e1 f7       	brne	.-8      	; 0x17fa <main+0xe16>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    1802:	a1 ee       	ldi	r26, 0xE1	; 225
    1804:	b6 e0       	ldi	r27, 0x06	; 6
    1806:	ac 0f       	add	r26, r28
    1808:	bd 1f       	adc	r27, r29
    180a:	f8 e0       	ldi	r31, 0x08	; 8
    180c:	8f 9f       	mul	r24, r31
    180e:	a0 0d       	add	r26, r0
    1810:	b1 1d       	adc	r27, r1
    1812:	11 24       	eor	r1, r1
    1814:	98 e0       	ldi	r25, 0x08	; 8
    1816:	fe 01       	movw	r30, r28
    1818:	ef 52       	subi	r30, 0x2F	; 47
    181a:	f1 4d       	sbci	r31, 0xD1	; 209
    181c:	01 90       	ld	r0, Z+
    181e:	0d 92       	st	X+, r0
    1820:	9a 95       	dec	r25
    1822:	e1 f7       	brne	.-8      	; 0x181c <main+0xe38>
	explosions.timeBetween[explosions.index] = a;
    1824:	21 ee       	ldi	r18, 0xE1	; 225
    1826:	36 e0       	ldi	r19, 0x06	; 6
    1828:	2c 0f       	add	r18, r28
    182a:	3d 1f       	adc	r19, r29
    182c:	28 0f       	add	r18, r24
    182e:	31 1d       	adc	r19, r1
    1830:	f9 01       	movw	r30, r18
    1832:	e8 5e       	subi	r30, 0xE8	; 232
    1834:	fe 4f       	sbci	r31, 0xFE	; 254
    1836:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1838:	b3 96       	adiw	r30, 0x23	; 35
    183a:	f0 82       	st	Z, r15
	explosions.index++;
    183c:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    183e:	c1 5c       	subi	r28, 0xC1	; 193
    1840:	d7 4f       	sbci	r29, 0xF7	; 247
    1842:	88 83       	st	Y, r24
    1844:	cf 53       	subi	r28, 0x3F	; 63
    1846:	d8 40       	sbci	r29, 0x08	; 8
    1848:	20 e6       	ldi	r18, 0x60	; 96
    184a:	31 e0       	ldi	r19, 0x01	; 1
    184c:	fe 01       	movw	r30, r28
    184e:	ef 51       	subi	r30, 0x1F	; 31
    1850:	f9 4f       	sbci	r31, 0xF9	; 249
    1852:	de 01       	movw	r26, r28
    1854:	af 57       	subi	r26, 0x7F	; 127
    1856:	ba 4f       	sbci	r27, 0xFA	; 250
    1858:	01 90       	ld	r0, Z+
    185a:	0d 92       	st	X+, r0
    185c:	21 50       	subi	r18, 0x01	; 1
    185e:	30 40       	sbci	r19, 0x00	; 0
    1860:	d9 f7       	brne	.-10     	; 0x1858 <main+0xe74>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    1862:	c1 52       	subi	r28, 0x21	; 33
    1864:	d9 4f       	sbci	r29, 0xF9	; 249
    1866:	88 83       	st	Y, r24
    1868:	cf 5d       	subi	r28, 0xDF	; 223
    186a:	d6 40       	sbci	r29, 0x06	; 6
    186c:	80 e6       	ldi	r24, 0x60	; 96
    186e:	91 e0       	ldi	r25, 0x01	; 1
    1870:	fe 01       	movw	r30, r28
    1872:	ef 57       	subi	r30, 0x7F	; 127
    1874:	fa 4f       	sbci	r31, 0xFA	; 250
    1876:	ab e3       	ldi	r26, 0x3B	; 59
    1878:	b1 e0       	ldi	r27, 0x01	; 1
    187a:	01 90       	ld	r0, Z+
    187c:	0d 92       	st	X+, r0
    187e:	01 97       	sbiw	r24, 0x01	; 1
    1880:	e1 f7       	brne	.-8      	; 0x187a <main+0xe96>
	
	matrix = clearSingleMatrix(matrix);
    1882:	20 91 33 01 	lds	r18, 0x0133
    1886:	30 91 34 01 	lds	r19, 0x0134
    188a:	40 91 35 01 	lds	r20, 0x0135
    188e:	50 91 36 01 	lds	r21, 0x0136
    1892:	60 91 37 01 	lds	r22, 0x0137
    1896:	70 91 38 01 	lds	r23, 0x0138
    189a:	80 91 39 01 	lds	r24, 0x0139
    189e:	90 91 3a 01 	lds	r25, 0x013A
    18a2:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    18a6:	f8 01       	movw	r30, r16
    18a8:	20 83       	st	Z, r18
    18aa:	31 83       	std	Z+1, r19	; 0x01
    18ac:	53 83       	std	Z+3, r21	; 0x03
    18ae:	64 83       	std	Z+4, r22	; 0x04
    18b0:	86 83       	std	Z+6, r24	; 0x06
    18b2:	97 83       	std	Z+7, r25	; 0x07
    18b4:	4e 7f       	andi	r20, 0xFE	; 254
	matrix.m[2] = SetBit(matrix.m[2], 0, 0);
    18b6:	42 83       	std	Z+2, r20	; 0x02
    18b8:	7e 7f       	andi	r23, 0xFE	; 254
	matrix.m[5] = SetBit(matrix.m[5], 0, 0);
    18ba:	75 83       	std	Z+5, r23	; 0x05
    18bc:	80 e6       	ldi	r24, 0x60	; 96
    18be:	91 e0       	ldi	r25, 0x01	; 1
    18c0:	eb e3       	ldi	r30, 0x3B	; 59
    18c2:	f1 e0       	ldi	r31, 0x01	; 1
    18c4:	de 01       	movw	r26, r28
    18c6:	af 5d       	subi	r26, 0xDF	; 223
    18c8:	bb 4f       	sbci	r27, 0xFB	; 251
    18ca:	01 90       	ld	r0, Z+
    18cc:	0d 92       	st	X+, r0
    18ce:	01 97       	sbiw	r24, 0x01	; 1
    18d0:	e1 f7       	brne	.-8      	; 0x18ca <main+0xee6>
    18d2:	f6 01       	movw	r30, r12
    18d4:	80 81       	ld	r24, Z
    18d6:	98 e0       	ldi	r25, 0x08	; 8
    18d8:	f8 01       	movw	r30, r16
    18da:	de 01       	movw	r26, r28
    18dc:	a7 53       	subi	r26, 0x37	; 55
    18de:	b1 4d       	sbci	r27, 0xD1	; 209
    18e0:	01 90       	ld	r0, Z+
    18e2:	0d 92       	st	X+, r0
    18e4:	9a 95       	dec	r25
    18e6:	e1 f7       	brne	.-8      	; 0x18e0 <main+0xefc>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    18e8:	a1 e2       	ldi	r26, 0x21	; 33
    18ea:	b4 e0       	ldi	r27, 0x04	; 4
    18ec:	ac 0f       	add	r26, r28
    18ee:	bd 1f       	adc	r27, r29
    18f0:	f8 e0       	ldi	r31, 0x08	; 8
    18f2:	8f 9f       	mul	r24, r31
    18f4:	a0 0d       	add	r26, r0
    18f6:	b1 1d       	adc	r27, r1
    18f8:	11 24       	eor	r1, r1
    18fa:	98 e0       	ldi	r25, 0x08	; 8
    18fc:	fe 01       	movw	r30, r28
    18fe:	e7 53       	subi	r30, 0x37	; 55
    1900:	f1 4d       	sbci	r31, 0xD1	; 209
    1902:	01 90       	ld	r0, Z+
    1904:	0d 92       	st	X+, r0
    1906:	9a 95       	dec	r25
    1908:	e1 f7       	brne	.-8      	; 0x1902 <main+0xf1e>
	explosions.timeBetween[explosions.index] = a;
    190a:	21 e2       	ldi	r18, 0x21	; 33
    190c:	34 e0       	ldi	r19, 0x04	; 4
    190e:	2c 0f       	add	r18, r28
    1910:	3d 1f       	adc	r19, r29
    1912:	28 0f       	add	r18, r24
    1914:	31 1d       	adc	r19, r1
    1916:	f9 01       	movw	r30, r18
    1918:	e8 5e       	subi	r30, 0xE8	; 232
    191a:	fe 4f       	sbci	r31, 0xFE	; 254
    191c:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    191e:	b3 96       	adiw	r30, 0x23	; 35
    1920:	f0 82       	st	Z, r15
	explosions.index++;
    1922:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    1924:	c1 58       	subi	r28, 0x81	; 129
    1926:	da 4f       	sbci	r29, 0xFA	; 250
    1928:	88 83       	st	Y, r24
    192a:	cf 57       	subi	r28, 0x7F	; 127
    192c:	d5 40       	sbci	r29, 0x05	; 5
    192e:	20 e6       	ldi	r18, 0x60	; 96
    1930:	31 e0       	ldi	r19, 0x01	; 1
    1932:	fe 01       	movw	r30, r28
    1934:	ef 5d       	subi	r30, 0xDF	; 223
    1936:	fb 4f       	sbci	r31, 0xFB	; 251
    1938:	de 01       	movw	r26, r28
    193a:	af 53       	subi	r26, 0x3F	; 63
    193c:	bd 4f       	sbci	r27, 0xFD	; 253
    193e:	01 90       	ld	r0, Z+
    1940:	0d 92       	st	X+, r0
    1942:	21 50       	subi	r18, 0x01	; 1
    1944:	30 40       	sbci	r19, 0x00	; 0
    1946:	d9 f7       	brne	.-10     	; 0x193e <main+0xf5a>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    1948:	c1 5e       	subi	r28, 0xE1	; 225
    194a:	db 4f       	sbci	r29, 0xFB	; 251
    194c:	88 83       	st	Y, r24
    194e:	cf 51       	subi	r28, 0x1F	; 31
    1950:	d4 40       	sbci	r29, 0x04	; 4
    1952:	80 e6       	ldi	r24, 0x60	; 96
    1954:	91 e0       	ldi	r25, 0x01	; 1
    1956:	fe 01       	movw	r30, r28
    1958:	ef 53       	subi	r30, 0x3F	; 63
    195a:	fd 4f       	sbci	r31, 0xFD	; 253
    195c:	ab e3       	ldi	r26, 0x3B	; 59
    195e:	b1 e0       	ldi	r27, 0x01	; 1
    1960:	01 90       	ld	r0, Z+
    1962:	0d 92       	st	X+, r0
    1964:	01 97       	sbiw	r24, 0x01	; 1
    1966:	e1 f7       	brne	.-8      	; 0x1960 <main+0xf7c>
	
	matrix = clearSingleMatrix(matrix);
    1968:	20 91 33 01 	lds	r18, 0x0133
    196c:	30 91 34 01 	lds	r19, 0x0134
    1970:	40 91 35 01 	lds	r20, 0x0135
    1974:	50 91 36 01 	lds	r21, 0x0136
    1978:	60 91 37 01 	lds	r22, 0x0137
    197c:	70 91 38 01 	lds	r23, 0x0138
    1980:	80 91 39 01 	lds	r24, 0x0139
    1984:	90 91 3a 01 	lds	r25, 0x013A
    1988:	0e 94 84 01 	call	0x308	; 0x308 <clearSingleMatrix>
    198c:	f8 01       	movw	r30, r16
    198e:	20 83       	st	Z, r18
    1990:	31 83       	std	Z+1, r19	; 0x01
    1992:	42 83       	std	Z+2, r20	; 0x02
    1994:	75 83       	std	Z+5, r23	; 0x05
    1996:	86 83       	std	Z+6, r24	; 0x06
    1998:	97 83       	std	Z+7, r25	; 0x07
	matrix.m[3] = 0x00;
    199a:	13 82       	std	Z+3, r1	; 0x03
	matrix.m[4] = 0x00;
    199c:	14 82       	std	Z+4, r1	; 0x04
    199e:	80 e6       	ldi	r24, 0x60	; 96
    19a0:	91 e0       	ldi	r25, 0x01	; 1
    19a2:	eb e3       	ldi	r30, 0x3B	; 59
    19a4:	f1 e0       	ldi	r31, 0x01	; 1
    19a6:	de 01       	movw	r26, r28
    19a8:	af 59       	subi	r26, 0x9F	; 159
    19aa:	be 4f       	sbci	r27, 0xFE	; 254
    19ac:	01 90       	ld	r0, Z+
    19ae:	0d 92       	st	X+, r0
    19b0:	01 97       	sbiw	r24, 0x01	; 1
    19b2:	e1 f7       	brne	.-8      	; 0x19ac <main+0xfc8>
    19b4:	f6 01       	movw	r30, r12
    19b6:	80 81       	ld	r24, Z
    19b8:	98 e0       	ldi	r25, 0x08	; 8
    19ba:	f8 01       	movw	r30, r16
    19bc:	de 01       	movw	r26, r28
    19be:	af 53       	subi	r26, 0x3F	; 63
    19c0:	b1 4d       	sbci	r27, 0xD1	; 209
    19c2:	01 90       	ld	r0, Z+
    19c4:	0d 92       	st	X+, r0
    19c6:	9a 95       	dec	r25
    19c8:	e1 f7       	brne	.-8      	; 0x19c2 <main+0xfde>
	
	return explosions;
}

Explosions pushExplosion(Explosions explosions, SingleMatrix matrix, unsigned char a, unsigned char b) {
	explosions.matricies[explosions.index] = matrix;
    19ca:	a1 e6       	ldi	r26, 0x61	; 97
    19cc:	b1 e0       	ldi	r27, 0x01	; 1
    19ce:	ac 0f       	add	r26, r28
    19d0:	bd 1f       	adc	r27, r29
    19d2:	f8 e0       	ldi	r31, 0x08	; 8
    19d4:	8f 9f       	mul	r24, r31
    19d6:	a0 0d       	add	r26, r0
    19d8:	b1 1d       	adc	r27, r1
    19da:	11 24       	eor	r1, r1
    19dc:	98 e0       	ldi	r25, 0x08	; 8
    19de:	fe 01       	movw	r30, r28
    19e0:	ef 53       	subi	r30, 0x3F	; 63
    19e2:	f1 4d       	sbci	r31, 0xD1	; 209
    19e4:	01 90       	ld	r0, Z+
    19e6:	0d 92       	st	X+, r0
    19e8:	9a 95       	dec	r25
    19ea:	e1 f7       	brne	.-8      	; 0x19e4 <main+0x1000>
	explosions.timeBetween[explosions.index] = a;
    19ec:	21 e6       	ldi	r18, 0x61	; 97
    19ee:	31 e0       	ldi	r19, 0x01	; 1
    19f0:	2c 0f       	add	r18, r28
    19f2:	3d 1f       	adc	r19, r29
    19f4:	28 0f       	add	r18, r24
    19f6:	31 1d       	adc	r19, r1
    19f8:	f9 01       	movw	r30, r18
    19fa:	e8 5e       	subi	r30, 0xE8	; 232
    19fc:	fe 4f       	sbci	r31, 0xFE	; 254
    19fe:	10 82       	st	Z, r1
	explosions.timeDuration[explosions.index] = b;
    1a00:	b3 96       	adiw	r30, 0x23	; 35
    1a02:	f0 82       	st	Z, r15
	explosions.index++;
    1a04:	8f 5f       	subi	r24, 0xFF	; 255
	
	return explosions;
    1a06:	c1 54       	subi	r28, 0x41	; 65
    1a08:	dd 4f       	sbci	r29, 0xFD	; 253
    1a0a:	88 83       	st	Y, r24
    1a0c:	cf 5b       	subi	r28, 0xBF	; 191
    1a0e:	d2 40       	sbci	r29, 0x02	; 2
    1a10:	20 e6       	ldi	r18, 0x60	; 96
    1a12:	31 e0       	ldi	r19, 0x01	; 1
    1a14:	fe 01       	movw	r30, r28
    1a16:	ef 59       	subi	r30, 0x9F	; 159
    1a18:	fe 4f       	sbci	r31, 0xFE	; 254
    1a1a:	de 01       	movw	r26, r28
    1a1c:	11 96       	adiw	r26, 0x01	; 1
    1a1e:	01 90       	ld	r0, Z+
    1a20:	0d 92       	st	X+, r0
    1a22:	21 50       	subi	r18, 0x01	; 1
    1a24:	30 40       	sbci	r19, 0x00	; 0
    1a26:	d9 f7       	brne	.-10     	; 0x1a1e <main+0x103a>
	explosions = pushExplosion(explosions, matrix, 0, 2);
    1a28:	c1 5a       	subi	r28, 0xA1	; 161
    1a2a:	de 4f       	sbci	r29, 0xFE	; 254
    1a2c:	88 83       	st	Y, r24
    1a2e:	cf 55       	subi	r28, 0x5F	; 95
    1a30:	d1 40       	sbci	r29, 0x01	; 1
    1a32:	80 e6       	ldi	r24, 0x60	; 96
    1a34:	91 e0       	ldi	r25, 0x01	; 1
    1a36:	fe 01       	movw	r30, r28
    1a38:	31 96       	adiw	r30, 0x01	; 1
    1a3a:	ab e3       	ldi	r26, 0x3B	; 59
    1a3c:	b1 e0       	ldi	r27, 0x01	; 1
    1a3e:	01 90       	ld	r0, Z+
    1a40:	0d 92       	st	X+, r0
    1a42:	01 97       	sbiw	r24, 0x01	; 1
    1a44:	e1 f7       	brne	.-8      	; 0x1a3e <main+0x105a>
	
	userMatrix = initSingleUserMatrix(userMatrix);
    1a46:	e0 90 9b 02 	lds	r14, 0x029B
    1a4a:	f0 90 9c 02 	lds	r15, 0x029C
    1a4e:	00 91 9d 02 	lds	r16, 0x029D
    1a52:	10 91 9e 02 	lds	r17, 0x029E
    1a56:	20 91 9f 02 	lds	r18, 0x029F
    1a5a:	30 91 a0 02 	lds	r19, 0x02A0
    1a5e:	40 91 a1 02 	lds	r20, 0x02A1
    1a62:	50 91 a2 02 	lds	r21, 0x02A2
    1a66:	60 91 a3 02 	lds	r22, 0x02A3
    1a6a:	70 91 a4 02 	lds	r23, 0x02A4
    1a6e:	ce 01       	movw	r24, r28
    1a70:	87 5b       	subi	r24, 0xB7	; 183
    1a72:	90 4d       	sbci	r25, 0xD0	; 208
    1a74:	0e 94 ba 01 	call	0x374	; 0x374 <initSingleUserMatrix>
    1a78:	8a e0       	ldi	r24, 0x0A	; 10
    1a7a:	fe 01       	movw	r30, r28
    1a7c:	e7 5b       	subi	r30, 0xB7	; 183
    1a7e:	f0 4d       	sbci	r31, 0xD0	; 208
    1a80:	ab e9       	ldi	r26, 0x9B	; 155
    1a82:	b2 e0       	ldi	r27, 0x02	; 2
    1a84:	01 90       	ld	r0, Z+
    1a86:	0d 92       	st	X+, r0
    1a88:	8a 95       	dec	r24
    1a8a:	e1 f7       	brne	.-8      	; 0x1a84 <main+0x10a0>
	
	while (1) {
		explosions = ExpTick(explosions);
    1a8c:	00 e6       	ldi	r16, 0x60	; 96
    1a8e:	11 e0       	ldi	r17, 0x01	; 1
    1a90:	8d b7       	in	r24, 0x3d	; 61
    1a92:	9e b7       	in	r25, 0x3e	; 62
    1a94:	80 56       	subi	r24, 0x60	; 96
    1a96:	91 40       	sbci	r25, 0x01	; 1
    1a98:	0f b6       	in	r0, 0x3f	; 63
    1a9a:	f8 94       	cli
    1a9c:	9e bf       	out	0x3e, r25	; 62
    1a9e:	0f be       	out	0x3f, r0	; 63
    1aa0:	8d bf       	out	0x3d, r24	; 61
    1aa2:	ad b7       	in	r26, 0x3d	; 61
    1aa4:	be b7       	in	r27, 0x3e	; 62
    1aa6:	11 96       	adiw	r26, 0x01	; 1
    1aa8:	eb e3       	ldi	r30, 0x3B	; 59
    1aaa:	f1 e0       	ldi	r31, 0x01	; 1
    1aac:	c8 01       	movw	r24, r16
    1aae:	01 90       	ld	r0, Z+
    1ab0:	0d 92       	st	X+, r0
    1ab2:	01 97       	sbiw	r24, 0x01	; 1
    1ab4:	e1 f7       	brne	.-8      	; 0x1aae <main+0x10ca>
    1ab6:	ce 01       	movw	r24, r28
    1ab8:	87 5b       	subi	r24, 0xB7	; 183
    1aba:	90 4d       	sbci	r25, 0xD0	; 208
    1abc:	0e 94 25 04 	call	0x84a	; 0x84a <ExpTick>
    1ac0:	fe 01       	movw	r30, r28
    1ac2:	e7 5b       	subi	r30, 0xB7	; 183
    1ac4:	f0 4d       	sbci	r31, 0xD0	; 208
    1ac6:	ab e3       	ldi	r26, 0x3B	; 59
    1ac8:	b1 e0       	ldi	r27, 0x01	; 1
    1aca:	c8 01       	movw	r24, r16
    1acc:	01 90       	ld	r0, Z+
    1ace:	0d 92       	st	X+, r0
    1ad0:	01 97       	sbiw	r24, 0x01	; 1
    1ad2:	e1 f7       	brne	.-8      	; 0x1acc <main+0x10e8>
		DeathTick();
    1ad4:	0f b6       	in	r0, 0x3f	; 63
    1ad6:	f8 94       	cli
    1ad8:	de bf       	out	0x3e, r29	; 62
    1ada:	0f be       	out	0x3f, r0	; 63
    1adc:	cd bf       	out	0x3d, r28	; 61
    1ade:	0e 94 cb 03 	call	0x796	; 0x796 <DeathTick>
		d3_setMatrixColor(userMatrix.m, GREEN);
    1ae2:	62 e0       	ldi	r22, 0x02	; 2
    1ae4:	8b e9       	ldi	r24, 0x9B	; 155
    1ae6:	92 e0       	ldi	r25, 0x02	; 2
    1ae8:	0e 94 6d 02 	call	0x4da	; 0x4da <d3_setMatrixColor>
	}
    1aec:	d1 cf       	rjmp	.-94     	; 0x1a90 <main+0x10ac>

00001aee <_exit>:
    1aee:	f8 94       	cli

00001af0 <__stop_program>:
    1af0:	ff cf       	rjmp	.-2      	; 0x1af0 <__stop_program>
